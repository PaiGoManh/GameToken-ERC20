{
	"id": "67edcd76b53ec55e3a423c040983ece6",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/GameToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.26;\nimport \"ERC20.sol\";\n\ncontract GameToken is ERC20 {\n    address public admin;\n\n    constructor() ERC20(\"Game Token\", \"GT\") {\n        _mint(msg.sender, 1000000000000000000000000); \n        admin = msg.sender;\n    }\n\n    modifier onlyAdmin {\n        require(msg.sender == admin, \"Unauthorized\");\n        _;\n    }\n\n    function mintTokens(address to, uint value) public onlyAdmin {\n        _mint(to, value);\n    }\n\n    function burnTokens(uint value) public {\n        _burn(msg.sender, value);\n    }\n}\n"
			},
			"ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"IERC20.sol\";\nimport {IERC20Metadata} from \"IRC20Metadata.sol\";\nimport {Context} from \"Context.sol\";\nimport {IERC20Errors} from \"draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}"
			},
			"draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}"
			},
			"Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}"
			},
			"IRC20Metadata.sol": {
				"content": "\n// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0x28ad9de5e26095f685a085591178af7aeac1427af1bf442986b5aee0a5b2a14a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad3864801aabbcc6f52361a1b86a3d4d342e283cc2036c47a3ef2df7e4a3c51\",\"dweb:/ipfs/QmezNWJGoPBwtHjsQae7dbqjeZgpbB2cHFE5nFBBzGvJFR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0x28ad9de5e26095f685a085591178af7aeac1427af1bf442986b5aee0a5b2a14a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad3864801aabbcc6f52361a1b86a3d4d342e283cc2036c47a3ef2df7e4a3c51\",\"dweb:/ipfs/QmezNWJGoPBwtHjsQae7dbqjeZgpbB2cHFE5nFBBzGvJFR\"]},\"ERC20.sol\":{\"keccak256\":\"0x63ee6e3f10cbcee22677e38976a825db40aa342f0daa95b5db5f6e4acd703df1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5fe44a9643559f959d598b70988b07341d7059384122a9580aa84be649d82668\",\"dweb:/ipfs/QmXkPpEFX6HLJcV9t9PBBTW9aL4X2NA5i5wd2sAiV7Ct7b\"]},\"IERC20.sol\":{\"keccak256\":\"0x13005ecf7cba588574563f1e2f8a9d166b4b23cbeec4e153584834db6a324120\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c7469e9231ec2fee28e304b4c3f69f70cf3d2bfab9d6d619c7676c52ac176712\",\"dweb:/ipfs/QmPNNxicR8bCc2BbWnEa8UXxaSfhcxRU4XT5QGjLWG7Cm2\"]},\"IRC20Metadata.sol\":{\"keccak256\":\"0x9568cd9ae872667840ad89d3091d7b5f211283babd4d8e85e3a663c92b797bbb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22fe505e3d9a8a3bb4935b4fc651899d653e0c5db75a75691bc9068452b46e39\",\"dweb:/ipfs/QmV9p5kedL54Nj9z1NWo9DaAPqn7Yzh9Z8bzpK9VeGmoYp\"]},\"draft-IERC6093.sol\":{\"keccak256\":\"0x4bde603ad95d6354b7c3504d245ba39e7163e7a528a3d737e4c1be6dbc513b6f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58238de4d750505416d2b0faf0c8f83a3438c93a5d35a0058e8c0f8b830ee2f5\",\"dweb:/ipfs/QmX5L92U9gF4fmr2nqMJ1y8VBFQPC54QfGC4sHbYFnTw72\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 52,
								"contract": "ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 58,
								"contract": "ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 60,
								"contract": "ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 62,
								"contract": "ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 64,
								"contract": "ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC20.sol\":{\"keccak256\":\"0x13005ecf7cba588574563f1e2f8a9d166b4b23cbeec4e153584834db6a324120\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c7469e9231ec2fee28e304b4c3f69f70cf3d2bfab9d6d619c7676c52ac176712\",\"dweb:/ipfs/QmPNNxicR8bCc2BbWnEa8UXxaSfhcxRU4XT5QGjLWG7Cm2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IRC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IRC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC20.sol\":{\"keccak256\":\"0x13005ecf7cba588574563f1e2f8a9d166b4b23cbeec4e153584834db6a324120\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c7469e9231ec2fee28e304b4c3f69f70cf3d2bfab9d6d619c7676c52ac176712\",\"dweb:/ipfs/QmPNNxicR8bCc2BbWnEa8UXxaSfhcxRU4XT5QGjLWG7Cm2\"]},\"IRC20Metadata.sol\":{\"keccak256\":\"0x9568cd9ae872667840ad89d3091d7b5f211283babd4d8e85e3a663c92b797bbb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22fe505e3d9a8a3bb4935b4fc651899d653e0c5db75a75691bc9068452b46e39\",\"dweb:/ipfs/QmV9p5kedL54Nj9z1NWo9DaAPqn7Yzh9Z8bzpK9VeGmoYp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/GameToken.sol": {
				"GameToken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "admin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "mintTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/GameToken.sol\":77:553  contract GameToken is ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/GameToken.sol\":138:268  constructor() ERC20(\"Game Token\", \"GT\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"ERC20.sol\":1556:1669  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0a\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xb1, 0x23b0b6b2902a37b5b2b7)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x02\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xf2, 0x11d5)\n  dup2\n  mstore\n  pop\n    /* \"ERC20.sol\":1630:1635  name_ */\n  dup2\n    /* \"ERC20.sol\":1622:1627  _name */\n  0x03\n    /* \"ERC20.sol\":1622:1635  _name = name_ */\n  swap1\n  dup2\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n  pop\n    /* \"ERC20.sol\":1645:1652  _symbol */\n  0x04\n    /* \"ERC20.sol\":1645:1662  _symbol = symbol_ */\n  tag_7\n    /* \"ERC20.sol\":1655:1662  symbol_ */\n  dup3\n    /* \"ERC20.sol\":1645:1652  _symbol */\n  dup3\n    /* \"ERC20.sol\":1645:1662  _symbol = symbol_ */\n  tag_6\n  jump\t// in\ntag_7:\n  pop\n    /* \"ERC20.sol\":1556:1669  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/GameToken.sol\":188:232  _mint(msg.sender, 1000000000000000000000000) */\n  tag_9\n    /* \"contracts/GameToken.sol\":194:204  msg.sender */\n  caller\n    /* \"contracts/GameToken.sol\":206:231  1000000000000000000000000 */\n  0xd3c21bcecceda1000000\n    /* \"contracts/GameToken.sol\":188:193  _mint */\n  shl(0x20, tag_10)\n    /* \"contracts/GameToken.sol\":188:232  _mint(msg.sender, 1000000000000000000000000) */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"contracts/GameToken.sol\":243:248  admin */\n  0x05\n    /* \"contracts/GameToken.sol\":243:261  admin = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"contracts/GameToken.sol\":251:261  msg.sender */\n  caller\n    /* \"contracts/GameToken.sol\":243:261  admin = msg.sender */\n  or\n  swap1\n  sstore\n    /* \"contracts/GameToken.sol\":77:553  contract GameToken is ERC20 {... */\n  jump(tag_35)\n    /* \"ERC20.sol\":7413:7621  function _mint(address account, uint256 value) internal {... */\ntag_10:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"ERC20.sol\":7483:7504  account == address(0) */\n  dup3\n  and\n    /* \"ERC20.sol\":7479:7570  if (account == address(0)) {... */\n  tag_13\n  jumpi\n    /* \"ERC20.sol\":7527:7559  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0xec442f05)\n  dup2\n  mstore\n    /* \"ERC20.sol\":7556:7557  0 */\n  0x00\n    /* \"ERC20.sol\":7527:7559  ERC20InvalidReceiver(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":2801:2852   */\n  mstore\n    /* \"#utility.yul\":2774:2792   */\n  0x24\n  add\n    /* \"ERC20.sol\":7527:7559  ERC20InvalidReceiver(address(0)) */\ntag_14:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"ERC20.sol\":7479:7570  if (account == address(0)) {... */\ntag_13:\n    /* \"ERC20.sol\":7579:7614  _update(address(0), account, value) */\n  tag_16\n    /* \"ERC20.sol\":7595:7596  0 */\n  0x00\n    /* \"ERC20.sol\":7599:7606  account */\n  dup4\n    /* \"ERC20.sol\":7608:7613  value */\n  dup4\n    /* \"ERC20.sol\":7579:7586  _update */\n  tag_17\n    /* \"ERC20.sol\":7579:7614  _update(address(0), account, value) */\n  jump\t// in\ntag_16:\n    /* \"ERC20.sol\":7413:7621  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"ERC20.sol\":5963:7070  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_17:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"ERC20.sol\":6052:6070  from == address(0) */\n  dup4\n  and\n    /* \"ERC20.sol\":6048:6588  if (from == address(0)) {... */\n  tag_19\n  jumpi\n    /* \"ERC20.sol\":6204:6209  value */\n  dup1\n    /* \"ERC20.sol\":6188:6200  _totalSupply */\n  0x02\n  0x00\n    /* \"ERC20.sol\":6188:6209  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_20\n  swap2\n  swap1\n  tag_21\n  jump\t// in\ntag_20:\n  swap1\n  swap2\n  sstore\n  pop\n    /* \"ERC20.sol\":6048:6588  if (from == address(0)) {... */\n  tag_22\n  swap1\n  pop\n  jump\ntag_19:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"ERC20.sol\":6262:6277  _balances[from] */\n  dup4\n  and\n    /* \"ERC20.sol\":6240:6259  uint256 fromBalance */\n  0x00\n    /* \"ERC20.sol\":6262:6277  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n    /* \"ERC20.sol\":6295:6314  fromBalance < value */\n  dup2\n  dup2\n  lt\n    /* \"ERC20.sol\":6291:6406  if (fromBalance < value) {... */\n  iszero\n  tag_23\n  jumpi\n    /* \"ERC20.sol\":6341:6391  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  shl(0xe2, 0x391434e3)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":3310:3342   */\n  dup6\n  and\n    /* \"ERC20.sol\":6341:6391  ERC20InsufficientBalance(from, fromBalance, value) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3292:3343   */\n  mstore\n    /* \"#utility.yul\":3359:3377   */\n  0x24\n  dup2\n  add\n    /* \"#utility.yul\":3352:3386   */\n  dup3\n  swap1\n  mstore\n    /* \"#utility.yul\":3402:3420   */\n  0x44\n  dup2\n  add\n    /* \"#utility.yul\":3395:3429   */\n  dup4\n  swap1\n  mstore\n    /* \"#utility.yul\":3265:3283   */\n  0x64\n  add\n    /* \"ERC20.sol\":6341:6391  ERC20InsufficientBalance(from, fromBalance, value) */\n  tag_14\n    /* \"#utility.yul\":3090:3435   */\n  jump\n    /* \"ERC20.sol\":6291:6406  if (fromBalance < value) {... */\ntag_23:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"ERC20.sol\":6526:6541  _balances[from] */\n  dup5\n  and\n    /* \"ERC20.sol\":6526:6535  _balances */\n  0x00\n    /* \"ERC20.sol\":6526:6541  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"ERC20.sol\":6544:6563  fromBalance - value */\n  swap1\n  dup3\n  swap1\n  sub\n    /* \"ERC20.sol\":6526:6563  _balances[from] = fromBalance - value */\n  swap1\n  sstore\n    /* \"ERC20.sol\":6048:6588  if (from == address(0)) {... */\ntag_22:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"ERC20.sol\":6602:6618  to == address(0) */\n  dup3\n  and\n    /* \"ERC20.sol\":6598:7023  if (to == address(0)) {... */\n  tag_26\n  jumpi\n    /* \"ERC20.sol\":6765:6777  _totalSupply */\n  0x02\n    /* \"ERC20.sol\":6765:6786  _totalSupply -= value */\n  dup1\n  sload\n  dup3\n  swap1\n  sub\n  swap1\n  sstore\n    /* \"ERC20.sol\":6598:7023  if (to == address(0)) {... */\n  jump(tag_27)\ntag_26:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"ERC20.sol\":6976:6989  _balances[to] */\n  dup3\n  and\n    /* \"ERC20.sol\":6976:6985  _balances */\n  0x00\n    /* \"ERC20.sol\":6976:6989  _balances[to] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"ERC20.sol\":6976:6998  _balances[to] += value */\n  dup1\n  sload\n  dup3\n  add\n  swap1\n  sstore\n    /* \"ERC20.sol\":6598:7023  if (to == address(0)) {... */\ntag_27:\n    /* \"ERC20.sol\":7053:7055  to */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"ERC20.sol\":7038:7063  Transfer(from, to, value) */\n  and\n    /* \"ERC20.sol\":7047:7051  from */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"ERC20.sol\":7038:7063  Transfer(from, to, value) */\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"ERC20.sol\":7057:7062  value */\n  dup4\n    /* \"ERC20.sol\":7038:7063  Transfer(from, to, value) */\n  mload(0x40)\n  tag_28\n  swap2\n    /* \"#utility.yul\":3586:3611   */\n  dup2\n  mstore\n    /* \"#utility.yul\":3574:3576   */\n  0x20\n    /* \"#utility.yul\":3559:3577   */\n  add\n  swap1\n    /* \"#utility.yul\":3440:3617   */\n  jump\n    /* \"ERC20.sol\":7038:7063  Transfer(from, to, value) */\ntag_28:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"ERC20.sol\":5963:7070  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_30:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:526   */\ntag_31:\n    /* \"#utility.yul\":225:226   */\n  0x01\n    /* \"#utility.yul\":221:233   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":268:280   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":289:350   */\n  tag_38\n  jumpi\n    /* \"#utility.yul\":343:347   */\n  0x7f\n    /* \"#utility.yul\":335:341   */\n  dup3\n    /* \"#utility.yul\":331:348   */\n  and\n    /* \"#utility.yul\":321:348   */\n  swap2\n  pop\n    /* \"#utility.yul\":289:350   */\ntag_38:\n    /* \"#utility.yul\":396:398   */\n  0x20\n    /* \"#utility.yul\":388:394   */\n  dup3\n    /* \"#utility.yul\":385:399   */\n  lt\n    /* \"#utility.yul\":365:383   */\n  dup2\n    /* \"#utility.yul\":362:400   */\n  sub\n    /* \"#utility.yul\":359:520   */\n  tag_39\n  jumpi\n    /* \"#utility.yul\":442:452   */\n  0x4e487b71\n    /* \"#utility.yul\":437:440   */\n  0xe0\n    /* \"#utility.yul\":433:453   */\n  shl\n    /* \"#utility.yul\":430:431   */\n  0x00\n    /* \"#utility.yul\":423:454   */\n  mstore\n    /* \"#utility.yul\":477:481   */\n  0x22\n    /* \"#utility.yul\":474:475   */\n  0x04\n    /* \"#utility.yul\":467:482   */\n  mstore\n    /* \"#utility.yul\":505:509   */\n  0x24\n    /* \"#utility.yul\":502:503   */\n  0x00\n    /* \"#utility.yul\":495:510   */\n  revert\n    /* \"#utility.yul\":359:520   */\ntag_39:\n  pop\n    /* \"#utility.yul\":146:526   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":657:1175   */\ntag_33:\n    /* \"#utility.yul\":759:761   */\n  0x1f\n    /* \"#utility.yul\":754:757   */\n  dup3\n    /* \"#utility.yul\":751:762   */\n  gt\n    /* \"#utility.yul\":748:1169   */\n  iszero\n  tag_42\n  jumpi\n    /* \"#utility.yul\":795:800   */\n  dup1\n    /* \"#utility.yul\":792:793   */\n  0x00\n    /* \"#utility.yul\":785:801   */\n  mstore\n    /* \"#utility.yul\":839:843   */\n  0x20\n    /* \"#utility.yul\":836:837   */\n  0x00\n    /* \"#utility.yul\":826:844   */\n  keccak256\n    /* \"#utility.yul\":909:911   */\n  0x1f\n    /* \"#utility.yul\":897:907   */\n  dup5\n    /* \"#utility.yul\":893:912   */\n  add\n    /* \"#utility.yul\":890:891   */\n  0x05\n    /* \"#utility.yul\":886:913   */\n  shr\n    /* \"#utility.yul\":880:884   */\n  dup2\n    /* \"#utility.yul\":876:914   */\n  add\n    /* \"#utility.yul\":945:949   */\n  0x20\n    /* \"#utility.yul\":933:943   */\n  dup6\n    /* \"#utility.yul\":930:950   */\n  lt\n    /* \"#utility.yul\":927:974   */\n  iszero\n  tag_43\n  jumpi\n  pop\n    /* \"#utility.yul\":968:972   */\n  dup1\n    /* \"#utility.yul\":927:974   */\ntag_43:\n    /* \"#utility.yul\":1023:1025   */\n  0x1f\n    /* \"#utility.yul\":1018:1021   */\n  dup5\n    /* \"#utility.yul\":1014:1026   */\n  add\n    /* \"#utility.yul\":1011:1012   */\n  0x05\n    /* \"#utility.yul\":1007:1027   */\n  shr\n    /* \"#utility.yul\":1001:1005   */\n  dup3\n    /* \"#utility.yul\":997:1028   */\n  add\n    /* \"#utility.yul\":987:1028   */\n  swap2\n  pop\n    /* \"#utility.yul\":1078:1159   */\ntag_44:\n    /* \"#utility.yul\":1096:1098   */\n  dup2\n    /* \"#utility.yul\":1089:1094   */\n  dup2\n    /* \"#utility.yul\":1086:1099   */\n  lt\n    /* \"#utility.yul\":1078:1159   */\n  iszero\n  tag_46\n  jumpi\n    /* \"#utility.yul\":1155:1156   */\n  0x00\n    /* \"#utility.yul\":1141:1157   */\n  dup2\n  sstore\n    /* \"#utility.yul\":1122:1123   */\n  0x01\n    /* \"#utility.yul\":1111:1124   */\n  add\n    /* \"#utility.yul\":1078:1159   */\n  jump(tag_44)\ntag_46:\n    /* \"#utility.yul\":1082:1085   */\n  pop\n  pop\n    /* \"#utility.yul\":748:1169   */\ntag_42:\n    /* \"#utility.yul\":657:1175   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1351:2650   */\ntag_6:\n    /* \"#utility.yul\":1471:1481   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1493:1523   */\n  dup2\n  gt\n    /* \"#utility.yul\":1490:1546   */\n  iszero\n  tag_50\n  jumpi\n    /* \"#utility.yul\":1526:1544   */\n  tag_50\n  tag_30\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":1555:1652   */\n  tag_51\n    /* \"#utility.yul\":1645:1651   */\n  dup2\n    /* \"#utility.yul\":1605:1643   */\n  tag_52\n    /* \"#utility.yul\":1637:1641   */\n  dup5\n    /* \"#utility.yul\":1631:1642   */\n  sload\n    /* \"#utility.yul\":1605:1643   */\n  tag_31\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":1599:1603   */\n  dup5\n    /* \"#utility.yul\":1555:1652   */\n  tag_33\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1701:1705   */\n  0x20\n    /* \"#utility.yul\":1732:1734   */\n  0x1f\n    /* \"#utility.yul\":1721:1735   */\n  dup3\n  gt\n    /* \"#utility.yul\":1749:1750   */\n  0x01\n    /* \"#utility.yul\":1744:2393   */\n  dup2\n  eq\n  tag_54\n  jumpi\n    /* \"#utility.yul\":2437:2438   */\n  0x00\n    /* \"#utility.yul\":2454:2460   */\n  dup4\n    /* \"#utility.yul\":2451:2540   */\n  iszero\n  tag_55\n  jumpi\n  pop\n    /* \"#utility.yul\":2506:2525   */\n  dup5\n  dup3\n  add\n    /* \"#utility.yul\":2500:2526   */\n  mload\n    /* \"#utility.yul\":2451:2540   */\ntag_55:\n  not(0x00)\n    /* \"#utility.yul\":1308:1309   */\n  0x03\n    /* \"#utility.yul\":1304:1315   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1300:1324   */\n  shr\n    /* \"#utility.yul\":1296:1325   */\n  not\n    /* \"#utility.yul\":1286:1326   */\n  and\n    /* \"#utility.yul\":1332:1333   */\n  0x01\n    /* \"#utility.yul\":1328:1339   */\n  dup5\n  swap1\n  shl\n    /* \"#utility.yul\":1283:1340   */\n  or\n    /* \"#utility.yul\":2553:2634   */\n  dup5\n  sstore\n    /* \"#utility.yul\":1714:2644   */\n  jump(tag_46)\n    /* \"#utility.yul\":1744:2393   */\ntag_54:\n    /* \"#utility.yul\":604:605   */\n  0x00\n    /* \"#utility.yul\":597:611   */\n  dup5\n  dup2\n  mstore\n    /* \"#utility.yul\":641:645   */\n  0x20\n    /* \"#utility.yul\":628:646   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":1780:1800   */\n  dup6\n  and\n  swap2\n    /* \"#utility.yul\":1898:2120   */\ntag_58:\n    /* \"#utility.yul\":1912:1919   */\n  dup3\n    /* \"#utility.yul\":1909:1910   */\n  dup2\n    /* \"#utility.yul\":1906:1920   */\n  lt\n    /* \"#utility.yul\":1898:2120   */\n  iszero\n  tag_60\n  jumpi\n    /* \"#utility.yul\":1994:2013   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":1988:2014   */\n  mload\n    /* \"#utility.yul\":1973:2015   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2101:2105   */\n  0x20\n    /* \"#utility.yul\":2086:2106   */\n  swap5\n  dup6\n  add\n  swap5\n    /* \"#utility.yul\":2054:2055   */\n  0x01\n    /* \"#utility.yul\":2042:2056   */\n  swap1\n  swap3\n  add\n  swap2\n    /* \"#utility.yul\":1928:1940   */\n  add\n    /* \"#utility.yul\":1898:2120   */\n  jump(tag_58)\ntag_60:\n    /* \"#utility.yul\":1902:1905   */\n  pop\n    /* \"#utility.yul\":2148:2154   */\n  dup5\n    /* \"#utility.yul\":2139:2146   */\n  dup3\n    /* \"#utility.yul\":2136:2155   */\n  lt\n    /* \"#utility.yul\":2133:2334   */\n  iszero\n  tag_61\n  jumpi\n    /* \"#utility.yul\":2209:2228   */\n  dup7\n  dup5\n  add\n    /* \"#utility.yul\":2203:2229   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2292:2293   */\n  0x03\n    /* \"#utility.yul\":2288:2302   */\n  dup8\n  swap1\n  shl\n    /* \"#utility.yul\":2304:2307   */\n  0xf8\n    /* \"#utility.yul\":2284:2308   */\n  and\n    /* \"#utility.yul\":2280:2317   */\n  shr\n    /* \"#utility.yul\":2276:2318   */\n  not\n    /* \"#utility.yul\":2261:2319   */\n  and\n    /* \"#utility.yul\":2246:2320   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2133:2334   */\ntag_61:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2380:2381   */\n  0x01\n    /* \"#utility.yul\":2364:2378   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2360:2382   */\n  add\n    /* \"#utility.yul\":2347:2383   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1351:2650   */\n  jump\t// out\n    /* \"#utility.yul\":2863:3085   */\ntag_21:\n    /* \"#utility.yul\":2928:2937   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":2949:2959   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":2946:3079   */\n  iszero\n  tag_64\n  jumpi\n    /* \"#utility.yul\":3001:3011   */\n  0x4e487b71\n    /* \"#utility.yul\":2996:2999   */\n  0xe0\n    /* \"#utility.yul\":2992:3012   */\n  shl\n    /* \"#utility.yul\":2989:2990   */\n  0x00\n    /* \"#utility.yul\":2982:3013   */\n  mstore\n    /* \"#utility.yul\":3036:3040   */\n  0x11\n    /* \"#utility.yul\":3033:3034   */\n  0x04\n    /* \"#utility.yul\":3026:3041   */\n  mstore\n    /* \"#utility.yul\":3064:3068   */\n  0x24\n    /* \"#utility.yul\":3061:3062   */\n  0x00\n    /* \"#utility.yul\":3054:3069   */\n  revert\n    /* \"#utility.yul\":2946:3079   */\ntag_64:\n    /* \"#utility.yul\":2863:3085   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3440:3617   */\ntag_35:\n    /* \"contracts/GameToken.sol\":77:553  contract GameToken is ERC20 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/GameToken.sol\":77:553  contract GameToken is ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_15\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xf0dda65c\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xf851a440\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x6d1b229d\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ERC20.sol\":1734:1823  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":3953:4139  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_20\n      tag_21\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n        /* \"#utility.yul\":1085:1099   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1078:1100   */\n      iszero\n        /* \"#utility.yul\":1060:1101   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1048:1050   */\n      0x20\n        /* \"#utility.yul\":1033:1051   */\n      add\n        /* \"ERC20.sol\":3953:4139  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      tag_18\n        /* \"#utility.yul\":920:1107   */\n      jump\n        /* \"ERC20.sol\":2804:2901  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n        /* \"ERC20.sol\":2882:2894  _totalSupply */\n      sload(0x02)\n        /* \"ERC20.sol\":2804:2901  function totalSupply() public view virtual returns (uint256) {... */\n    tag_26:\n      mload(0x40)\n        /* \"#utility.yul\":1258:1283   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1246:1248   */\n      0x20\n        /* \"#utility.yul\":1231:1249   */\n      add\n        /* \"ERC20.sol\":2804:2901  function totalSupply() public view virtual returns (uint256) {... */\n      tag_18\n        /* \"#utility.yul\":1112:1289   */\n      jump\n        /* \"ERC20.sol\":4731:4975  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_20\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n        /* \"ERC20.sol\":2662:2744  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"ERC20.sol\":2735:2737  18 */\n      0x12\n        /* \"#utility.yul\":1815:1851   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1803:1805   */\n      0x20\n        /* \"#utility.yul\":1788:1806   */\n      add\n        /* \"ERC20.sol\":2662:2744  function decimals() public view virtual returns (uint8) {... */\n      tag_18\n        /* \"#utility.yul\":1673:1857   */\n      jump\n        /* \"contracts/GameToken.sol\":471:551  function burnTokens(uint value) public {... */\n    tag_8:\n      tag_39\n      tag_40\n      calldatasize\n      0x04\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      stop\n        /* \"ERC20.sol\":2959:3075  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_9:\n      tag_26\n      tag_44\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_44:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":3050:3068  _balances[account] */\n      and\n        /* \"ERC20.sol\":3024:3031  uint256 */\n      0x00\n        /* \"ERC20.sol\":3050:3068  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"ERC20.sol\":2959:3075  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\n        /* \"ERC20.sol\":1936:2029  function symbol() public view virtual returns (string memory) {... */\n    tag_10:\n      tag_16\n      tag_49\n      jump\t// in\n        /* \"ERC20.sol\":3270:3448  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_11:\n      tag_20\n      tag_52\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n        /* \"ERC20.sol\":3506:3646  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_12:\n      tag_26\n      tag_56\n      calldatasize\n      0x04\n      tag_57\n      jump\t// in\n    tag_56:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":3612:3630  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"ERC20.sol\":3586:3593  uint256 */\n      0x00\n        /* \"ERC20.sol\":3612:3630  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"ERC20.sol\":3612:3623  _allowances */\n      0x01\n        /* \"ERC20.sol\":3612:3630  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20.sol\":3612:3639  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"ERC20.sol\":3506:3646  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      jump\n        /* \"contracts/GameToken.sol\":371:465  function mintTokens(address to, uint value) public onlyAdmin {... */\n    tag_13:\n      tag_39\n      tag_61\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n        /* \"contracts/GameToken.sol\":111:131  address public admin */\n    tag_14:\n      sload(0x05)\n      tag_63\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_63:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2713:2745   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2695:2746   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2683:2685   */\n      0x20\n        /* \"#utility.yul\":2668:2686   */\n      add\n        /* \"contracts/GameToken.sol\":111:131  address public admin */\n      tag_18\n        /* \"#utility.yul\":2549:2752   */\n      jump\n        /* \"ERC20.sol\":1734:1823  function name() public view virtual returns (string memory) {... */\n    tag_17:\n        /* \"ERC20.sol\":1779:1792  string memory */\n      0x60\n        /* \"ERC20.sol\":1811:1816  _name */\n      0x03\n        /* \"ERC20.sol\":1804:1816  return _name */\n      dup1\n      sload\n      tag_68\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_70\n      swap1\n      tag_69\n      jump\t// in\n    tag_70:\n      dup1\n      iszero\n      tag_71\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_72\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_71)\n    tag_72:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_73:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_73\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_71:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"ERC20.sol\":1734:1823  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":3953:4139  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_23:\n        /* \"ERC20.sol\":4026:4030  bool */\n      0x00\n        /* \"Context.sol\":735:745  msg.sender */\n      caller\n        /* \"ERC20.sol\":4080:4111  _approve(owner, spender, value) */\n      tag_77\n        /* \"Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"ERC20.sol\":4096:4103  spender */\n      dup6\n        /* \"ERC20.sol\":4105:4110  value */\n      dup6\n        /* \"ERC20.sol\":4080:4088  _approve */\n      tag_78\n        /* \"ERC20.sol\":4080:4111  _approve(owner, spender, value) */\n      jump\t// in\n    tag_77:\n        /* \"ERC20.sol\":4128:4132  true */\n      0x01\n        /* \"ERC20.sol\":4121:4132  return true */\n      swap2\n      pop\n      pop\n        /* \"ERC20.sol\":3953:4139  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_74:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":4731:4975  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_33:\n        /* \"ERC20.sol\":4818:4822  bool */\n      0x00\n        /* \"Context.sol\":735:745  msg.sender */\n      caller\n        /* \"ERC20.sol\":4874:4911  _spendAllowance(from, spender, value) */\n      tag_82\n        /* \"ERC20.sol\":4890:4894  from */\n      dup6\n        /* \"Context.sol\":735:745  msg.sender */\n      dup3\n        /* \"ERC20.sol\":4905:4910  value */\n      dup6\n        /* \"ERC20.sol\":4874:4889  _spendAllowance */\n      tag_83\n        /* \"ERC20.sol\":4874:4911  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_82:\n        /* \"ERC20.sol\":4921:4947  _transfer(from, to, value) */\n      tag_84\n        /* \"ERC20.sol\":4931:4935  from */\n      dup6\n        /* \"ERC20.sol\":4937:4939  to */\n      dup6\n        /* \"ERC20.sol\":4941:4946  value */\n      dup6\n        /* \"ERC20.sol\":4921:4930  _transfer */\n      tag_85\n        /* \"ERC20.sol\":4921:4947  _transfer(from, to, value) */\n      jump\t// in\n    tag_84:\n      pop\n        /* \"ERC20.sol\":4964:4968  true */\n      0x01\n      swap5\n        /* \"ERC20.sol\":4731:4975  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/GameToken.sol\":471:551  function burnTokens(uint value) public {... */\n    tag_42:\n        /* \"contracts/GameToken.sol\":520:544  _burn(msg.sender, value) */\n      tag_88\n        /* \"contracts/GameToken.sol\":526:536  msg.sender */\n      caller\n        /* \"contracts/GameToken.sol\":538:543  value */\n      dup3\n        /* \"contracts/GameToken.sol\":520:525  _burn */\n      tag_89\n        /* \"contracts/GameToken.sol\":520:544  _burn(msg.sender, value) */\n      jump\t// in\n    tag_88:\n        /* \"contracts/GameToken.sol\":471:551  function burnTokens(uint value) public {... */\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":1936:2029  function symbol() public view virtual returns (string memory) {... */\n    tag_49:\n        /* \"ERC20.sol\":1983:1996  string memory */\n      0x60\n        /* \"ERC20.sol\":2015:2022  _symbol */\n      0x04\n        /* \"ERC20.sol\":2008:2022  return _symbol */\n      dup1\n      sload\n      tag_68\n      swap1\n      tag_69\n      jump\t// in\n        /* \"ERC20.sol\":3270:3448  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_53:\n        /* \"ERC20.sol\":3339:3343  bool */\n      0x00\n        /* \"Context.sol\":735:745  msg.sender */\n      caller\n        /* \"ERC20.sol\":3393:3420  _transfer(owner, to, value) */\n      tag_77\n        /* \"Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"ERC20.sol\":3410:3412  to */\n      dup6\n        /* \"ERC20.sol\":3414:3419  value */\n      dup6\n        /* \"ERC20.sol\":3393:3402  _transfer */\n      tag_85\n        /* \"ERC20.sol\":3393:3420  _transfer(owner, to, value) */\n      jump\t// in\n        /* \"contracts/GameToken.sol\":371:465  function mintTokens(address to, uint value) public onlyAdmin {... */\n    tag_62:\n        /* \"contracts/GameToken.sol\":325:330  admin */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"contracts/GameToken.sol\":311:321  msg.sender */\n      caller\n        /* \"contracts/GameToken.sol\":311:330  msg.sender == admin */\n      eq\n        /* \"contracts/GameToken.sol\":303:347  require(msg.sender == admin, \"Unauthorized\") */\n      tag_102\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3344:3346   */\n      0x20\n        /* \"contracts/GameToken.sol\":303:347  require(msg.sender == admin, \"Unauthorized\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3326:3347   */\n      mstore\n        /* \"#utility.yul\":3383:3385   */\n      0x0c\n        /* \"#utility.yul\":3363:3381   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3356:3386   */\n      mstore\n      shl(0xa2, 0x155b985d5d1a1bdc9a5e9959)\n        /* \"#utility.yul\":3402:3420   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3395:3437   */\n      mstore\n        /* \"#utility.yul\":3454:3472   */\n      0x64\n      add\n        /* \"contracts/GameToken.sol\":303:347  require(msg.sender == admin, \"Unauthorized\") */\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_102:\n        /* \"contracts/GameToken.sol\":442:458  _mint(to, value) */\n      tag_106\n        /* \"contracts/GameToken.sol\":448:450  to */\n      dup3\n        /* \"contracts/GameToken.sol\":452:457  value */\n      dup3\n        /* \"contracts/GameToken.sol\":442:447  _mint */\n      tag_107\n        /* \"contracts/GameToken.sol\":442:458  _mint(to, value) */\n      jump\t// in\n    tag_106:\n        /* \"contracts/GameToken.sol\":371:465  function mintTokens(address to, uint value) public onlyAdmin {... */\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":8681:8809  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_78:\n        /* \"ERC20.sol\":8765:8802  _approve(owner, spender, value, true) */\n      tag_110\n        /* \"ERC20.sol\":8774:8779  owner */\n      dup4\n        /* \"ERC20.sol\":8781:8788  spender */\n      dup4\n        /* \"ERC20.sol\":8790:8795  value */\n      dup4\n        /* \"ERC20.sol\":8797:8801  true */\n      0x01\n        /* \"ERC20.sol\":8765:8773  _approve */\n      tag_111\n        /* \"ERC20.sol\":8765:8802  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_110:\n        /* \"ERC20.sol\":8681:8809  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":10370:10847  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_83:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":3612:3630  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"ERC20.sol\":10469:10493  uint256 currentAllowance */\n      0x00\n        /* \"ERC20.sol\":3612:3630  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"ERC20.sol\":3612:3623  _allowances */\n      0x01\n        /* \"ERC20.sol\":3612:3630  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20.sol\":3612:3639  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"ERC20.sol\":10535:10572  currentAllowance != type(uint256).max */\n      dup2\n      eq\n        /* \"ERC20.sol\":10531:10841  if (currentAllowance != type(uint256).max) {... */\n      tag_118\n      jumpi\n        /* \"ERC20.sol\":10611:10616  value */\n      dup2\n        /* \"ERC20.sol\":10592:10608  currentAllowance */\n      dup2\n        /* \"ERC20.sol\":10592:10616  currentAllowance < value */\n      lt\n        /* \"ERC20.sol\":10588:10718  if (currentAllowance < value) {... */\n      iszero\n      tag_115\n      jumpi\n        /* \"ERC20.sol\":10643:10703  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      shl(0xe1, 0x7dc7a0d9)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3703:3735   */\n      dup5\n      and\n        /* \"ERC20.sol\":10643:10703  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3685:3736   */\n      mstore\n        /* \"#utility.yul\":3752:3770   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":3745:3779   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":3795:3813   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":3788:3822   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":3658:3676   */\n      0x64\n      add\n        /* \"ERC20.sol\":10643:10703  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      tag_103\n        /* \"#utility.yul\":3483:3828   */\n      jump\n        /* \"ERC20.sol\":10588:10718  if (currentAllowance < value) {... */\n    tag_115:\n        /* \"ERC20.sol\":10759:10816  _approve(owner, spender, currentAllowance - value, false) */\n      tag_118\n        /* \"ERC20.sol\":10768:10773  owner */\n      dup5\n        /* \"ERC20.sol\":10775:10782  spender */\n      dup5\n        /* \"ERC20.sol\":10803:10808  value */\n      dup5\n        /* \"ERC20.sol\":10784:10800  currentAllowance */\n      dup5\n        /* \"ERC20.sol\":10784:10808  currentAllowance - value */\n      sub\n        /* \"ERC20.sol\":10810:10815  false */\n      0x00\n        /* \"ERC20.sol\":10759:10767  _approve */\n      tag_111\n        /* \"ERC20.sol\":10759:10816  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_118:\n        /* \"ERC20.sol\":10459:10847  {... */\n      pop\n        /* \"ERC20.sol\":10370:10847  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":5348:5648  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_85:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":5431:5449  from == address(0) */\n      dup4\n      and\n        /* \"ERC20.sol\":5427:5513  if (from == address(0)) {... */\n      tag_120\n      jumpi\n        /* \"ERC20.sol\":5472:5502  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"ERC20.sol\":5499:5500  0 */\n      0x00\n        /* \"ERC20.sol\":5472:5502  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2695:2746   */\n      mstore\n        /* \"#utility.yul\":2668:2686   */\n      0x24\n      add\n        /* \"ERC20.sol\":5472:5502  ERC20InvalidSender(address(0)) */\n      tag_103\n        /* \"#utility.yul\":2549:2752   */\n      jump\n        /* \"ERC20.sol\":5427:5513  if (from == address(0)) {... */\n    tag_120:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":5526:5542  to == address(0) */\n      dup3\n      and\n        /* \"ERC20.sol\":5522:5608  if (to == address(0)) {... */\n      tag_122\n      jumpi\n        /* \"ERC20.sol\":5565:5597  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"ERC20.sol\":5594:5595  0 */\n      0x00\n        /* \"ERC20.sol\":5565:5597  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2695:2746   */\n      mstore\n        /* \"#utility.yul\":2668:2686   */\n      0x24\n      add\n        /* \"ERC20.sol\":5565:5597  ERC20InvalidReceiver(address(0)) */\n      tag_103\n        /* \"#utility.yul\":2549:2752   */\n      jump\n        /* \"ERC20.sol\":5522:5608  if (to == address(0)) {... */\n    tag_122:\n        /* \"ERC20.sol\":5617:5641  _update(from, to, value) */\n      tag_110\n        /* \"ERC20.sol\":5625:5629  from */\n      dup4\n        /* \"ERC20.sol\":5631:5633  to */\n      dup4\n        /* \"ERC20.sol\":5635:5640  value */\n      dup4\n        /* \"ERC20.sol\":5617:5624  _update */\n      tag_125\n        /* \"ERC20.sol\":5617:5641  _update(from, to, value) */\n      jump\t// in\n        /* \"ERC20.sol\":7939:8145  function _burn(address account, uint256 value) internal {... */\n    tag_89:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":8009:8030  account == address(0) */\n      dup3\n      and\n        /* \"ERC20.sol\":8005:8094  if (account == address(0)) {... */\n      tag_127\n      jumpi\n        /* \"ERC20.sol\":8053:8083  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"ERC20.sol\":8080:8081  0 */\n      0x00\n        /* \"ERC20.sol\":8053:8083  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2695:2746   */\n      mstore\n        /* \"#utility.yul\":2668:2686   */\n      0x24\n      add\n        /* \"ERC20.sol\":8053:8083  ERC20InvalidSender(address(0)) */\n      tag_103\n        /* \"#utility.yul\":2549:2752   */\n      jump\n        /* \"ERC20.sol\":8005:8094  if (account == address(0)) {... */\n    tag_127:\n        /* \"ERC20.sol\":8103:8138  _update(account, address(0), value) */\n      tag_106\n        /* \"ERC20.sol\":8111:8118  account */\n      dup3\n        /* \"ERC20.sol\":8128:8129  0 */\n      0x00\n        /* \"ERC20.sol\":8132:8137  value */\n      dup4\n        /* \"ERC20.sol\":8103:8110  _update */\n      tag_125\n        /* \"ERC20.sol\":8103:8138  _update(account, address(0), value) */\n      jump\t// in\n        /* \"ERC20.sol\":7413:7621  function _mint(address account, uint256 value) internal {... */\n    tag_107:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":7483:7504  account == address(0) */\n      dup3\n      and\n        /* \"ERC20.sol\":7479:7570  if (account == address(0)) {... */\n      tag_131\n      jumpi\n        /* \"ERC20.sol\":7527:7559  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"ERC20.sol\":7556:7557  0 */\n      0x00\n        /* \"ERC20.sol\":7527:7559  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2695:2746   */\n      mstore\n        /* \"#utility.yul\":2668:2686   */\n      0x24\n      add\n        /* \"ERC20.sol\":7527:7559  ERC20InvalidReceiver(address(0)) */\n      tag_103\n        /* \"#utility.yul\":2549:2752   */\n      jump\n        /* \"ERC20.sol\":7479:7570  if (account == address(0)) {... */\n    tag_131:\n        /* \"ERC20.sol\":7579:7614  _update(address(0), account, value) */\n      tag_106\n        /* \"ERC20.sol\":7595:7596  0 */\n      0x00\n        /* \"ERC20.sol\":7599:7606  account */\n      dup4\n        /* \"ERC20.sol\":7608:7613  value */\n      dup4\n        /* \"ERC20.sol\":7579:7586  _update */\n      tag_125\n        /* \"ERC20.sol\":7579:7614  _update(address(0), account, value) */\n      jump\t// in\n        /* \"ERC20.sol\":9656:10088  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_111:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":9768:9787  owner == address(0) */\n      dup5\n      and\n        /* \"ERC20.sol\":9764:9853  if (owner == address(0)) {... */\n      tag_135\n      jumpi\n        /* \"ERC20.sol\":9810:9842  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xe602df05)\n      dup2\n      mstore\n        /* \"ERC20.sol\":9839:9840  0 */\n      0x00\n        /* \"ERC20.sol\":9810:9842  ERC20InvalidApprover(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2695:2746   */\n      mstore\n        /* \"#utility.yul\":2668:2686   */\n      0x24\n      add\n        /* \"ERC20.sol\":9810:9842  ERC20InvalidApprover(address(0)) */\n      tag_103\n        /* \"#utility.yul\":2549:2752   */\n      jump\n        /* \"ERC20.sol\":9764:9853  if (owner == address(0)) {... */\n    tag_135:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":9866:9887  spender == address(0) */\n      dup4\n      and\n        /* \"ERC20.sol\":9862:9952  if (spender == address(0)) {... */\n      tag_137\n      jumpi\n        /* \"ERC20.sol\":9910:9941  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4a1406b1)\n      dup2\n      mstore\n        /* \"ERC20.sol\":9938:9939  0 */\n      0x00\n        /* \"ERC20.sol\":9910:9941  ERC20InvalidSpender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2695:2746   */\n      mstore\n        /* \"#utility.yul\":2668:2686   */\n      0x24\n      add\n        /* \"ERC20.sol\":9910:9941  ERC20InvalidSpender(address(0)) */\n      tag_103\n        /* \"#utility.yul\":2549:2752   */\n      jump\n        /* \"ERC20.sol\":9862:9952  if (spender == address(0)) {... */\n    tag_137:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":9961:9979  _allowances[owner] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ERC20.sol\":9961:9972  _allowances */\n      0x01\n        /* \"ERC20.sol\":9961:9979  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20.sol\":9961:9988  _allowances[owner][spender] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"ERC20.sol\":9961:9996  _allowances[owner][spender] = value */\n      dup3\n      swap1\n      sstore\n        /* \"ERC20.sol\":10006:10082  if (emitEvent) {... */\n      dup1\n      iszero\n      tag_118\n      jumpi\n        /* \"ERC20.sol\":10056:10063  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":10040:10071  Approval(owner, spender, value) */\n      and\n        /* \"ERC20.sol\":10049:10054  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":10040:10071  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"ERC20.sol\":10065:10070  value */\n      dup5\n        /* \"ERC20.sol\":10040:10071  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_140\n      swap2\n        /* \"#utility.yul\":1258:1283   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1246:1248   */\n      0x20\n        /* \"#utility.yul\":1231:1249   */\n      add\n      swap1\n        /* \"#utility.yul\":1112:1289   */\n      jump\n        /* \"ERC20.sol\":10040:10071  Approval(owner, spender, value) */\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC20.sol\":9656:10088  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":5963:7070  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_125:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":6052:6070  from == address(0) */\n      dup4\n      and\n        /* \"ERC20.sol\":6048:6588  if (from == address(0)) {... */\n      tag_142\n      jumpi\n        /* \"ERC20.sol\":6204:6209  value */\n      dup1\n        /* \"ERC20.sol\":6188:6200  _totalSupply */\n      0x02\n      0x00\n        /* \"ERC20.sol\":6188:6209  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_143\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_143:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"ERC20.sol\":6048:6588  if (from == address(0)) {... */\n      tag_145\n      swap1\n      pop\n      jump\n    tag_142:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":6262:6277  _balances[from] */\n      dup4\n      and\n        /* \"ERC20.sol\":6240:6259  uint256 fromBalance */\n      0x00\n        /* \"ERC20.sol\":6262:6277  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"ERC20.sol\":6295:6314  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"ERC20.sol\":6291:6406  if (fromBalance < value) {... */\n      iszero\n      tag_146\n      jumpi\n        /* \"ERC20.sol\":6341:6391  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      shl(0xe2, 0x391434e3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3703:3735   */\n      dup6\n      and\n        /* \"ERC20.sol\":6341:6391  ERC20InsufficientBalance(from, fromBalance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3685:3736   */\n      mstore\n        /* \"#utility.yul\":3752:3770   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":3745:3779   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":3795:3813   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":3788:3822   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":3658:3676   */\n      0x64\n      add\n        /* \"ERC20.sol\":6341:6391  ERC20InsufficientBalance(from, fromBalance, value) */\n      tag_103\n        /* \"#utility.yul\":3483:3828   */\n      jump\n        /* \"ERC20.sol\":6291:6406  if (fromBalance < value) {... */\n    tag_146:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":6526:6541  _balances[from] */\n      dup5\n      and\n        /* \"ERC20.sol\":6526:6535  _balances */\n      0x00\n        /* \"ERC20.sol\":6526:6541  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"ERC20.sol\":6544:6563  fromBalance - value */\n      swap1\n      dup3\n      swap1\n      sub\n        /* \"ERC20.sol\":6526:6563  _balances[from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"ERC20.sol\":6048:6588  if (from == address(0)) {... */\n    tag_145:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":6602:6618  to == address(0) */\n      dup3\n      and\n        /* \"ERC20.sol\":6598:7023  if (to == address(0)) {... */\n      tag_148\n      jumpi\n        /* \"ERC20.sol\":6765:6777  _totalSupply */\n      0x02\n        /* \"ERC20.sol\":6765:6786  _totalSupply -= value */\n      dup1\n      sload\n      dup3\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"ERC20.sol\":6598:7023  if (to == address(0)) {... */\n      jump(tag_149)\n    tag_148:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":6976:6989  _balances[to] */\n      dup3\n      and\n        /* \"ERC20.sol\":6976:6985  _balances */\n      0x00\n        /* \"ERC20.sol\":6976:6989  _balances[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"ERC20.sol\":6976:6998  _balances[to] += value */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n        /* \"ERC20.sol\":6598:7023  if (to == address(0)) {... */\n    tag_149:\n        /* \"ERC20.sol\":7053:7055  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":7038:7063  Transfer(from, to, value) */\n      and\n        /* \"ERC20.sol\":7047:7051  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":7038:7063  Transfer(from, to, value) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"ERC20.sol\":7057:7062  value */\n      dup4\n        /* \"ERC20.sol\":7038:7063  Transfer(from, to, value) */\n      mload(0x40)\n      tag_150\n      swap2\n        /* \"#utility.yul\":1258:1283   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1246:1248   */\n      0x20\n        /* \"#utility.yul\":1231:1249   */\n      add\n      swap1\n        /* \"#utility.yul\":1112:1289   */\n      jump\n        /* \"ERC20.sol\":7038:7063  Transfer(from, to, value) */\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC20.sol\":5963:7070  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:432   */\n    tag_19:\n        /* \"#utility.yul\":163:165   */\n      0x20\n        /* \"#utility.yul\":152:161   */\n      dup2\n        /* \"#utility.yul\":145:166   */\n      mstore\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":195:201   */\n      dup3\n        /* \"#utility.yul\":189:202   */\n      mload\n        /* \"#utility.yul\":238:244   */\n      dup1\n        /* \"#utility.yul\":233:235   */\n      0x20\n        /* \"#utility.yul\":222:231   */\n      dup5\n        /* \"#utility.yul\":218:236   */\n      add\n        /* \"#utility.yul\":211:245   */\n      mstore\n        /* \"#utility.yul\":297:303   */\n      dup1\n        /* \"#utility.yul\":292:294   */\n      0x20\n        /* \"#utility.yul\":284:290   */\n      dup6\n        /* \"#utility.yul\":280:295   */\n      add\n        /* \"#utility.yul\":275:277   */\n      0x40\n        /* \"#utility.yul\":264:273   */\n      dup6\n        /* \"#utility.yul\":260:278   */\n      add\n        /* \"#utility.yul\":254:304   */\n      mcopy\n        /* \"#utility.yul\":353:354   */\n      0x00\n        /* \"#utility.yul\":348:350   */\n      0x40\n        /* \"#utility.yul\":339:345   */\n      dup3\n        /* \"#utility.yul\":328:337   */\n      dup6\n        /* \"#utility.yul\":324:346   */\n      add\n        /* \"#utility.yul\":320:351   */\n      add\n        /* \"#utility.yul\":313:355   */\n      mstore\n        /* \"#utility.yul\":423:425   */\n      0x40\n        /* \"#utility.yul\":416:418   */\n      0x1f\n        /* \"#utility.yul\":412:419   */\n      not\n        /* \"#utility.yul\":407:409   */\n      0x1f\n        /* \"#utility.yul\":399:405   */\n      dup4\n        /* \"#utility.yul\":395:410   */\n      add\n        /* \"#utility.yul\":391:420   */\n      and\n        /* \"#utility.yul\":380:389   */\n      dup5\n        /* \"#utility.yul\":376:421   */\n      add\n        /* \"#utility.yul\":372:426   */\n      add\n        /* \"#utility.yul\":364:426   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":14:432   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":437:610   */\n    tag_151:\n        /* \"#utility.yul\":505:525   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":554:585   */\n      dup2\n      and\n        /* \"#utility.yul\":544:586   */\n      dup2\n      eq\n        /* \"#utility.yul\":534:604   */\n      tag_155\n      jumpi\n        /* \"#utility.yul\":600:601   */\n      0x00\n        /* \"#utility.yul\":597:598   */\n      dup1\n        /* \"#utility.yul\":590:602   */\n      revert\n        /* \"#utility.yul\":534:604   */\n    tag_155:\n        /* \"#utility.yul\":437:610   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:915   */\n    tag_22:\n        /* \"#utility.yul\":683:689   */\n      0x00\n        /* \"#utility.yul\":691:697   */\n      dup1\n        /* \"#utility.yul\":744:746   */\n      0x40\n        /* \"#utility.yul\":732:741   */\n      dup4\n        /* \"#utility.yul\":723:730   */\n      dup6\n        /* \"#utility.yul\":719:742   */\n      sub\n        /* \"#utility.yul\":715:747   */\n      slt\n        /* \"#utility.yul\":712:764   */\n      iszero\n      tag_157\n      jumpi\n        /* \"#utility.yul\":760:761   */\n      0x00\n        /* \"#utility.yul\":757:758   */\n      dup1\n        /* \"#utility.yul\":750:762   */\n      revert\n        /* \"#utility.yul\":712:764   */\n    tag_157:\n        /* \"#utility.yul\":783:812   */\n      tag_158\n        /* \"#utility.yul\":802:811   */\n      dup4\n        /* \"#utility.yul\":783:812   */\n      tag_151\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":773:812   */\n      swap5\n        /* \"#utility.yul\":881:883   */\n      0x20\n        /* \"#utility.yul\":866:884   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":853:885   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":615:915   */\n      jump\t// out\n        /* \"#utility.yul\":1294:1668   */\n    tag_32:\n        /* \"#utility.yul\":1371:1377   */\n      0x00\n        /* \"#utility.yul\":1379:1385   */\n      dup1\n        /* \"#utility.yul\":1387:1393   */\n      0x00\n        /* \"#utility.yul\":1440:1442   */\n      0x60\n        /* \"#utility.yul\":1428:1437   */\n      dup5\n        /* \"#utility.yul\":1419:1426   */\n      dup7\n        /* \"#utility.yul\":1415:1438   */\n      sub\n        /* \"#utility.yul\":1411:1443   */\n      slt\n        /* \"#utility.yul\":1408:1460   */\n      iszero\n      tag_162\n      jumpi\n        /* \"#utility.yul\":1456:1457   */\n      0x00\n        /* \"#utility.yul\":1453:1454   */\n      dup1\n        /* \"#utility.yul\":1446:1458   */\n      revert\n        /* \"#utility.yul\":1408:1460   */\n    tag_162:\n        /* \"#utility.yul\":1479:1508   */\n      tag_163\n        /* \"#utility.yul\":1498:1507   */\n      dup5\n        /* \"#utility.yul\":1479:1508   */\n      tag_151\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":1469:1508   */\n      swap3\n      pop\n        /* \"#utility.yul\":1527:1565   */\n      tag_164\n        /* \"#utility.yul\":1561:1563   */\n      0x20\n        /* \"#utility.yul\":1550:1559   */\n      dup6\n        /* \"#utility.yul\":1546:1564   */\n      add\n        /* \"#utility.yul\":1527:1565   */\n      tag_151\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":1294:1668   */\n      swap3\n      swap6\n        /* \"#utility.yul\":1517:1565   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1634:1636   */\n      0x40\n        /* \"#utility.yul\":1619:1637   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1606:1638   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1294:1668   */\n      jump\t// out\n        /* \"#utility.yul\":1862:2088   */\n    tag_41:\n        /* \"#utility.yul\":1921:1927   */\n      0x00\n        /* \"#utility.yul\":1974:1976   */\n      0x20\n        /* \"#utility.yul\":1962:1971   */\n      dup3\n        /* \"#utility.yul\":1953:1960   */\n      dup5\n        /* \"#utility.yul\":1949:1972   */\n      sub\n        /* \"#utility.yul\":1945:1977   */\n      slt\n        /* \"#utility.yul\":1942:1994   */\n      iszero\n      tag_167\n      jumpi\n        /* \"#utility.yul\":1990:1991   */\n      0x00\n        /* \"#utility.yul\":1987:1988   */\n      dup1\n        /* \"#utility.yul\":1980:1992   */\n      revert\n        /* \"#utility.yul\":1942:1994   */\n    tag_167:\n      pop\n        /* \"#utility.yul\":2035:2058   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1862:2088   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2093:2279   */\n    tag_45:\n        /* \"#utility.yul\":2152:2158   */\n      0x00\n        /* \"#utility.yul\":2205:2207   */\n      0x20\n        /* \"#utility.yul\":2193:2202   */\n      dup3\n        /* \"#utility.yul\":2184:2191   */\n      dup5\n        /* \"#utility.yul\":2180:2203   */\n      sub\n        /* \"#utility.yul\":2176:2208   */\n      slt\n        /* \"#utility.yul\":2173:2225   */\n      iszero\n      tag_169\n      jumpi\n        /* \"#utility.yul\":2221:2222   */\n      0x00\n        /* \"#utility.yul\":2218:2219   */\n      dup1\n        /* \"#utility.yul\":2211:2223   */\n      revert\n        /* \"#utility.yul\":2173:2225   */\n    tag_169:\n        /* \"#utility.yul\":2244:2273   */\n      tag_170\n        /* \"#utility.yul\":2263:2272   */\n      dup3\n        /* \"#utility.yul\":2244:2273   */\n      tag_151\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":2234:2273   */\n      swap4\n        /* \"#utility.yul\":2093:2279   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2284:2544   */\n    tag_57:\n        /* \"#utility.yul\":2352:2358   */\n      0x00\n        /* \"#utility.yul\":2360:2366   */\n      dup1\n        /* \"#utility.yul\":2413:2415   */\n      0x40\n        /* \"#utility.yul\":2401:2410   */\n      dup4\n        /* \"#utility.yul\":2392:2399   */\n      dup6\n        /* \"#utility.yul\":2388:2411   */\n      sub\n        /* \"#utility.yul\":2384:2416   */\n      slt\n        /* \"#utility.yul\":2381:2433   */\n      iszero\n      tag_172\n      jumpi\n        /* \"#utility.yul\":2429:2430   */\n      0x00\n        /* \"#utility.yul\":2426:2427   */\n      dup1\n        /* \"#utility.yul\":2419:2431   */\n      revert\n        /* \"#utility.yul\":2381:2433   */\n    tag_172:\n        /* \"#utility.yul\":2452:2481   */\n      tag_173\n        /* \"#utility.yul\":2471:2480   */\n      dup4\n        /* \"#utility.yul\":2452:2481   */\n      tag_151\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":2442:2481   */\n      swap2\n      pop\n        /* \"#utility.yul\":2500:2538   */\n      tag_174\n        /* \"#utility.yul\":2534:2536   */\n      0x20\n        /* \"#utility.yul\":2523:2532   */\n      dup5\n        /* \"#utility.yul\":2519:2537   */\n      add\n        /* \"#utility.yul\":2500:2538   */\n      tag_151\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":2490:2538   */\n      swap1\n      pop\n        /* \"#utility.yul\":2284:2544   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2757:3137   */\n    tag_69:\n        /* \"#utility.yul\":2836:2837   */\n      0x01\n        /* \"#utility.yul\":2832:2844   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2879:2891   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2900:2961   */\n      tag_177\n      jumpi\n        /* \"#utility.yul\":2954:2958   */\n      0x7f\n        /* \"#utility.yul\":2946:2952   */\n      dup3\n        /* \"#utility.yul\":2942:2959   */\n      and\n        /* \"#utility.yul\":2932:2959   */\n      swap2\n      pop\n        /* \"#utility.yul\":2900:2961   */\n    tag_177:\n        /* \"#utility.yul\":3007:3009   */\n      0x20\n        /* \"#utility.yul\":2999:3005   */\n      dup3\n        /* \"#utility.yul\":2996:3010   */\n      lt\n        /* \"#utility.yul\":2976:2994   */\n      dup2\n        /* \"#utility.yul\":2973:3011   */\n      sub\n        /* \"#utility.yul\":2970:3131   */\n      tag_178\n      jumpi\n        /* \"#utility.yul\":3053:3063   */\n      0x4e487b71\n        /* \"#utility.yul\":3048:3051   */\n      0xe0\n        /* \"#utility.yul\":3044:3064   */\n      shl\n        /* \"#utility.yul\":3041:3042   */\n      0x00\n        /* \"#utility.yul\":3034:3065   */\n      mstore\n        /* \"#utility.yul\":3088:3092   */\n      0x22\n        /* \"#utility.yul\":3085:3086   */\n      0x04\n        /* \"#utility.yul\":3078:3093   */\n      mstore\n        /* \"#utility.yul\":3116:3120   */\n      0x24\n        /* \"#utility.yul\":3113:3114   */\n      0x00\n        /* \"#utility.yul\":3106:3121   */\n      revert\n        /* \"#utility.yul\":2970:3131   */\n    tag_178:\n      pop\n        /* \"#utility.yul\":2757:3137   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3833:4055   */\n    tag_144:\n        /* \"#utility.yul\":3898:3907   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3919:3929   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3916:4049   */\n      iszero\n      tag_74\n      jumpi\n        /* \"#utility.yul\":3971:3981   */\n      0x4e487b71\n        /* \"#utility.yul\":3966:3969   */\n      0xe0\n        /* \"#utility.yul\":3962:3982   */\n      shl\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3952:3983   */\n      mstore\n        /* \"#utility.yul\":4006:4010   */\n      0x11\n        /* \"#utility.yul\":4003:4004   */\n      0x04\n        /* \"#utility.yul\":3996:4011   */\n      mstore\n        /* \"#utility.yul\":4034:4038   */\n      0x24\n        /* \"#utility.yul\":4031:4032   */\n      0x00\n        /* \"#utility.yul\":4024:4039   */\n      revert\n\n    auxdata: 0xa2646970667358221220bf95607444b8822a53ca3f8d86ee923f334aa985a7e52cebe17d6b73f546e03064736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_674": {
									"entryPoint": null,
									"id": 674,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_81": {
									"entryPoint": null,
									"id": 81,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_384": {
									"entryPoint": 158,
									"id": 384,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_update_351": {
									"entryPoint": 219,
									"id": 351,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 851,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 589,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 665,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 533,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 513,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3619:6",
										"nodeType": "YulBlock",
										"src": "0:3619:6",
										"statements": [
											{
												"nativeSrc": "6:3:6",
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:6",
													"nodeType": "YulBlock",
													"src": "46:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:6",
																		"nodeType": "YulLiteral",
																		"src": "63:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:6",
																				"nodeType": "YulLiteral",
																				"src": "70:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:6",
																				"nodeType": "YulLiteral",
																				"src": "75:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:6"
																		},
																		"nativeSrc": "66:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:6"
																},
																"nativeSrc": "56:31:6",
																"nodeType": "YulFunctionCall",
																"src": "56:31:6"
															},
															"nativeSrc": "56:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:6",
																		"nodeType": "YulLiteral",
																		"src": "103:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:6",
																		"nodeType": "YulLiteral",
																		"src": "106:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:6"
																},
																"nativeSrc": "96:15:6",
																"nodeType": "YulFunctionCall",
																"src": "96:15:6"
															},
															"nativeSrc": "96:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:6",
																		"nodeType": "YulLiteral",
																		"src": "127:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:6",
																		"nodeType": "YulLiteral",
																		"src": "130:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:6"
																},
																"nativeSrc": "120:15:6",
																"nodeType": "YulFunctionCall",
																"src": "120:15:6"
															},
															"nativeSrc": "120:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:6",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:6"
											},
											{
												"body": {
													"nativeSrc": "201:325:6",
													"nodeType": "YulBlock",
													"src": "201:325:6",
													"statements": [
														{
															"nativeSrc": "211:22:6",
															"nodeType": "YulAssignment",
															"src": "211:22:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "225:1:6",
																		"nodeType": "YulLiteral",
																		"src": "225:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "228:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "228:4:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "221:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "221:3:6"
																},
																"nativeSrc": "221:12:6",
																"nodeType": "YulFunctionCall",
																"src": "221:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "211:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:6"
																}
															]
														},
														{
															"nativeSrc": "242:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "242:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "272:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "272:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:6",
																		"nodeType": "YulLiteral",
																		"src": "278:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "268:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "268:3:6"
																},
																"nativeSrc": "268:12:6",
																"nodeType": "YulFunctionCall",
																"src": "268:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "246:18:6",
																	"nodeType": "YulTypedName",
																	"src": "246:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "319:31:6",
																"nodeType": "YulBlock",
																"src": "319:31:6",
																"statements": [
																	{
																		"nativeSrc": "321:27:6",
																		"nodeType": "YulAssignment",
																		"src": "321:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "335:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "335:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "343:4:6",
																					"nodeType": "YulLiteral",
																					"src": "343:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "331:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "331:3:6"
																			},
																			"nativeSrc": "331:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "331:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "321:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "321:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "299:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "299:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "292:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "292:6:6"
																},
																"nativeSrc": "292:26:6",
																"nodeType": "YulFunctionCall",
																"src": "292:26:6"
															},
															"nativeSrc": "289:61:6",
															"nodeType": "YulIf",
															"src": "289:61:6"
														},
														{
															"body": {
																"nativeSrc": "409:111:6",
																"nodeType": "YulBlock",
																"src": "409:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "430:1:6",
																					"nodeType": "YulLiteral",
																					"src": "430:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "437:3:6",
																							"nodeType": "YulLiteral",
																							"src": "437:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "442:10:6",
																							"nodeType": "YulLiteral",
																							"src": "442:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "433:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "433:3:6"
																					},
																					"nativeSrc": "433:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "433:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "423:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "423:6:6"
																			},
																			"nativeSrc": "423:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "423:31:6"
																		},
																		"nativeSrc": "423:31:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "423:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "474:1:6",
																					"nodeType": "YulLiteral",
																					"src": "474:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "477:4:6",
																					"nodeType": "YulLiteral",
																					"src": "477:4:6",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "467:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "467:6:6"
																			},
																			"nativeSrc": "467:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "467:15:6"
																		},
																		"nativeSrc": "467:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "467:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "502:1:6",
																					"nodeType": "YulLiteral",
																					"src": "502:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "505:4:6",
																					"nodeType": "YulLiteral",
																					"src": "505:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "495:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "495:6:6"
																			},
																			"nativeSrc": "495:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "495:15:6"
																		},
																		"nativeSrc": "495:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "495:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "365:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "365:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "388:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "388:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "396:2:6",
																				"nodeType": "YulLiteral",
																				"src": "396:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "385:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "385:2:6"
																		},
																		"nativeSrc": "385:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "385:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "362:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "362:2:6"
																},
																"nativeSrc": "362:38:6",
																"nodeType": "YulFunctionCall",
																"src": "362:38:6"
															},
															"nativeSrc": "359:161:6",
															"nodeType": "YulIf",
															"src": "359:161:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "146:380:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "181:4:6",
														"nodeType": "YulTypedName",
														"src": "181:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "190:6:6",
														"nodeType": "YulTypedName",
														"src": "190:6:6",
														"type": ""
													}
												],
												"src": "146:380:6"
											},
											{
												"body": {
													"nativeSrc": "587:65:6",
													"nodeType": "YulBlock",
													"src": "587:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "604:1:6",
																		"nodeType": "YulLiteral",
																		"src": "604:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "607:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "607:3:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "597:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:6"
																},
																"nativeSrc": "597:14:6",
																"nodeType": "YulFunctionCall",
																"src": "597:14:6"
															},
															"nativeSrc": "597:14:6",
															"nodeType": "YulExpressionStatement",
															"src": "597:14:6"
														},
														{
															"nativeSrc": "620:26:6",
															"nodeType": "YulAssignment",
															"src": "620:26:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "638:1:6",
																		"nodeType": "YulLiteral",
																		"src": "638:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "641:4:6",
																		"nodeType": "YulLiteral",
																		"src": "641:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "628:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "628:9:6"
																},
																"nativeSrc": "628:18:6",
																"nodeType": "YulFunctionCall",
																"src": "628:18:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "620:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "620:4:6"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "531:121:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "570:3:6",
														"nodeType": "YulTypedName",
														"src": "570:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "578:4:6",
														"nodeType": "YulTypedName",
														"src": "578:4:6",
														"type": ""
													}
												],
												"src": "531:121:6"
											},
											{
												"body": {
													"nativeSrc": "738:437:6",
													"nodeType": "YulBlock",
													"src": "738:437:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "771:398:6",
																"nodeType": "YulBlock",
																"src": "771:398:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "792:1:6",
																					"nodeType": "YulLiteral",
																					"src": "792:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "795:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "795:5:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "785:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "785:6:6"
																			},
																			"nativeSrc": "785:16:6",
																			"nodeType": "YulFunctionCall",
																			"src": "785:16:6"
																		},
																		"nativeSrc": "785:16:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "785:16:6"
																	},
																	{
																		"nativeSrc": "814:30:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "814:30:6",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "836:1:6",
																					"nodeType": "YulLiteral",
																					"src": "836:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "839:4:6",
																					"nodeType": "YulLiteral",
																					"src": "839:4:6",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "826:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "826:9:6"
																			},
																			"nativeSrc": "826:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "826:18:6"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "818:4:6",
																				"nodeType": "YulTypedName",
																				"src": "818:4:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "857:57:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "857:57:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "880:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "880:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "890:1:6",
																							"nodeType": "YulLiteral",
																							"src": "890:1:6",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "897:10:6",
																									"nodeType": "YulIdentifier",
																									"src": "897:10:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "909:2:6",
																									"nodeType": "YulLiteral",
																									"src": "909:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "893:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "893:3:6"
																							},
																							"nativeSrc": "893:19:6",
																							"nodeType": "YulFunctionCall",
																							"src": "893:19:6"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "886:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "886:3:6"
																					},
																					"nativeSrc": "886:27:6",
																					"nodeType": "YulFunctionCall",
																					"src": "886:27:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "876:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "876:3:6"
																			},
																			"nativeSrc": "876:38:6",
																			"nodeType": "YulFunctionCall",
																			"src": "876:38:6"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "861:11:6",
																				"nodeType": "YulTypedName",
																				"src": "861:11:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "951:23:6",
																			"nodeType": "YulBlock",
																			"src": "951:23:6",
																			"statements": [
																				{
																					"nativeSrc": "953:19:6",
																					"nodeType": "YulAssignment",
																					"src": "953:19:6",
																					"value": {
																						"name": "data",
																						"nativeSrc": "968:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "968:4:6"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "953:11:6",
																							"nodeType": "YulIdentifier",
																							"src": "953:11:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "933:10:6",
																					"nodeType": "YulIdentifier",
																					"src": "933:10:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "945:4:6",
																					"nodeType": "YulLiteral",
																					"src": "945:4:6",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "930:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "930:2:6"
																			},
																			"nativeSrc": "930:20:6",
																			"nodeType": "YulFunctionCall",
																			"src": "930:20:6"
																		},
																		"nativeSrc": "927:47:6",
																		"nodeType": "YulIf",
																		"src": "927:47:6"
																	},
																	{
																		"nativeSrc": "987:41:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "987:41:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1001:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "1001:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1011:1:6",
																							"nodeType": "YulLiteral",
																							"src": "1011:1:6",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1018:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "1018:3:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1023:2:6",
																									"nodeType": "YulLiteral",
																									"src": "1023:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1014:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "1014:3:6"
																							},
																							"nativeSrc": "1014:12:6",
																							"nodeType": "YulFunctionCall",
																							"src": "1014:12:6"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1007:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "1007:3:6"
																					},
																					"nativeSrc": "1007:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "1007:20:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "997:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "997:3:6"
																			},
																			"nativeSrc": "997:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "997:31:6"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "991:2:6",
																				"nodeType": "YulTypedName",
																				"src": "991:2:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1041:24:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1041:24:6",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1054:11:6",
																			"nodeType": "YulIdentifier",
																			"src": "1054:11:6"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1045:5:6",
																				"nodeType": "YulTypedName",
																				"src": "1045:5:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1139:20:6",
																			"nodeType": "YulBlock",
																			"src": "1139:20:6",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1148:5:6",
																								"nodeType": "YulIdentifier",
																								"src": "1148:5:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1155:1:6",
																								"nodeType": "YulLiteral",
																								"src": "1155:1:6",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "1141:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "1141:6:6"
																						},
																						"nativeSrc": "1141:16:6",
																						"nodeType": "YulFunctionCall",
																						"src": "1141:16:6"
																					},
																					"nativeSrc": "1141:16:6",
																					"nodeType": "YulExpressionStatement",
																					"src": "1141:16:6"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "1089:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "1089:5:6"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "1096:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "1096:2:6"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1086:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "1086:2:6"
																			},
																			"nativeSrc": "1086:13:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1086:13:6"
																		},
																		"nativeSrc": "1078:81:6",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1100:26:6",
																			"nodeType": "YulBlock",
																			"src": "1100:26:6",
																			"statements": [
																				{
																					"nativeSrc": "1102:22:6",
																					"nodeType": "YulAssignment",
																					"src": "1102:22:6",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1115:5:6",
																								"nodeType": "YulIdentifier",
																								"src": "1115:5:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1122:1:6",
																								"nodeType": "YulLiteral",
																								"src": "1122:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1111:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "1111:3:6"
																						},
																						"nativeSrc": "1111:13:6",
																						"nodeType": "YulFunctionCall",
																						"src": "1111:13:6"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "1102:5:6",
																							"nodeType": "YulIdentifier",
																							"src": "1102:5:6"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1082:3:6",
																			"nodeType": "YulBlock",
																			"src": "1082:3:6",
																			"statements": []
																		},
																		"src": "1078:81:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "754:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "754:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "759:2:6",
																		"nodeType": "YulLiteral",
																		"src": "759:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "751:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "751:2:6"
																},
																"nativeSrc": "751:11:6",
																"nodeType": "YulFunctionCall",
																"src": "751:11:6"
															},
															"nativeSrc": "748:421:6",
															"nodeType": "YulIf",
															"src": "748:421:6"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "657:518:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "710:5:6",
														"nodeType": "YulTypedName",
														"src": "710:5:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "717:3:6",
														"nodeType": "YulTypedName",
														"src": "717:3:6",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "722:10:6",
														"nodeType": "YulTypedName",
														"src": "722:10:6",
														"type": ""
													}
												],
												"src": "657:518:6"
											},
											{
												"body": {
													"nativeSrc": "1265:81:6",
													"nodeType": "YulBlock",
													"src": "1265:81:6",
													"statements": [
														{
															"nativeSrc": "1275:65:6",
															"nodeType": "YulAssignment",
															"src": "1275:65:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "1290:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "1290:4:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1308:1:6",
																										"nodeType": "YulLiteral",
																										"src": "1308:1:6",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "1311:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "1311:3:6"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1304:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "1304:3:6"
																								},
																								"nativeSrc": "1304:11:6",
																								"nodeType": "YulFunctionCall",
																								"src": "1304:11:6"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1321:1:6",
																										"nodeType": "YulLiteral",
																										"src": "1321:1:6",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "1317:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "1317:3:6"
																								},
																								"nativeSrc": "1317:6:6",
																								"nodeType": "YulFunctionCall",
																								"src": "1317:6:6"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "1300:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "1300:3:6"
																						},
																						"nativeSrc": "1300:24:6",
																						"nodeType": "YulFunctionCall",
																						"src": "1300:24:6"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1296:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1296:3:6"
																				},
																				"nativeSrc": "1296:29:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1296:29:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1286:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1286:3:6"
																		},
																		"nativeSrc": "1286:40:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1286:40:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1332:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1332:1:6",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "1335:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "1335:3:6"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1328:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1328:3:6"
																		},
																		"nativeSrc": "1328:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1328:11:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1283:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1283:2:6"
																},
																"nativeSrc": "1283:57:6",
																"nodeType": "YulFunctionCall",
																"src": "1283:57:6"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "1275:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1275:4:6"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "1180:166:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1242:4:6",
														"nodeType": "YulTypedName",
														"src": "1242:4:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1248:3:6",
														"nodeType": "YulTypedName",
														"src": "1248:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "1256:4:6",
														"nodeType": "YulTypedName",
														"src": "1256:4:6",
														"type": ""
													}
												],
												"src": "1180:166:6"
											},
											{
												"body": {
													"nativeSrc": "1447:1203:6",
													"nodeType": "YulBlock",
													"src": "1447:1203:6",
													"statements": [
														{
															"nativeSrc": "1457:24:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1457:24:6",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "1477:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1477:3:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1471:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1471:5:6"
																},
																"nativeSrc": "1471:10:6",
																"nodeType": "YulFunctionCall",
																"src": "1471:10:6"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "1461:6:6",
																	"nodeType": "YulTypedName",
																	"src": "1461:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1524:22:6",
																"nodeType": "YulBlock",
																"src": "1524:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1526:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "1526:16:6"
																			},
																			"nativeSrc": "1526:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1526:18:6"
																		},
																		"nativeSrc": "1526:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1526:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1496:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1496:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1512:2:6",
																						"nodeType": "YulLiteral",
																						"src": "1512:2:6",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1516:1:6",
																						"nodeType": "YulLiteral",
																						"src": "1516:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1508:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1508:3:6"
																				},
																				"nativeSrc": "1508:10:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1508:10:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1520:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1520:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1504:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1504:3:6"
																		},
																		"nativeSrc": "1504:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1504:18:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1493:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1493:2:6"
																},
																"nativeSrc": "1493:30:6",
																"nodeType": "YulFunctionCall",
																"src": "1493:30:6"
															},
															"nativeSrc": "1490:56:6",
															"nodeType": "YulIf",
															"src": "1490:56:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "1599:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1599:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "1637:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "1637:4:6"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "1631:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "1631:5:6"
																				},
																				"nativeSrc": "1631:11:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1631:11:6"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "1605:25:6",
																			"nodeType": "YulIdentifier",
																			"src": "1605:25:6"
																		},
																		"nativeSrc": "1605:38:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1605:38:6"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "1645:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1645:6:6"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "1555:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "1555:43:6"
																},
																"nativeSrc": "1555:97:6",
																"nodeType": "YulFunctionCall",
																"src": "1555:97:6"
															},
															"nativeSrc": "1555:97:6",
															"nodeType": "YulExpressionStatement",
															"src": "1555:97:6"
														},
														{
															"nativeSrc": "1661:18:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1661:18:6",
															"value": {
																"kind": "number",
																"nativeSrc": "1678:1:6",
																"nodeType": "YulLiteral",
																"src": "1678:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1665:9:6",
																	"nodeType": "YulTypedName",
																	"src": "1665:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1688:17:6",
															"nodeType": "YulAssignment",
															"src": "1688:17:6",
															"value": {
																"kind": "number",
																"nativeSrc": "1701:4:6",
																"nodeType": "YulLiteral",
																"src": "1701:4:6",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1688:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "1688:9:6"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "1751:642:6",
																		"nodeType": "YulBlock",
																		"src": "1751:642:6",
																		"statements": [
																			{
																				"nativeSrc": "1765:35:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1765:35:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "1784:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "1784:6:6"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "1796:2:6",
																									"nodeType": "YulLiteral",
																									"src": "1796:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "1792:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "1792:3:6"
																							},
																							"nativeSrc": "1792:7:6",
																							"nodeType": "YulFunctionCall",
																							"src": "1792:7:6"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "1780:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "1780:3:6"
																					},
																					"nativeSrc": "1780:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "1780:20:6"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "1769:7:6",
																						"nodeType": "YulTypedName",
																						"src": "1769:7:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "1813:49:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1813:49:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "1857:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "1857:4:6"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "1827:29:6",
																						"nodeType": "YulIdentifier",
																						"src": "1827:29:6"
																					},
																					"nativeSrc": "1827:35:6",
																					"nodeType": "YulFunctionCall",
																					"src": "1827:35:6"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "1817:6:6",
																						"nodeType": "YulTypedName",
																						"src": "1817:6:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "1875:10:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1875:10:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "1884:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1884:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "1879:1:6",
																						"nodeType": "YulTypedName",
																						"src": "1879:1:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "1955:165:6",
																					"nodeType": "YulBlock",
																					"src": "1955:165:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "1980:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "1980:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "1998:3:6",
																														"nodeType": "YulIdentifier",
																														"src": "1998:3:6"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2003:9:6",
																														"nodeType": "YulIdentifier",
																														"src": "2003:9:6"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "1994:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "1994:3:6"
																												},
																												"nativeSrc": "1994:19:6",
																												"nodeType": "YulFunctionCall",
																												"src": "1994:19:6"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "1988:5:6",
																											"nodeType": "YulIdentifier",
																											"src": "1988:5:6"
																										},
																										"nativeSrc": "1988:26:6",
																										"nodeType": "YulFunctionCall",
																										"src": "1988:26:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "1973:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "1973:6:6"
																								},
																								"nativeSrc": "1973:42:6",
																								"nodeType": "YulFunctionCall",
																								"src": "1973:42:6"
																							},
																							"nativeSrc": "1973:42:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "1973:42:6"
																						},
																						{
																							"nativeSrc": "2032:24:6",
																							"nodeType": "YulAssignment",
																							"src": "2032:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2046:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "2046:6:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2054:1:6",
																										"nodeType": "YulLiteral",
																										"src": "2054:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2042:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "2042:3:6"
																								},
																								"nativeSrc": "2042:14:6",
																								"nodeType": "YulFunctionCall",
																								"src": "2042:14:6"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2032:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "2032:6:6"
																								}
																							]
																						},
																						{
																							"nativeSrc": "2073:33:6",
																							"nodeType": "YulAssignment",
																							"src": "2073:33:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "2090:9:6",
																										"nodeType": "YulIdentifier",
																										"src": "2090:9:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2101:4:6",
																										"nodeType": "YulLiteral",
																										"src": "2101:4:6",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2086:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "2086:3:6"
																								},
																								"nativeSrc": "2086:20:6",
																								"nodeType": "YulFunctionCall",
																								"src": "2086:20:6"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2073:9:6",
																									"nodeType": "YulIdentifier",
																									"src": "2073:9:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "1909:1:6",
																							"nodeType": "YulIdentifier",
																							"src": "1909:1:6"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "1912:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "1912:7:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "1906:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "1906:2:6"
																					},
																					"nativeSrc": "1906:14:6",
																					"nodeType": "YulFunctionCall",
																					"src": "1906:14:6"
																				},
																				"nativeSrc": "1898:222:6",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "1921:21:6",
																					"nodeType": "YulBlock",
																					"src": "1921:21:6",
																					"statements": [
																						{
																							"nativeSrc": "1923:17:6",
																							"nodeType": "YulAssignment",
																							"src": "1923:17:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "1932:1:6",
																										"nodeType": "YulIdentifier",
																										"src": "1932:1:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1935:4:6",
																										"nodeType": "YulLiteral",
																										"src": "1935:4:6",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "1928:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "1928:3:6"
																								},
																								"nativeSrc": "1928:12:6",
																								"nodeType": "YulFunctionCall",
																								"src": "1928:12:6"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "1923:1:6",
																									"nodeType": "YulIdentifier",
																									"src": "1923:1:6"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "1902:3:6",
																					"nodeType": "YulBlock",
																					"src": "1902:3:6",
																					"statements": []
																				},
																				"src": "1898:222:6"
																			},
																			{
																				"body": {
																					"nativeSrc": "2168:166:6",
																					"nodeType": "YulBlock",
																					"src": "2168:166:6",
																					"statements": [
																						{
																							"nativeSrc": "2186:43:6",
																							"nodeType": "YulVariableDeclaration",
																							"src": "2186:43:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2213:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "2213:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2218:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "2218:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2209:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "2209:3:6"
																										},
																										"nativeSrc": "2209:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "2209:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2203:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "2203:5:6"
																								},
																								"nativeSrc": "2203:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "2203:26:6"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "2190:9:6",
																									"nodeType": "YulTypedName",
																									"src": "2190:9:6",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2253:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "2253:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "2265:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "2265:9:6"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "2292:1:6",
																																				"nodeType": "YulLiteral",
																																				"src": "2292:1:6",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "2295:6:6",
																																				"nodeType": "YulIdentifier",
																																				"src": "2295:6:6"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "2288:3:6",
																																			"nodeType": "YulIdentifier",
																																			"src": "2288:3:6"
																																		},
																																		"nativeSrc": "2288:14:6",
																																		"nodeType": "YulFunctionCall",
																																		"src": "2288:14:6"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2304:3:6",
																																		"nodeType": "YulLiteral",
																																		"src": "2304:3:6",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "2284:3:6",
																																	"nodeType": "YulIdentifier",
																																	"src": "2284:3:6"
																																},
																																"nativeSrc": "2284:24:6",
																																"nodeType": "YulFunctionCall",
																																"src": "2284:24:6"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2314:1:6",
																																		"nodeType": "YulLiteral",
																																		"src": "2314:1:6",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "2310:3:6",
																																	"nodeType": "YulIdentifier",
																																	"src": "2310:3:6"
																																},
																																"nativeSrc": "2310:6:6",
																																"nodeType": "YulFunctionCall",
																																"src": "2310:6:6"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "2280:3:6",
																															"nodeType": "YulIdentifier",
																															"src": "2280:3:6"
																														},
																														"nativeSrc": "2280:37:6",
																														"nodeType": "YulFunctionCall",
																														"src": "2280:37:6"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "2276:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "2276:3:6"
																												},
																												"nativeSrc": "2276:42:6",
																												"nodeType": "YulFunctionCall",
																												"src": "2276:42:6"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "2261:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "2261:3:6"
																										},
																										"nativeSrc": "2261:58:6",
																										"nodeType": "YulFunctionCall",
																										"src": "2261:58:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2246:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "2246:6:6"
																								},
																								"nativeSrc": "2246:74:6",
																								"nodeType": "YulFunctionCall",
																								"src": "2246:74:6"
																							},
																							"nativeSrc": "2246:74:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "2246:74:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2139:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "2139:7:6"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "2148:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "2148:6:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2136:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "2136:2:6"
																					},
																					"nativeSrc": "2136:19:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2136:19:6"
																				},
																				"nativeSrc": "2133:201:6",
																				"nodeType": "YulIf",
																				"src": "2133:201:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2354:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "2354:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "2368:1:6",
																											"nodeType": "YulLiteral",
																											"src": "2368:1:6",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "2371:6:6",
																											"nodeType": "YulIdentifier",
																											"src": "2371:6:6"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "2364:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "2364:3:6"
																									},
																									"nativeSrc": "2364:14:6",
																									"nodeType": "YulFunctionCall",
																									"src": "2364:14:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2380:1:6",
																									"nodeType": "YulLiteral",
																									"src": "2380:1:6",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2360:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "2360:3:6"
																							},
																							"nativeSrc": "2360:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "2360:22:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2347:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2347:6:6"
																					},
																					"nativeSrc": "2347:36:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2347:36:6"
																				},
																				"nativeSrc": "2347:36:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "2347:36:6"
																			}
																		]
																	},
																	"nativeSrc": "1744:649:6",
																	"nodeType": "YulCase",
																	"src": "1744:649:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1749:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1749:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "2410:234:6",
																		"nodeType": "YulBlock",
																		"src": "2410:234:6",
																		"statements": [
																			{
																				"nativeSrc": "2424:14:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2424:14:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2437:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2437:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "2428:5:6",
																						"nodeType": "YulTypedName",
																						"src": "2428:5:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2473:67:6",
																					"nodeType": "YulBlock",
																					"src": "2473:67:6",
																					"statements": [
																						{
																							"nativeSrc": "2491:35:6",
																							"nodeType": "YulAssignment",
																							"src": "2491:35:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2510:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "2510:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2515:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "2515:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2506:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "2506:3:6"
																										},
																										"nativeSrc": "2506:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "2506:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2500:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "2500:5:6"
																								},
																								"nativeSrc": "2500:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "2500:26:6"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "2491:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "2491:5:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "2454:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "2454:6:6"
																				},
																				"nativeSrc": "2451:89:6",
																				"nodeType": "YulIf",
																				"src": "2451:89:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2560:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "2560:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "2619:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "2619:5:6"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "2626:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "2626:6:6"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "2566:52:6",
																								"nodeType": "YulIdentifier",
																								"src": "2566:52:6"
																							},
																							"nativeSrc": "2566:67:6",
																							"nodeType": "YulFunctionCall",
																							"src": "2566:67:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2553:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2553:6:6"
																					},
																					"nativeSrc": "2553:81:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2553:81:6"
																				},
																				"nativeSrc": "2553:81:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "2553:81:6"
																			}
																		]
																	},
																	"nativeSrc": "2402:242:6",
																	"nodeType": "YulCase",
																	"src": "2402:242:6",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1724:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1724:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1732:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1732:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1721:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1721:2:6"
																},
																"nativeSrc": "1721:14:6",
																"nodeType": "YulFunctionCall",
																"src": "1721:14:6"
															},
															"nativeSrc": "1714:930:6",
															"nodeType": "YulSwitch",
															"src": "1714:930:6"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "1351:1299:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1432:4:6",
														"nodeType": "YulTypedName",
														"src": "1432:4:6",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "1438:3:6",
														"nodeType": "YulTypedName",
														"src": "1438:3:6",
														"type": ""
													}
												],
												"src": "1351:1299:6"
											},
											{
												"body": {
													"nativeSrc": "2756:102:6",
													"nodeType": "YulBlock",
													"src": "2756:102:6",
													"statements": [
														{
															"nativeSrc": "2766:26:6",
															"nodeType": "YulAssignment",
															"src": "2766:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2778:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2778:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2789:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2789:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2774:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2774:3:6"
																},
																"nativeSrc": "2774:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2774:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2766:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2766:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2808:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2808:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2823:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2823:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2839:3:6",
																								"nodeType": "YulLiteral",
																								"src": "2839:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2844:1:6",
																								"nodeType": "YulLiteral",
																								"src": "2844:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2835:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "2835:3:6"
																						},
																						"nativeSrc": "2835:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "2835:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2848:1:6",
																						"nodeType": "YulLiteral",
																						"src": "2848:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2831:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2831:3:6"
																				},
																				"nativeSrc": "2831:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2831:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2819:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2819:3:6"
																		},
																		"nativeSrc": "2819:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2819:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2801:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2801:6:6"
																},
																"nativeSrc": "2801:51:6",
																"nodeType": "YulFunctionCall",
																"src": "2801:51:6"
															},
															"nativeSrc": "2801:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "2801:51:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2655:203:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2725:9:6",
														"nodeType": "YulTypedName",
														"src": "2725:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2736:6:6",
														"nodeType": "YulTypedName",
														"src": "2736:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2747:4:6",
														"nodeType": "YulTypedName",
														"src": "2747:4:6",
														"type": ""
													}
												],
												"src": "2655:203:6"
											},
											{
												"body": {
													"nativeSrc": "2911:174:6",
													"nodeType": "YulBlock",
													"src": "2911:174:6",
													"statements": [
														{
															"nativeSrc": "2921:16:6",
															"nodeType": "YulAssignment",
															"src": "2921:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2932:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "2932:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2935:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "2935:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2928:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2928:3:6"
																},
																"nativeSrc": "2928:9:6",
																"nodeType": "YulFunctionCall",
																"src": "2928:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "2921:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2921:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2968:111:6",
																"nodeType": "YulBlock",
																"src": "2968:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2989:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2989:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2996:3:6",
																							"nodeType": "YulLiteral",
																							"src": "2996:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3001:10:6",
																							"nodeType": "YulLiteral",
																							"src": "3001:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2992:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "2992:3:6"
																					},
																					"nativeSrc": "2992:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2992:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2982:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2982:6:6"
																			},
																			"nativeSrc": "2982:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2982:31:6"
																		},
																		"nativeSrc": "2982:31:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2982:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3033:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3033:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3036:4:6",
																					"nodeType": "YulLiteral",
																					"src": "3036:4:6",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3026:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3026:6:6"
																			},
																			"nativeSrc": "3026:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3026:15:6"
																		},
																		"nativeSrc": "3026:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3026:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3061:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3061:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3064:4:6",
																					"nodeType": "YulLiteral",
																					"src": "3064:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3054:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3054:6:6"
																			},
																			"nativeSrc": "3054:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3054:15:6"
																		},
																		"nativeSrc": "3054:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3054:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2952:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "2952:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "2955:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2955:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2949:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2949:2:6"
																},
																"nativeSrc": "2949:10:6",
																"nodeType": "YulFunctionCall",
																"src": "2949:10:6"
															},
															"nativeSrc": "2946:133:6",
															"nodeType": "YulIf",
															"src": "2946:133:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "2863:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2894:1:6",
														"nodeType": "YulTypedName",
														"src": "2894:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2897:1:6",
														"nodeType": "YulTypedName",
														"src": "2897:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "2903:3:6",
														"nodeType": "YulTypedName",
														"src": "2903:3:6",
														"type": ""
													}
												],
												"src": "2863:222:6"
											},
											{
												"body": {
													"nativeSrc": "3247:188:6",
													"nodeType": "YulBlock",
													"src": "3247:188:6",
													"statements": [
														{
															"nativeSrc": "3257:26:6",
															"nodeType": "YulAssignment",
															"src": "3257:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3269:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3269:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3280:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3280:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3265:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3265:3:6"
																},
																"nativeSrc": "3265:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3265:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3257:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3257:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3299:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3299:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3314:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3314:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3330:3:6",
																								"nodeType": "YulLiteral",
																								"src": "3330:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3335:1:6",
																								"nodeType": "YulLiteral",
																								"src": "3335:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3326:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "3326:3:6"
																						},
																						"nativeSrc": "3326:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "3326:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3339:1:6",
																						"nodeType": "YulLiteral",
																						"src": "3339:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3322:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3322:3:6"
																				},
																				"nativeSrc": "3322:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3322:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3310:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3310:3:6"
																		},
																		"nativeSrc": "3310:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3310:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3292:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3292:6:6"
																},
																"nativeSrc": "3292:51:6",
																"nodeType": "YulFunctionCall",
																"src": "3292:51:6"
															},
															"nativeSrc": "3292:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "3292:51:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3363:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3363:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3374:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3374:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3359:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3359:3:6"
																		},
																		"nativeSrc": "3359:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3359:18:6"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3379:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3379:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3352:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3352:6:6"
																},
																"nativeSrc": "3352:34:6",
																"nodeType": "YulFunctionCall",
																"src": "3352:34:6"
															},
															"nativeSrc": "3352:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "3352:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3406:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3406:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3417:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3417:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3402:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3402:3:6"
																		},
																		"nativeSrc": "3402:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3402:18:6"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "3422:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3422:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3395:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3395:6:6"
																},
																"nativeSrc": "3395:34:6",
																"nodeType": "YulFunctionCall",
																"src": "3395:34:6"
															},
															"nativeSrc": "3395:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "3395:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "3090:345:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3200:9:6",
														"nodeType": "YulTypedName",
														"src": "3200:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3211:6:6",
														"nodeType": "YulTypedName",
														"src": "3211:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3219:6:6",
														"nodeType": "YulTypedName",
														"src": "3219:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3227:6:6",
														"nodeType": "YulTypedName",
														"src": "3227:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3238:4:6",
														"nodeType": "YulTypedName",
														"src": "3238:4:6",
														"type": ""
													}
												],
												"src": "3090:345:6"
											},
											{
												"body": {
													"nativeSrc": "3541:76:6",
													"nodeType": "YulBlock",
													"src": "3541:76:6",
													"statements": [
														{
															"nativeSrc": "3551:26:6",
															"nodeType": "YulAssignment",
															"src": "3551:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3563:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3563:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3574:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3574:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3559:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3559:3:6"
																},
																"nativeSrc": "3559:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3559:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3551:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3551:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3593:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3593:9:6"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "3604:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3604:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3586:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3586:6:6"
																},
																"nativeSrc": "3586:25:6",
																"nodeType": "YulFunctionCall",
																"src": "3586:25:6"
															},
															"nativeSrc": "3586:25:6",
															"nodeType": "YulExpressionStatement",
															"src": "3586:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3440:177:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3510:9:6",
														"nodeType": "YulTypedName",
														"src": "3510:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3521:6:6",
														"nodeType": "YulTypedName",
														"src": "3521:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3532:4:6",
														"nodeType": "YulTypedName",
														"src": "3532:4:6",
														"type": ""
													}
												],
												"src": "3440:177:6"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506040518060400160405280600a81526020016923b0b6b2902a37b5b2b760b11b8152506040518060400160405280600281526020016111d560f21b815250816003908161005d9190610299565b50600461006a8282610299565b5050506100873369d3c21bcecceda100000061009e60201b60201c565b600580546001600160a01b03191633179055610378565b6001600160a01b0382166100cc5760405163ec442f0560e01b81525f60048201526024015b60405180910390fd5b6100d75f83836100db565b5050565b6001600160a01b038316610105578060025f8282546100fa9190610353565b909155506101759050565b6001600160a01b0383165f90815260208190526040902054818110156101575760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016100c3565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b038216610191576002805482900390556101af565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516101f491815260200190565b60405180910390a3505050565b634e487b7160e01b5f52604160045260245ffd5b600181811c9082168061022957607f821691505b60208210810361024757634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561029457805f5260205f20601f840160051c810160208510156102725750805b601f840160051c820191505b81811015610291575f815560010161027e565b50505b505050565b81516001600160401b038111156102b2576102b2610201565b6102c6816102c08454610215565b8461024d565b6020601f8211600181146102f8575f83156102e15750848201515b5f19600385901b1c1916600184901b178455610291565b5f84815260208120601f198516915b828110156103275787850151825560209485019460019092019101610307565b508482101561034457868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b8082018082111561037257634e487b7160e01b5f52601160045260245ffd5b92915050565b61083a806103855f395ff3fe608060405234801561000f575f80fd5b50600436106100b1575f3560e01c806370a082311161006e57806370a082311461013f57806395d89b4114610167578063a9059cbb1461016f578063dd62ed3e14610182578063f0dda65c146101ba578063f851a440146101cd575f80fd5b806306fdde03146100b5578063095ea7b3146100d357806318160ddd146100f657806323b872dd14610108578063313ce5671461011b5780636d1b229d1461012a575b5f80fd5b6100bd6101f8565b6040516100ca9190610693565b60405180910390f35b6100e66100e13660046106e3565b610288565b60405190151581526020016100ca565b6002545b6040519081526020016100ca565b6100e661011636600461070b565b6102a1565b604051601281526020016100ca565b61013d610138366004610745565b6102c4565b005b6100fa61014d36600461075c565b6001600160a01b03165f9081526020819052604090205490565b6100bd6102d1565b6100e661017d3660046106e3565b6102e0565b6100fa61019036600461077c565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b61013d6101c83660046106e3565b6102ed565b6005546101e0906001600160a01b031681565b6040516001600160a01b0390911681526020016100ca565b606060038054610207906107ad565b80601f0160208091040260200160405190810160405280929190818152602001828054610233906107ad565b801561027e5780601f106102555761010080835404028352916020019161027e565b820191905f5260205f20905b81548152906001019060200180831161026157829003601f168201915b5050505050905090565b5f33610295818585610349565b60019150505b92915050565b5f336102ae85828561035b565b6102b98585856103d6565b506001949350505050565b6102ce3382610433565b50565b606060048054610207906107ad565b5f336102958185856103d6565b6005546001600160a01b0316331461033b5760405162461bcd60e51b815260206004820152600c60248201526b155b985d5d1a1bdc9a5e995960a21b60448201526064015b60405180910390fd5b6103458282610467565b5050565b610356838383600161049b565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f1981146103d057818110156103c257604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610332565b6103d084848484035f61049b565b50505050565b6001600160a01b0383166103ff57604051634b637e8f60e11b81525f6004820152602401610332565b6001600160a01b0382166104285760405163ec442f0560e01b81525f6004820152602401610332565b61035683838361056d565b6001600160a01b03821661045c57604051634b637e8f60e11b81525f6004820152602401610332565b610345825f8361056d565b6001600160a01b0382166104905760405163ec442f0560e01b81525f6004820152602401610332565b6103455f838361056d565b6001600160a01b0384166104c45760405163e602df0560e01b81525f6004820152602401610332565b6001600160a01b0383166104ed57604051634a1406b160e11b81525f6004820152602401610332565b6001600160a01b038085165f90815260016020908152604080832093871683529290522082905580156103d057826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161055f91815260200190565b60405180910390a350505050565b6001600160a01b038316610597578060025f82825461058c91906107e5565b909155506106079050565b6001600160a01b0383165f90815260208190526040902054818110156105e95760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610332565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b03821661062357600280548290039055610641565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161068691815260200190565b60405180910390a3505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b03811681146106de575f80fd5b919050565b5f80604083850312156106f4575f80fd5b6106fd836106c8565b946020939093013593505050565b5f805f6060848603121561071d575f80fd5b610726846106c8565b9250610734602085016106c8565b929592945050506040919091013590565b5f60208284031215610755575f80fd5b5035919050565b5f6020828403121561076c575f80fd5b610775826106c8565b9392505050565b5f806040838503121561078d575f80fd5b610796836106c8565b91506107a4602084016106c8565b90509250929050565b600181811c908216806107c157607f821691505b6020821081036107df57634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561029b57634e487b7160e01b5f52601160045260245ffdfea2646970667358221220bf95607444b8822a53ca3f8d86ee923f334aa985a7e52cebe17d6b73f546e03064736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH10 0x23B0B6B2902A37B5B2B7 PUSH1 0xB1 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11D5 PUSH1 0xF2 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x5D SWAP2 SWAP1 PUSH2 0x299 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x6A DUP3 DUP3 PUSH2 0x299 JUMP JUMPDEST POP POP POP PUSH2 0x87 CALLER PUSH10 0xD3C21BCECCEDA1000000 PUSH2 0x9E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x378 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xCC JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD7 PUSH0 DUP4 DUP4 PUSH2 0xDB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x105 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xFA SWAP2 SWAP1 PUSH2 0x353 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x175 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x157 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x191 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x1AF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x229 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x247 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x294 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x272 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x291 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x27E JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2B2 JUMPI PUSH2 0x2B2 PUSH2 0x201 JUMP JUMPDEST PUSH2 0x2C6 DUP2 PUSH2 0x2C0 DUP5 SLOAD PUSH2 0x215 JUMP JUMPDEST DUP5 PUSH2 0x24D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2F8 JUMPI PUSH0 DUP4 ISZERO PUSH2 0x2E1 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x291 JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x327 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x307 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x344 JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x372 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x83A DUP1 PUSH2 0x385 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB1 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x13F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0xF0DDA65C EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x1CD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x108 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x6D1B229D EQ PUSH2 0x12A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xBD PUSH2 0x1F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCA SWAP2 SWAP1 PUSH2 0x693 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH2 0xE1 CALLDATASIZE PUSH1 0x4 PUSH2 0x6E3 JUMP JUMPDEST PUSH2 0x288 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCA JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCA JUMP JUMPDEST PUSH2 0xE6 PUSH2 0x116 CALLDATASIZE PUSH1 0x4 PUSH2 0x70B JUMP JUMPDEST PUSH2 0x2A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCA JUMP JUMPDEST PUSH2 0x13D PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0x745 JUMP JUMPDEST PUSH2 0x2C4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFA PUSH2 0x14D CALLDATASIZE PUSH1 0x4 PUSH2 0x75C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xBD PUSH2 0x2D1 JUMP JUMPDEST PUSH2 0xE6 PUSH2 0x17D CALLDATASIZE PUSH1 0x4 PUSH2 0x6E3 JUMP JUMPDEST PUSH2 0x2E0 JUMP JUMPDEST PUSH2 0xFA PUSH2 0x190 CALLDATASIZE PUSH1 0x4 PUSH2 0x77C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x13D PUSH2 0x1C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x6E3 JUMP JUMPDEST PUSH2 0x2ED JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x1E0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCA JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x207 SWAP1 PUSH2 0x7AD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x233 SWAP1 PUSH2 0x7AD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x27E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x255 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x27E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x261 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x295 DUP2 DUP6 DUP6 PUSH2 0x349 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2AE DUP6 DUP3 DUP6 PUSH2 0x35B JUMP JUMPDEST PUSH2 0x2B9 DUP6 DUP6 DUP6 PUSH2 0x3D6 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2CE CALLER DUP3 PUSH2 0x433 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x207 SWAP1 PUSH2 0x7AD JUMP JUMPDEST PUSH0 CALLER PUSH2 0x295 DUP2 DUP6 DUP6 PUSH2 0x3D6 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x33B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x155B985D5D1A1BDC9A5E9959 PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x345 DUP3 DUP3 PUSH2 0x467 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x356 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x49B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0x3D0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x3C2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x332 JUMP JUMPDEST PUSH2 0x3D0 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x49B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3FF JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x332 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x428 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x332 JUMP JUMPDEST PUSH2 0x356 DUP4 DUP4 DUP4 PUSH2 0x56D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x45C JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x332 JUMP JUMPDEST PUSH2 0x345 DUP3 PUSH0 DUP4 PUSH2 0x56D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x490 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x332 JUMP JUMPDEST PUSH2 0x345 PUSH0 DUP4 DUP4 PUSH2 0x56D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x4C4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x332 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x4ED JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x332 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x3D0 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x55F SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x597 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x58C SWAP2 SWAP1 PUSH2 0x7E5 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x607 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x5E9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x332 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x623 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x641 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x686 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6DE JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6F4 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x6FD DUP4 PUSH2 0x6C8 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x71D JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x726 DUP5 PUSH2 0x6C8 JUMP JUMPDEST SWAP3 POP PUSH2 0x734 PUSH1 0x20 DUP6 ADD PUSH2 0x6C8 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x755 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x76C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x775 DUP3 PUSH2 0x6C8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x78D JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x796 DUP4 PUSH2 0x6C8 JUMP JUMPDEST SWAP2 POP PUSH2 0x7A4 PUSH1 0x20 DUP5 ADD PUSH2 0x6C8 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7C1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7DF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x29B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF SWAP6 PUSH1 0x74 PREVRANDAO 0xB8 DUP3 0x2A MSTORE8 0xCA EXTCODEHASH DUP14 DUP7 0xEE SWAP3 EXTCODEHASH CALLER BLOBBASEFEE 0xA9 DUP6 0xA7 0xE5 0x2C 0xEB 0xE1 PUSH30 0x6B73F546E03064736F6C634300081A003300000000000000000000000000 ",
							"sourceMap": "77:476:4:-:0;;;138:130;;;;;;;;;;1556:113:1;;;;;;;;;;;;;-1:-1:-1;;;1556:113:1;;;;;;;;;;;;;;;;-1:-1:-1;;;1556:113:1;;;1630:5;1622;:13;;;;;;:::i;:::-;-1:-1:-1;1645:7:1;:17;1655:7;1645;:17;:::i;:::-;;1556:113;;188:44:4::1;194:10;206:25;188:5;;;:44;;:::i;:::-;243:5;:18:::0;;-1:-1:-1;;;;;;243:18:4::1;251:10;243:18;::::0;;77:476;;7413:208:1;-1:-1:-1;;;;;7483:21:1;;7479:91;;7527:32;;-1:-1:-1;;;7527:32:1;;7556:1;7527:32;;;2801:51:6;2774:18;;7527:32:1;;;;;;;;7479:91;7579:35;7595:1;7599:7;7608:5;7579:7;:35::i;:::-;7413:208;;:::o;5963:1107::-;-1:-1:-1;;;;;6052:18:1;;6048:540;;6204:5;6188:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6048:540:1;;-1:-1:-1;6048:540:1;;-1:-1:-1;;;;;6262:15:1;;6240:19;6262:15;;;;;;;;;;;6295:19;;;6291:115;;;6341:50;;-1:-1:-1;;;6341:50:1;;-1:-1:-1;;;;;3310:32:6;;6341:50:1;;;3292:51:6;3359:18;;;3352:34;;;3402:18;;;3395:34;;;3265:18;;6341:50:1;3090:345:6;6291:115:1;-1:-1:-1;;;;;6526:15:1;;:9;:15;;;;;;;;;;6544:19;;;;6526:37;;6048:540;-1:-1:-1;;;;;6602:16:1;;6598:425;;6765:12;:21;;;;;;;6598:425;;;-1:-1:-1;;;;;6976:13:1;;:9;:13;;;;;;;;;;:22;;;;;;6598:425;7053:2;-1:-1:-1;;;;;7038:25:1;7047:4;-1:-1:-1;;;;;7038:25:1;;7057:5;7038:25;;;;3586::6;;3574:2;3559:18;;3440:177;7038:25:1;;;;;;;;5963:1107;;;:::o;14:127:6:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:518::-;759:2;754:3;751:11;748:421;;;795:5;792:1;785:16;839:4;836:1;826:18;909:2;897:10;893:19;890:1;886:27;880:4;876:38;945:4;933:10;930:20;927:47;;;-1:-1:-1;968:4:6;927:47;1023:2;1018:3;1014:12;1011:1;1007:20;1001:4;997:31;987:41;;1078:81;1096:2;1089:5;1086:13;1078:81;;;1155:1;1141:16;;1122:1;1111:13;1078:81;;;1082:3;;748:421;657:518;;;:::o;1351:1299::-;1471:10;;-1:-1:-1;;;;;1493:30:6;;1490:56;;;1526:18;;:::i;:::-;1555:97;1645:6;1605:38;1637:4;1631:11;1605:38;:::i;:::-;1599:4;1555:97;:::i;:::-;1701:4;1732:2;1721:14;;1749:1;1744:649;;;;2437:1;2454:6;2451:89;;;-1:-1:-1;2506:19:6;;;2500:26;2451:89;-1:-1:-1;;1308:1:6;1304:11;;;1300:24;1296:29;1286:40;1332:1;1328:11;;;1283:57;2553:81;;1714:930;;1744:649;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1780:20:6;;;1898:222;1912:7;1909:1;1906:14;1898:222;;;1994:19;;;1988:26;1973:42;;2101:4;2086:20;;;;2054:1;2042:14;;;;1928:12;1898:222;;;1902:3;2148:6;2139:7;2136:19;2133:201;;;2209:19;;;2203:26;-1:-1:-1;;2292:1:6;2288:14;;;2304:3;2284:24;2280:37;2276:42;2261:58;2246:74;;2133:201;-1:-1:-1;;;;2380:1:6;2364:14;;;2360:22;2347:36;;-1:-1:-1;1351:1299:6:o;2863:222::-;2928:9;;;2949:10;;;2946:133;;;3001:10;2996:3;2992:20;2989:1;2982:31;3036:4;3033:1;3026:15;3064:4;3061:1;3054:15;2946:133;2863:222;;;;:::o;3440:177::-;77:476:4;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_435": {
									"entryPoint": 841,
									"id": 435,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_495": {
									"entryPoint": 1179,
									"id": 495,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_417": {
									"entryPoint": 1075,
									"id": 417,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_384": {
									"entryPoint": 1127,
									"id": 384,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_11": {
									"entryPoint": null,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_543": {
									"entryPoint": 859,
									"id": 543,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_274": {
									"entryPoint": 982,
									"id": 274,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_351": {
									"entryPoint": 1389,
									"id": 351,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@admin_655": {
									"entryPoint": null,
									"id": 655,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@allowance_171": {
									"entryPoint": null,
									"id": 171,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_195": {
									"entryPoint": 648,
									"id": 195,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_130": {
									"entryPoint": null,
									"id": 130,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnTokens_713": {
									"entryPoint": 708,
									"id": 713,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_108": {
									"entryPoint": null,
									"id": 108,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mintTokens_701": {
									"entryPoint": 749,
									"id": 701,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_90": {
									"entryPoint": 504,
									"id": 90,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_99": {
									"entryPoint": 721,
									"id": 99,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_117": {
									"entryPoint": null,
									"id": 117,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_227": {
									"entryPoint": 673,
									"id": 227,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_154": {
									"entryPoint": 736,
									"id": 154,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1736,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1884,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1916,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1803,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1763,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1861,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1683,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2021,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1965,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4057:6",
										"nodeType": "YulBlock",
										"src": "0:4057:6",
										"statements": [
											{
												"nativeSrc": "6:3:6",
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "135:297:6",
													"nodeType": "YulBlock",
													"src": "135:297:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "152:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "152:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "163:2:6",
																		"nodeType": "YulLiteral",
																		"src": "163:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "145:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "145:6:6"
																},
																"nativeSrc": "145:21:6",
																"nodeType": "YulFunctionCall",
																"src": "145:21:6"
															},
															"nativeSrc": "145:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "145:21:6"
														},
														{
															"nativeSrc": "175:27:6",
															"nodeType": "YulVariableDeclaration",
															"src": "175:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "195:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "195:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "189:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "189:5:6"
																},
																"nativeSrc": "189:13:6",
																"nodeType": "YulFunctionCall",
																"src": "189:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "179:6:6",
																	"nodeType": "YulTypedName",
																	"src": "179:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "222:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "222:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "233:2:6",
																				"nodeType": "YulLiteral",
																				"src": "233:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "218:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "218:3:6"
																		},
																		"nativeSrc": "218:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "218:18:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "238:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "238:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "211:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:6"
																},
																"nativeSrc": "211:34:6",
																"nodeType": "YulFunctionCall",
																"src": "211:34:6"
															},
															"nativeSrc": "211:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "211:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "264:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "264:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "275:2:6",
																				"nodeType": "YulLiteral",
																				"src": "275:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "260:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "260:3:6"
																		},
																		"nativeSrc": "260:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "260:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "284:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "284:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "292:2:6",
																				"nodeType": "YulLiteral",
																				"src": "292:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "280:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "280:3:6"
																		},
																		"nativeSrc": "280:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "280:15:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "297:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "297:6:6"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "254:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "254:5:6"
																},
																"nativeSrc": "254:50:6",
																"nodeType": "YulFunctionCall",
																"src": "254:50:6"
															},
															"nativeSrc": "254:50:6",
															"nodeType": "YulExpressionStatement",
															"src": "254:50:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "328:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "328:9:6"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "339:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "339:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "324:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "324:3:6"
																				},
																				"nativeSrc": "324:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "324:22:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "348:2:6",
																				"nodeType": "YulLiteral",
																				"src": "348:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "320:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "320:3:6"
																		},
																		"nativeSrc": "320:31:6",
																		"nodeType": "YulFunctionCall",
																		"src": "320:31:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "353:1:6",
																		"nodeType": "YulLiteral",
																		"src": "353:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "313:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "313:6:6"
																},
																"nativeSrc": "313:42:6",
																"nodeType": "YulFunctionCall",
																"src": "313:42:6"
															},
															"nativeSrc": "313:42:6",
															"nodeType": "YulExpressionStatement",
															"src": "313:42:6"
														},
														{
															"nativeSrc": "364:62:6",
															"nodeType": "YulAssignment",
															"src": "364:62:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "380:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "380:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "399:6:6",
																								"nodeType": "YulIdentifier",
																								"src": "399:6:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "407:2:6",
																								"nodeType": "YulLiteral",
																								"src": "407:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "395:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "395:3:6"
																						},
																						"nativeSrc": "395:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "395:15:6"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "416:2:6",
																								"nodeType": "YulLiteral",
																								"src": "416:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "412:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "412:3:6"
																						},
																						"nativeSrc": "412:7:6",
																						"nodeType": "YulFunctionCall",
																						"src": "412:7:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "391:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "391:3:6"
																				},
																				"nativeSrc": "391:29:6",
																				"nodeType": "YulFunctionCall",
																				"src": "391:29:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "376:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "376:3:6"
																		},
																		"nativeSrc": "376:45:6",
																		"nodeType": "YulFunctionCall",
																		"src": "376:45:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "423:2:6",
																		"nodeType": "YulLiteral",
																		"src": "423:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "372:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "372:3:6"
																},
																"nativeSrc": "372:54:6",
																"nodeType": "YulFunctionCall",
																"src": "372:54:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "364:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "364:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:418:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "104:9:6",
														"nodeType": "YulTypedName",
														"src": "104:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "115:6:6",
														"nodeType": "YulTypedName",
														"src": "115:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "126:4:6",
														"nodeType": "YulTypedName",
														"src": "126:4:6",
														"type": ""
													}
												],
												"src": "14:418:6"
											},
											{
												"body": {
													"nativeSrc": "486:124:6",
													"nodeType": "YulBlock",
													"src": "486:124:6",
													"statements": [
														{
															"nativeSrc": "496:29:6",
															"nodeType": "YulAssignment",
															"src": "496:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "518:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "518:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "505:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "505:12:6"
																},
																"nativeSrc": "505:20:6",
																"nodeType": "YulFunctionCall",
																"src": "505:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "496:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "496:5:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "588:16:6",
																"nodeType": "YulBlock",
																"src": "588:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "597:1:6",
																					"nodeType": "YulLiteral",
																					"src": "597:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "600:1:6",
																					"nodeType": "YulLiteral",
																					"src": "600:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "590:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "590:6:6"
																			},
																			"nativeSrc": "590:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "590:12:6"
																		},
																		"nativeSrc": "590:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "590:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "547:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "547:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "558:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "558:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "573:3:6",
																										"nodeType": "YulLiteral",
																										"src": "573:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "578:1:6",
																										"nodeType": "YulLiteral",
																										"src": "578:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "569:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "569:3:6"
																								},
																								"nativeSrc": "569:11:6",
																								"nodeType": "YulFunctionCall",
																								"src": "569:11:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "582:1:6",
																								"nodeType": "YulLiteral",
																								"src": "582:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "565:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "565:3:6"
																						},
																						"nativeSrc": "565:19:6",
																						"nodeType": "YulFunctionCall",
																						"src": "565:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "554:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "554:3:6"
																				},
																				"nativeSrc": "554:31:6",
																				"nodeType": "YulFunctionCall",
																				"src": "554:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "544:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "544:2:6"
																		},
																		"nativeSrc": "544:42:6",
																		"nodeType": "YulFunctionCall",
																		"src": "544:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "537:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "537:6:6"
																},
																"nativeSrc": "537:50:6",
																"nodeType": "YulFunctionCall",
																"src": "537:50:6"
															},
															"nativeSrc": "534:70:6",
															"nodeType": "YulIf",
															"src": "534:70:6"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "437:173:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "465:6:6",
														"nodeType": "YulTypedName",
														"src": "465:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "476:5:6",
														"nodeType": "YulTypedName",
														"src": "476:5:6",
														"type": ""
													}
												],
												"src": "437:173:6"
											},
											{
												"body": {
													"nativeSrc": "702:213:6",
													"nodeType": "YulBlock",
													"src": "702:213:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "748:16:6",
																"nodeType": "YulBlock",
																"src": "748:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "757:1:6",
																					"nodeType": "YulLiteral",
																					"src": "757:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "760:1:6",
																					"nodeType": "YulLiteral",
																					"src": "760:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "750:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "750:6:6"
																			},
																			"nativeSrc": "750:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "750:12:6"
																		},
																		"nativeSrc": "750:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "750:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "723:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "723:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "732:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "732:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "719:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "719:3:6"
																		},
																		"nativeSrc": "719:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "719:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "744:2:6",
																		"nodeType": "YulLiteral",
																		"src": "744:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "715:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "715:3:6"
																},
																"nativeSrc": "715:32:6",
																"nodeType": "YulFunctionCall",
																"src": "715:32:6"
															},
															"nativeSrc": "712:52:6",
															"nodeType": "YulIf",
															"src": "712:52:6"
														},
														{
															"nativeSrc": "773:39:6",
															"nodeType": "YulAssignment",
															"src": "773:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "802:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "802:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "783:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "783:18:6"
																},
																"nativeSrc": "783:29:6",
																"nodeType": "YulFunctionCall",
																"src": "783:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "773:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "773:6:6"
																}
															]
														},
														{
															"nativeSrc": "821:14:6",
															"nodeType": "YulVariableDeclaration",
															"src": "821:14:6",
															"value": {
																"kind": "number",
																"nativeSrc": "834:1:6",
																"nodeType": "YulLiteral",
																"src": "834:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "825:5:6",
																	"nodeType": "YulTypedName",
																	"src": "825:5:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "844:41:6",
															"nodeType": "YulAssignment",
															"src": "844:41:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "870:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "870:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "881:2:6",
																				"nodeType": "YulLiteral",
																				"src": "881:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "866:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "866:3:6"
																		},
																		"nativeSrc": "866:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "866:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "853:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "853:12:6"
																},
																"nativeSrc": "853:32:6",
																"nodeType": "YulFunctionCall",
																"src": "853:32:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "844:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "844:5:6"
																}
															]
														},
														{
															"nativeSrc": "894:15:6",
															"nodeType": "YulAssignment",
															"src": "894:15:6",
															"value": {
																"name": "value",
																"nativeSrc": "904:5:6",
																"nodeType": "YulIdentifier",
																"src": "904:5:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "894:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "894:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "615:300:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "660:9:6",
														"nodeType": "YulTypedName",
														"src": "660:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "671:7:6",
														"nodeType": "YulTypedName",
														"src": "671:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "683:6:6",
														"nodeType": "YulTypedName",
														"src": "683:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "691:6:6",
														"nodeType": "YulTypedName",
														"src": "691:6:6",
														"type": ""
													}
												],
												"src": "615:300:6"
											},
											{
												"body": {
													"nativeSrc": "1015:92:6",
													"nodeType": "YulBlock",
													"src": "1015:92:6",
													"statements": [
														{
															"nativeSrc": "1025:26:6",
															"nodeType": "YulAssignment",
															"src": "1025:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1037:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1037:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1048:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1048:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1033:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1033:3:6"
																},
																"nativeSrc": "1033:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1033:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1025:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1025:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1067:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1067:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1092:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1092:6:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1085:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "1085:6:6"
																				},
																				"nativeSrc": "1085:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1085:14:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1078:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1078:6:6"
																		},
																		"nativeSrc": "1078:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1078:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1060:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1060:6:6"
																},
																"nativeSrc": "1060:41:6",
																"nodeType": "YulFunctionCall",
																"src": "1060:41:6"
															},
															"nativeSrc": "1060:41:6",
															"nodeType": "YulExpressionStatement",
															"src": "1060:41:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "920:187:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "984:9:6",
														"nodeType": "YulTypedName",
														"src": "984:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "995:6:6",
														"nodeType": "YulTypedName",
														"src": "995:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1006:4:6",
														"nodeType": "YulTypedName",
														"src": "1006:4:6",
														"type": ""
													}
												],
												"src": "920:187:6"
											},
											{
												"body": {
													"nativeSrc": "1213:76:6",
													"nodeType": "YulBlock",
													"src": "1213:76:6",
													"statements": [
														{
															"nativeSrc": "1223:26:6",
															"nodeType": "YulAssignment",
															"src": "1223:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1235:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1235:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1246:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1246:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1231:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1231:3:6"
																},
																"nativeSrc": "1231:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1231:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1223:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1223:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1265:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1265:9:6"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1276:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1276:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1258:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1258:6:6"
																},
																"nativeSrc": "1258:25:6",
																"nodeType": "YulFunctionCall",
																"src": "1258:25:6"
															},
															"nativeSrc": "1258:25:6",
															"nodeType": "YulExpressionStatement",
															"src": "1258:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1112:177:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1182:9:6",
														"nodeType": "YulTypedName",
														"src": "1182:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1193:6:6",
														"nodeType": "YulTypedName",
														"src": "1193:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1204:4:6",
														"nodeType": "YulTypedName",
														"src": "1204:4:6",
														"type": ""
													}
												],
												"src": "1112:177:6"
											},
											{
												"body": {
													"nativeSrc": "1398:270:6",
													"nodeType": "YulBlock",
													"src": "1398:270:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1444:16:6",
																"nodeType": "YulBlock",
																"src": "1444:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1453:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1453:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1456:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1456:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1446:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1446:6:6"
																			},
																			"nativeSrc": "1446:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1446:12:6"
																		},
																		"nativeSrc": "1446:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1446:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1419:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1419:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1428:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1428:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1415:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1415:3:6"
																		},
																		"nativeSrc": "1415:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1415:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1440:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1440:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1411:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1411:3:6"
																},
																"nativeSrc": "1411:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1411:32:6"
															},
															"nativeSrc": "1408:52:6",
															"nodeType": "YulIf",
															"src": "1408:52:6"
														},
														{
															"nativeSrc": "1469:39:6",
															"nodeType": "YulAssignment",
															"src": "1469:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1498:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1498:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1479:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "1479:18:6"
																},
																"nativeSrc": "1479:29:6",
																"nodeType": "YulFunctionCall",
																"src": "1479:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1469:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1469:6:6"
																}
															]
														},
														{
															"nativeSrc": "1517:48:6",
															"nodeType": "YulAssignment",
															"src": "1517:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1550:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1550:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1561:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1561:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1546:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1546:3:6"
																		},
																		"nativeSrc": "1546:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1546:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1527:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "1527:18:6"
																},
																"nativeSrc": "1527:38:6",
																"nodeType": "YulFunctionCall",
																"src": "1527:38:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1517:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1517:6:6"
																}
															]
														},
														{
															"nativeSrc": "1574:14:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1574:14:6",
															"value": {
																"kind": "number",
																"nativeSrc": "1587:1:6",
																"nodeType": "YulLiteral",
																"src": "1587:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1578:5:6",
																	"nodeType": "YulTypedName",
																	"src": "1578:5:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1597:41:6",
															"nodeType": "YulAssignment",
															"src": "1597:41:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1623:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1623:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1634:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1634:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1619:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1619:3:6"
																		},
																		"nativeSrc": "1619:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1619:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1606:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1606:12:6"
																},
																"nativeSrc": "1606:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1606:32:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1597:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1597:5:6"
																}
															]
														},
														{
															"nativeSrc": "1647:15:6",
															"nodeType": "YulAssignment",
															"src": "1647:15:6",
															"value": {
																"name": "value",
																"nativeSrc": "1657:5:6",
																"nodeType": "YulIdentifier",
																"src": "1657:5:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1647:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1647:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1294:374:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1348:9:6",
														"nodeType": "YulTypedName",
														"src": "1348:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1359:7:6",
														"nodeType": "YulTypedName",
														"src": "1359:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1371:6:6",
														"nodeType": "YulTypedName",
														"src": "1371:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1379:6:6",
														"nodeType": "YulTypedName",
														"src": "1379:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1387:6:6",
														"nodeType": "YulTypedName",
														"src": "1387:6:6",
														"type": ""
													}
												],
												"src": "1294:374:6"
											},
											{
												"body": {
													"nativeSrc": "1770:87:6",
													"nodeType": "YulBlock",
													"src": "1770:87:6",
													"statements": [
														{
															"nativeSrc": "1780:26:6",
															"nodeType": "YulAssignment",
															"src": "1780:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1792:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1792:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1803:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1803:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1788:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1788:3:6"
																},
																"nativeSrc": "1788:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1788:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1780:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1780:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1822:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1822:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1837:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1837:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1845:4:6",
																				"nodeType": "YulLiteral",
																				"src": "1845:4:6",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1833:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1833:3:6"
																		},
																		"nativeSrc": "1833:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1833:17:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1815:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1815:6:6"
																},
																"nativeSrc": "1815:36:6",
																"nodeType": "YulFunctionCall",
																"src": "1815:36:6"
															},
															"nativeSrc": "1815:36:6",
															"nodeType": "YulExpressionStatement",
															"src": "1815:36:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1673:184:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1739:9:6",
														"nodeType": "YulTypedName",
														"src": "1739:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1750:6:6",
														"nodeType": "YulTypedName",
														"src": "1750:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1761:4:6",
														"nodeType": "YulTypedName",
														"src": "1761:4:6",
														"type": ""
													}
												],
												"src": "1673:184:6"
											},
											{
												"body": {
													"nativeSrc": "1932:156:6",
													"nodeType": "YulBlock",
													"src": "1932:156:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1978:16:6",
																"nodeType": "YulBlock",
																"src": "1978:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1987:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1987:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1990:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1990:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1980:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1980:6:6"
																			},
																			"nativeSrc": "1980:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1980:12:6"
																		},
																		"nativeSrc": "1980:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1980:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1953:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1953:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1962:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1962:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1949:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1949:3:6"
																		},
																		"nativeSrc": "1949:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1949:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1974:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1974:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1945:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1945:3:6"
																},
																"nativeSrc": "1945:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1945:32:6"
															},
															"nativeSrc": "1942:52:6",
															"nodeType": "YulIf",
															"src": "1942:52:6"
														},
														{
															"nativeSrc": "2003:14:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2003:14:6",
															"value": {
																"kind": "number",
																"nativeSrc": "2016:1:6",
																"nodeType": "YulLiteral",
																"src": "2016:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2007:5:6",
																	"nodeType": "YulTypedName",
																	"src": "2007:5:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2026:32:6",
															"nodeType": "YulAssignment",
															"src": "2026:32:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2048:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2048:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2035:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2035:12:6"
																},
																"nativeSrc": "2035:23:6",
																"nodeType": "YulFunctionCall",
																"src": "2035:23:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2026:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2026:5:6"
																}
															]
														},
														{
															"nativeSrc": "2067:15:6",
															"nodeType": "YulAssignment",
															"src": "2067:15:6",
															"value": {
																"name": "value",
																"nativeSrc": "2077:5:6",
																"nodeType": "YulIdentifier",
																"src": "2077:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2067:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2067:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1862:226:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1898:9:6",
														"nodeType": "YulTypedName",
														"src": "1898:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1909:7:6",
														"nodeType": "YulTypedName",
														"src": "1909:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1921:6:6",
														"nodeType": "YulTypedName",
														"src": "1921:6:6",
														"type": ""
													}
												],
												"src": "1862:226:6"
											},
											{
												"body": {
													"nativeSrc": "2163:116:6",
													"nodeType": "YulBlock",
													"src": "2163:116:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2209:16:6",
																"nodeType": "YulBlock",
																"src": "2209:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2218:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2218:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2221:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2221:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2211:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2211:6:6"
																			},
																			"nativeSrc": "2211:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2211:12:6"
																		},
																		"nativeSrc": "2211:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2211:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2184:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2184:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2193:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2193:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2180:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2180:3:6"
																		},
																		"nativeSrc": "2180:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2180:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2205:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2205:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2176:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2176:3:6"
																},
																"nativeSrc": "2176:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2176:32:6"
															},
															"nativeSrc": "2173:52:6",
															"nodeType": "YulIf",
															"src": "2173:52:6"
														},
														{
															"nativeSrc": "2234:39:6",
															"nodeType": "YulAssignment",
															"src": "2234:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2263:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2263:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2244:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "2244:18:6"
																},
																"nativeSrc": "2244:29:6",
																"nodeType": "YulFunctionCall",
																"src": "2244:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2234:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2234:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2093:186:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2129:9:6",
														"nodeType": "YulTypedName",
														"src": "2129:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2140:7:6",
														"nodeType": "YulTypedName",
														"src": "2140:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2152:6:6",
														"nodeType": "YulTypedName",
														"src": "2152:6:6",
														"type": ""
													}
												],
												"src": "2093:186:6"
											},
											{
												"body": {
													"nativeSrc": "2371:173:6",
													"nodeType": "YulBlock",
													"src": "2371:173:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2417:16:6",
																"nodeType": "YulBlock",
																"src": "2417:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2426:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2426:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2429:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2429:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2419:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2419:6:6"
																			},
																			"nativeSrc": "2419:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2419:12:6"
																		},
																		"nativeSrc": "2419:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2419:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2392:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2392:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2401:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2401:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2388:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2388:3:6"
																		},
																		"nativeSrc": "2388:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2388:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2413:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2413:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2384:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2384:3:6"
																},
																"nativeSrc": "2384:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2384:32:6"
															},
															"nativeSrc": "2381:52:6",
															"nodeType": "YulIf",
															"src": "2381:52:6"
														},
														{
															"nativeSrc": "2442:39:6",
															"nodeType": "YulAssignment",
															"src": "2442:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2471:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2471:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2452:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "2452:18:6"
																},
																"nativeSrc": "2452:29:6",
																"nodeType": "YulFunctionCall",
																"src": "2452:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2442:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2442:6:6"
																}
															]
														},
														{
															"nativeSrc": "2490:48:6",
															"nodeType": "YulAssignment",
															"src": "2490:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2523:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2523:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2534:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2534:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2519:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2519:3:6"
																		},
																		"nativeSrc": "2519:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2519:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2500:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "2500:18:6"
																},
																"nativeSrc": "2500:38:6",
																"nodeType": "YulFunctionCall",
																"src": "2500:38:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2490:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2490:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "2284:260:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2329:9:6",
														"nodeType": "YulTypedName",
														"src": "2329:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2340:7:6",
														"nodeType": "YulTypedName",
														"src": "2340:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2352:6:6",
														"nodeType": "YulTypedName",
														"src": "2352:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2360:6:6",
														"nodeType": "YulTypedName",
														"src": "2360:6:6",
														"type": ""
													}
												],
												"src": "2284:260:6"
											},
											{
												"body": {
													"nativeSrc": "2650:102:6",
													"nodeType": "YulBlock",
													"src": "2650:102:6",
													"statements": [
														{
															"nativeSrc": "2660:26:6",
															"nodeType": "YulAssignment",
															"src": "2660:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2672:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2672:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2683:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2683:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2668:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2668:3:6"
																},
																"nativeSrc": "2668:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2668:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2660:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2660:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2702:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2702:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2717:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2717:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2733:3:6",
																								"nodeType": "YulLiteral",
																								"src": "2733:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2738:1:6",
																								"nodeType": "YulLiteral",
																								"src": "2738:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2729:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "2729:3:6"
																						},
																						"nativeSrc": "2729:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "2729:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2742:1:6",
																						"nodeType": "YulLiteral",
																						"src": "2742:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2725:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2725:3:6"
																				},
																				"nativeSrc": "2725:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2725:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2713:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2713:3:6"
																		},
																		"nativeSrc": "2713:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2713:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2695:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2695:6:6"
																},
																"nativeSrc": "2695:51:6",
																"nodeType": "YulFunctionCall",
																"src": "2695:51:6"
															},
															"nativeSrc": "2695:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "2695:51:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2549:203:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2619:9:6",
														"nodeType": "YulTypedName",
														"src": "2619:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2630:6:6",
														"nodeType": "YulTypedName",
														"src": "2630:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2641:4:6",
														"nodeType": "YulTypedName",
														"src": "2641:4:6",
														"type": ""
													}
												],
												"src": "2549:203:6"
											},
											{
												"body": {
													"nativeSrc": "2812:325:6",
													"nodeType": "YulBlock",
													"src": "2812:325:6",
													"statements": [
														{
															"nativeSrc": "2822:22:6",
															"nodeType": "YulAssignment",
															"src": "2822:22:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2836:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2836:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "2839:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2839:4:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "2832:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2832:3:6"
																},
																"nativeSrc": "2832:12:6",
																"nodeType": "YulFunctionCall",
																"src": "2832:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2822:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2822:6:6"
																}
															]
														},
														{
															"nativeSrc": "2853:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2853:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2883:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2883:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2889:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2889:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2879:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2879:3:6"
																},
																"nativeSrc": "2879:12:6",
																"nodeType": "YulFunctionCall",
																"src": "2879:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2857:18:6",
																	"nodeType": "YulTypedName",
																	"src": "2857:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2930:31:6",
																"nodeType": "YulBlock",
																"src": "2930:31:6",
																"statements": [
																	{
																		"nativeSrc": "2932:27:6",
																		"nodeType": "YulAssignment",
																		"src": "2932:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2946:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "2946:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2954:4:6",
																					"nodeType": "YulLiteral",
																					"src": "2954:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2942:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2942:3:6"
																			},
																			"nativeSrc": "2942:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2942:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2932:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2932:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2910:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "2910:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2903:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2903:6:6"
																},
																"nativeSrc": "2903:26:6",
																"nodeType": "YulFunctionCall",
																"src": "2903:26:6"
															},
															"nativeSrc": "2900:61:6",
															"nodeType": "YulIf",
															"src": "2900:61:6"
														},
														{
															"body": {
																"nativeSrc": "3020:111:6",
																"nodeType": "YulBlock",
																"src": "3020:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3041:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3041:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3048:3:6",
																							"nodeType": "YulLiteral",
																							"src": "3048:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3053:10:6",
																							"nodeType": "YulLiteral",
																							"src": "3053:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3044:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "3044:3:6"
																					},
																					"nativeSrc": "3044:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3044:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3034:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3034:6:6"
																			},
																			"nativeSrc": "3034:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3034:31:6"
																		},
																		"nativeSrc": "3034:31:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3034:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3085:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3085:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3088:4:6",
																					"nodeType": "YulLiteral",
																					"src": "3088:4:6",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3078:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3078:6:6"
																			},
																			"nativeSrc": "3078:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3078:15:6"
																		},
																		"nativeSrc": "3078:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3078:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3113:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3113:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3116:4:6",
																					"nodeType": "YulLiteral",
																					"src": "3116:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3106:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3106:6:6"
																			},
																			"nativeSrc": "3106:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3106:15:6"
																		},
																		"nativeSrc": "3106:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3106:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2976:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "2976:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2999:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2999:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3007:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3007:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2996:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2996:2:6"
																		},
																		"nativeSrc": "2996:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2996:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2973:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2973:2:6"
																},
																"nativeSrc": "2973:38:6",
																"nodeType": "YulFunctionCall",
																"src": "2973:38:6"
															},
															"nativeSrc": "2970:161:6",
															"nodeType": "YulIf",
															"src": "2970:161:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2757:380:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2792:4:6",
														"nodeType": "YulTypedName",
														"src": "2792:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2801:6:6",
														"nodeType": "YulTypedName",
														"src": "2801:6:6",
														"type": ""
													}
												],
												"src": "2757:380:6"
											},
											{
												"body": {
													"nativeSrc": "3316:162:6",
													"nodeType": "YulBlock",
													"src": "3316:162:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3333:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3333:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3344:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3344:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3326:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3326:6:6"
																},
																"nativeSrc": "3326:21:6",
																"nodeType": "YulFunctionCall",
																"src": "3326:21:6"
															},
															"nativeSrc": "3326:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "3326:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3367:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3367:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3378:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3378:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3363:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3363:3:6"
																		},
																		"nativeSrc": "3363:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3363:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3383:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3383:2:6",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3356:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3356:6:6"
																},
																"nativeSrc": "3356:30:6",
																"nodeType": "YulFunctionCall",
																"src": "3356:30:6"
															},
															"nativeSrc": "3356:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "3356:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3406:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3406:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3417:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3417:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3402:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3402:3:6"
																		},
																		"nativeSrc": "3402:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3402:18:6"
																	},
																	{
																		"hexValue": "556e617574686f72697a6564",
																		"kind": "string",
																		"nativeSrc": "3422:14:6",
																		"nodeType": "YulLiteral",
																		"src": "3422:14:6",
																		"type": "",
																		"value": "Unauthorized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3395:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3395:6:6"
																},
																"nativeSrc": "3395:42:6",
																"nodeType": "YulFunctionCall",
																"src": "3395:42:6"
															},
															"nativeSrc": "3395:42:6",
															"nodeType": "YulExpressionStatement",
															"src": "3395:42:6"
														},
														{
															"nativeSrc": "3446:26:6",
															"nodeType": "YulAssignment",
															"src": "3446:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3458:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3458:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3469:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3469:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3454:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3454:3:6"
																},
																"nativeSrc": "3454:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3454:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3446:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3446:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3142:336:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3293:9:6",
														"nodeType": "YulTypedName",
														"src": "3293:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3307:4:6",
														"nodeType": "YulTypedName",
														"src": "3307:4:6",
														"type": ""
													}
												],
												"src": "3142:336:6"
											},
											{
												"body": {
													"nativeSrc": "3640:188:6",
													"nodeType": "YulBlock",
													"src": "3640:188:6",
													"statements": [
														{
															"nativeSrc": "3650:26:6",
															"nodeType": "YulAssignment",
															"src": "3650:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3662:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3662:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3673:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3673:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3658:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3658:3:6"
																},
																"nativeSrc": "3658:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3658:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3650:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3650:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3692:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3692:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3707:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3707:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3723:3:6",
																								"nodeType": "YulLiteral",
																								"src": "3723:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3728:1:6",
																								"nodeType": "YulLiteral",
																								"src": "3728:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3719:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "3719:3:6"
																						},
																						"nativeSrc": "3719:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "3719:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3732:1:6",
																						"nodeType": "YulLiteral",
																						"src": "3732:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3715:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3715:3:6"
																				},
																				"nativeSrc": "3715:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3715:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3703:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3703:3:6"
																		},
																		"nativeSrc": "3703:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3703:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3685:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3685:6:6"
																},
																"nativeSrc": "3685:51:6",
																"nodeType": "YulFunctionCall",
																"src": "3685:51:6"
															},
															"nativeSrc": "3685:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "3685:51:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3756:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3756:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3767:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3767:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3752:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3752:3:6"
																		},
																		"nativeSrc": "3752:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3752:18:6"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3772:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3772:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3745:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3745:6:6"
																},
																"nativeSrc": "3745:34:6",
																"nodeType": "YulFunctionCall",
																"src": "3745:34:6"
															},
															"nativeSrc": "3745:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "3745:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3799:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3799:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3810:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3810:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3795:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3795:3:6"
																		},
																		"nativeSrc": "3795:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3795:18:6"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "3815:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3815:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3788:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3788:6:6"
																},
																"nativeSrc": "3788:34:6",
																"nodeType": "YulFunctionCall",
																"src": "3788:34:6"
															},
															"nativeSrc": "3788:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "3788:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "3483:345:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3593:9:6",
														"nodeType": "YulTypedName",
														"src": "3593:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3604:6:6",
														"nodeType": "YulTypedName",
														"src": "3604:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3612:6:6",
														"nodeType": "YulTypedName",
														"src": "3612:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3620:6:6",
														"nodeType": "YulTypedName",
														"src": "3620:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3631:4:6",
														"nodeType": "YulTypedName",
														"src": "3631:4:6",
														"type": ""
													}
												],
												"src": "3483:345:6"
											},
											{
												"body": {
													"nativeSrc": "3881:174:6",
													"nodeType": "YulBlock",
													"src": "3881:174:6",
													"statements": [
														{
															"nativeSrc": "3891:16:6",
															"nodeType": "YulAssignment",
															"src": "3891:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3902:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3902:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3905:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3905:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3898:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3898:3:6"
																},
																"nativeSrc": "3898:9:6",
																"nodeType": "YulFunctionCall",
																"src": "3898:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3891:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3891:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3938:111:6",
																"nodeType": "YulBlock",
																"src": "3938:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3959:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3959:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3966:3:6",
																							"nodeType": "YulLiteral",
																							"src": "3966:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3971:10:6",
																							"nodeType": "YulLiteral",
																							"src": "3971:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3962:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "3962:3:6"
																					},
																					"nativeSrc": "3962:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3962:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3952:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3952:6:6"
																			},
																			"nativeSrc": "3952:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3952:31:6"
																		},
																		"nativeSrc": "3952:31:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3952:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4003:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4003:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4006:4:6",
																					"nodeType": "YulLiteral",
																					"src": "4006:4:6",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3996:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3996:6:6"
																			},
																			"nativeSrc": "3996:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3996:15:6"
																		},
																		"nativeSrc": "3996:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3996:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4031:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4031:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4034:4:6",
																					"nodeType": "YulLiteral",
																					"src": "4034:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4024:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4024:6:6"
																			},
																			"nativeSrc": "4024:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4024:15:6"
																		},
																		"nativeSrc": "4024:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4024:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3922:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3922:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3925:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3925:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3919:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3919:2:6"
																},
																"nativeSrc": "3919:10:6",
																"nodeType": "YulFunctionCall",
																"src": "3919:10:6"
															},
															"nativeSrc": "3916:133:6",
															"nodeType": "YulIf",
															"src": "3916:133:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "3833:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3864:1:6",
														"nodeType": "YulTypedName",
														"src": "3864:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3867:1:6",
														"nodeType": "YulTypedName",
														"src": "3867:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3873:3:6",
														"nodeType": "YulTypedName",
														"src": "3873:3:6",
														"type": ""
													}
												],
												"src": "3833:222:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"Unauthorized\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100b1575f3560e01c806370a082311161006e57806370a082311461013f57806395d89b4114610167578063a9059cbb1461016f578063dd62ed3e14610182578063f0dda65c146101ba578063f851a440146101cd575f80fd5b806306fdde03146100b5578063095ea7b3146100d357806318160ddd146100f657806323b872dd14610108578063313ce5671461011b5780636d1b229d1461012a575b5f80fd5b6100bd6101f8565b6040516100ca9190610693565b60405180910390f35b6100e66100e13660046106e3565b610288565b60405190151581526020016100ca565b6002545b6040519081526020016100ca565b6100e661011636600461070b565b6102a1565b604051601281526020016100ca565b61013d610138366004610745565b6102c4565b005b6100fa61014d36600461075c565b6001600160a01b03165f9081526020819052604090205490565b6100bd6102d1565b6100e661017d3660046106e3565b6102e0565b6100fa61019036600461077c565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b61013d6101c83660046106e3565b6102ed565b6005546101e0906001600160a01b031681565b6040516001600160a01b0390911681526020016100ca565b606060038054610207906107ad565b80601f0160208091040260200160405190810160405280929190818152602001828054610233906107ad565b801561027e5780601f106102555761010080835404028352916020019161027e565b820191905f5260205f20905b81548152906001019060200180831161026157829003601f168201915b5050505050905090565b5f33610295818585610349565b60019150505b92915050565b5f336102ae85828561035b565b6102b98585856103d6565b506001949350505050565b6102ce3382610433565b50565b606060048054610207906107ad565b5f336102958185856103d6565b6005546001600160a01b0316331461033b5760405162461bcd60e51b815260206004820152600c60248201526b155b985d5d1a1bdc9a5e995960a21b60448201526064015b60405180910390fd5b6103458282610467565b5050565b610356838383600161049b565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f1981146103d057818110156103c257604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610332565b6103d084848484035f61049b565b50505050565b6001600160a01b0383166103ff57604051634b637e8f60e11b81525f6004820152602401610332565b6001600160a01b0382166104285760405163ec442f0560e01b81525f6004820152602401610332565b61035683838361056d565b6001600160a01b03821661045c57604051634b637e8f60e11b81525f6004820152602401610332565b610345825f8361056d565b6001600160a01b0382166104905760405163ec442f0560e01b81525f6004820152602401610332565b6103455f838361056d565b6001600160a01b0384166104c45760405163e602df0560e01b81525f6004820152602401610332565b6001600160a01b0383166104ed57604051634a1406b160e11b81525f6004820152602401610332565b6001600160a01b038085165f90815260016020908152604080832093871683529290522082905580156103d057826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161055f91815260200190565b60405180910390a350505050565b6001600160a01b038316610597578060025f82825461058c91906107e5565b909155506106079050565b6001600160a01b0383165f90815260208190526040902054818110156105e95760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610332565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b03821661062357600280548290039055610641565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161068691815260200190565b60405180910390a3505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b03811681146106de575f80fd5b919050565b5f80604083850312156106f4575f80fd5b6106fd836106c8565b946020939093013593505050565b5f805f6060848603121561071d575f80fd5b610726846106c8565b9250610734602085016106c8565b929592945050506040919091013590565b5f60208284031215610755575f80fd5b5035919050565b5f6020828403121561076c575f80fd5b610775826106c8565b9392505050565b5f806040838503121561078d575f80fd5b610796836106c8565b91506107a4602084016106c8565b90509250929050565b600181811c908216806107c157607f821691505b6020821081036107df57634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561029b57634e487b7160e01b5f52601160045260245ffdfea2646970667358221220bf95607444b8822a53ca3f8d86ee923f334aa985a7e52cebe17d6b73f546e03064736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB1 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x13F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0xF0DDA65C EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x1CD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x108 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x6D1B229D EQ PUSH2 0x12A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xBD PUSH2 0x1F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCA SWAP2 SWAP1 PUSH2 0x693 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH2 0xE1 CALLDATASIZE PUSH1 0x4 PUSH2 0x6E3 JUMP JUMPDEST PUSH2 0x288 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCA JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCA JUMP JUMPDEST PUSH2 0xE6 PUSH2 0x116 CALLDATASIZE PUSH1 0x4 PUSH2 0x70B JUMP JUMPDEST PUSH2 0x2A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCA JUMP JUMPDEST PUSH2 0x13D PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0x745 JUMP JUMPDEST PUSH2 0x2C4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFA PUSH2 0x14D CALLDATASIZE PUSH1 0x4 PUSH2 0x75C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xBD PUSH2 0x2D1 JUMP JUMPDEST PUSH2 0xE6 PUSH2 0x17D CALLDATASIZE PUSH1 0x4 PUSH2 0x6E3 JUMP JUMPDEST PUSH2 0x2E0 JUMP JUMPDEST PUSH2 0xFA PUSH2 0x190 CALLDATASIZE PUSH1 0x4 PUSH2 0x77C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x13D PUSH2 0x1C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x6E3 JUMP JUMPDEST PUSH2 0x2ED JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x1E0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCA JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x207 SWAP1 PUSH2 0x7AD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x233 SWAP1 PUSH2 0x7AD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x27E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x255 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x27E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x261 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x295 DUP2 DUP6 DUP6 PUSH2 0x349 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2AE DUP6 DUP3 DUP6 PUSH2 0x35B JUMP JUMPDEST PUSH2 0x2B9 DUP6 DUP6 DUP6 PUSH2 0x3D6 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2CE CALLER DUP3 PUSH2 0x433 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x207 SWAP1 PUSH2 0x7AD JUMP JUMPDEST PUSH0 CALLER PUSH2 0x295 DUP2 DUP6 DUP6 PUSH2 0x3D6 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x33B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x155B985D5D1A1BDC9A5E9959 PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x345 DUP3 DUP3 PUSH2 0x467 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x356 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x49B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0x3D0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x3C2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x332 JUMP JUMPDEST PUSH2 0x3D0 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x49B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3FF JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x332 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x428 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x332 JUMP JUMPDEST PUSH2 0x356 DUP4 DUP4 DUP4 PUSH2 0x56D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x45C JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x332 JUMP JUMPDEST PUSH2 0x345 DUP3 PUSH0 DUP4 PUSH2 0x56D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x490 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x332 JUMP JUMPDEST PUSH2 0x345 PUSH0 DUP4 DUP4 PUSH2 0x56D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x4C4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x332 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x4ED JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x332 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x3D0 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x55F SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x597 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x58C SWAP2 SWAP1 PUSH2 0x7E5 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x607 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x5E9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x332 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x623 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x641 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x686 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6DE JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6F4 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x6FD DUP4 PUSH2 0x6C8 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x71D JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x726 DUP5 PUSH2 0x6C8 JUMP JUMPDEST SWAP3 POP PUSH2 0x734 PUSH1 0x20 DUP6 ADD PUSH2 0x6C8 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x755 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x76C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x775 DUP3 PUSH2 0x6C8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x78D JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x796 DUP4 PUSH2 0x6C8 JUMP JUMPDEST SWAP2 POP PUSH2 0x7A4 PUSH1 0x20 DUP5 ADD PUSH2 0x6C8 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7C1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7DF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x29B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF SWAP6 PUSH1 0x74 PREVRANDAO 0xB8 DUP3 0x2A MSTORE8 0xCA EXTCODEHASH DUP14 DUP7 0xEE SWAP3 EXTCODEHASH CALLER BLOBBASEFEE 0xA9 DUP6 0xA7 0xE5 0x2C 0xEB 0xE1 PUSH30 0x6B73F546E03064736F6C634300081A003300000000000000000000000000 ",
							"sourceMap": "77:476:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1734:89:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3953:186;;;;;;:::i;:::-;;:::i;:::-;;;1085:14:6;;1078:22;1060:41;;1048:2;1033:18;3953:186:1;920:187:6;2804:97:1;2882:12;;2804:97;;;1258:25:6;;;1246:2;1231:18;2804:97:1;1112:177:6;4731:244:1;;;;;;:::i;:::-;;:::i;2662:82::-;;;2735:2;1815:36:6;;1803:2;1788:18;2662:82:1;1673:184:6;471:80:4;;;;;;:::i;:::-;;:::i;:::-;;2959:116:1;;;;;;:::i;:::-;-1:-1:-1;;;;;3050:18:1;3024:7;3050:18;;;;;;;;;;;;2959:116;1936:93;;;:::i;3270:178::-;;;;;;:::i;:::-;;:::i;3506:140::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3612:18:1;;;3586:7;3612:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3506:140;371:94:4;;;;;;:::i;:::-;;:::i;111:20::-;;;;;-1:-1:-1;;;;;111:20:4;;;;;;-1:-1:-1;;;;;2713:32:6;;;2695:51;;2683:2;2668:18;111:20:4;2549:203:6;1734:89:1;1779:13;1811:5;1804:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1734:89;:::o;3953:186::-;4026:4;735:10:0;4080:31:1;735:10:0;4096:7:1;4105:5;4080:8;:31::i;:::-;4128:4;4121:11;;;3953:186;;;;;:::o;4731:244::-;4818:4;735:10:0;4874:37:1;4890:4;735:10:0;4905:5:1;4874:15;:37::i;:::-;4921:26;4931:4;4937:2;4941:5;4921:9;:26::i;:::-;-1:-1:-1;4964:4:1;;4731:244;-1:-1:-1;;;;4731:244:1:o;471:80:4:-;520:24;526:10;538:5;520;:24::i;:::-;471:80;:::o;1936:93:1:-;1983:13;2015:7;2008:14;;;;;:::i;3270:178::-;3339:4;735:10:0;3393:27:1;735:10:0;3410:2:1;3414:5;3393:9;:27::i;371:94:4:-;325:5;;-1:-1:-1;;;;;325:5:4;311:10;:19;303:44;;;;-1:-1:-1;;;303:44:4;;3344:2:6;303:44:4;;;3326:21:6;3383:2;3363:18;;;3356:30;-1:-1:-1;;;3402:18:6;;;3395:42;3454:18;;303:44:4;;;;;;;;;442:16:::1;448:2;452:5;442;:16::i;:::-;371:94:::0;;:::o;8681:128:1:-;8765:37;8774:5;8781:7;8790:5;8797:4;8765:8;:37::i;:::-;8681:128;;;:::o;10370:477::-;-1:-1:-1;;;;;3612:18:1;;;10469:24;3612:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10535:37:1;;10531:310;;10611:5;10592:16;:24;10588:130;;;10643:60;;-1:-1:-1;;;10643:60:1;;-1:-1:-1;;;;;3703:32:6;;10643:60:1;;;3685:51:6;3752:18;;;3745:34;;;3795:18;;;3788:34;;;3658:18;;10643:60:1;3483:345:6;10588:130:1;10759:57;10768:5;10775:7;10803:5;10784:16;:24;10810:5;10759:8;:57::i;:::-;10459:388;10370:477;;;:::o;5348:300::-;-1:-1:-1;;;;;5431:18:1;;5427:86;;5472:30;;-1:-1:-1;;;5472:30:1;;5499:1;5472:30;;;2695:51:6;2668:18;;5472:30:1;2549:203:6;5427:86:1;-1:-1:-1;;;;;5526:16:1;;5522:86;;5565:32;;-1:-1:-1;;;5565:32:1;;5594:1;5565:32;;;2695:51:6;2668:18;;5565:32:1;2549:203:6;5522:86:1;5617:24;5625:4;5631:2;5635:5;5617:7;:24::i;7939:206::-;-1:-1:-1;;;;;8009:21:1;;8005:89;;8053:30;;-1:-1:-1;;;8053:30:1;;8080:1;8053:30;;;2695:51:6;2668:18;;8053:30:1;2549:203:6;8005:89:1;8103:35;8111:7;8128:1;8132:5;8103:7;:35::i;7413:208::-;-1:-1:-1;;;;;7483:21:1;;7479:91;;7527:32;;-1:-1:-1;;;7527:32:1;;7556:1;7527:32;;;2695:51:6;2668:18;;7527:32:1;2549:203:6;7479:91:1;7579:35;7595:1;7599:7;7608:5;7579:7;:35::i;9656:432::-;-1:-1:-1;;;;;9768:19:1;;9764:89;;9810:32;;-1:-1:-1;;;9810:32:1;;9839:1;9810:32;;;2695:51:6;2668:18;;9810:32:1;2549:203:6;9764:89:1;-1:-1:-1;;;;;9866:21:1;;9862:90;;9910:31;;-1:-1:-1;;;9910:31:1;;9938:1;9910:31;;;2695:51:6;2668:18;;9910:31:1;2549:203:6;9862:90:1;-1:-1:-1;;;;;9961:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10006:76;;;;10056:7;-1:-1:-1;;;;;10040:31:1;10049:5;-1:-1:-1;;;;;10040:31:1;;10065:5;10040:31;;;;1258:25:6;;1246:2;1231:18;;1112:177;10040:31:1;;;;;;;;9656:432;;;;:::o;5963:1107::-;-1:-1:-1;;;;;6052:18:1;;6048:540;;6204:5;6188:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6048:540:1;;-1:-1:-1;6048:540:1;;-1:-1:-1;;;;;6262:15:1;;6240:19;6262:15;;;;;;;;;;;6295:19;;;6291:115;;;6341:50;;-1:-1:-1;;;6341:50:1;;-1:-1:-1;;;;;3703:32:6;;6341:50:1;;;3685:51:6;3752:18;;;3745:34;;;3795:18;;;3788:34;;;3658:18;;6341:50:1;3483:345:6;6291:115:1;-1:-1:-1;;;;;6526:15:1;;:9;:15;;;;;;;;;;6544:19;;;;6526:37;;6048:540;-1:-1:-1;;;;;6602:16:1;;6598:425;;6765:12;:21;;;;;;;6598:425;;;-1:-1:-1;;;;;6976:13:1;;:9;:13;;;;;;;;;;:22;;;;;;6598:425;7053:2;-1:-1:-1;;;;;7038:25:1;7047:4;-1:-1:-1;;;;;7038:25:1;;7057:5;7038:25;;;;1258::6;;1246:2;1231:18;;1112:177;7038:25:1;;;;;;;;5963:1107;;;:::o;14:418:6:-;163:2;152:9;145:21;126:4;195:6;189:13;238:6;233:2;222:9;218:18;211:34;297:6;292:2;284:6;280:15;275:2;264:9;260:18;254:50;353:1;348:2;339:6;328:9;324:22;320:31;313:42;423:2;416;412:7;407:2;399:6;395:15;391:29;380:9;376:45;372:54;364:62;;;14:418;;;;:::o;437:173::-;505:20;;-1:-1:-1;;;;;554:31:6;;544:42;;534:70;;600:1;597;590:12;534:70;437:173;;;:::o;615:300::-;683:6;691;744:2;732:9;723:7;719:23;715:32;712:52;;;760:1;757;750:12;712:52;783:29;802:9;783:29;:::i;:::-;773:39;881:2;866:18;;;;853:32;;-1:-1:-1;;;615:300:6:o;1294:374::-;1371:6;1379;1387;1440:2;1428:9;1419:7;1415:23;1411:32;1408:52;;;1456:1;1453;1446:12;1408:52;1479:29;1498:9;1479:29;:::i;:::-;1469:39;;1527:38;1561:2;1550:9;1546:18;1527:38;:::i;:::-;1294:374;;1517:48;;-1:-1:-1;;;1634:2:6;1619:18;;;;1606:32;;1294:374::o;1862:226::-;1921:6;1974:2;1962:9;1953:7;1949:23;1945:32;1942:52;;;1990:1;1987;1980:12;1942:52;-1:-1:-1;2035:23:6;;1862:226;-1:-1:-1;1862:226:6:o;2093:186::-;2152:6;2205:2;2193:9;2184:7;2180:23;2176:32;2173:52;;;2221:1;2218;2211:12;2173:52;2244:29;2263:9;2244:29;:::i;:::-;2234:39;2093:186;-1:-1:-1;;;2093:186:6:o;2284:260::-;2352:6;2360;2413:2;2401:9;2392:7;2388:23;2384:32;2381:52;;;2429:1;2426;2419:12;2381:52;2452:29;2471:9;2452:29;:::i;:::-;2442:39;;2500:38;2534:2;2523:9;2519:18;2500:38;:::i;:::-;2490:48;;2284:260;;;;;:::o;2757:380::-;2836:1;2832:12;;;;2879;;;2900:61;;2954:4;2946:6;2942:17;2932:27;;2900:61;3007:2;2999:6;2996:14;2976:18;2973:38;2970:161;;3053:10;3048:3;3044:20;3041:1;3034:31;3088:4;3085:1;3078:15;3116:4;3113:1;3106:15;2970:161;;2757:380;;;:::o;3833:222::-;3898:9;;;3919:10;;;3916:133;;;3971:10;3966:3;3962:20;3959:1;3952:31;4006:4;4003:1;3996:15;4034:4;4031:1;4024:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "421200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"admin()": "2446",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24735",
								"balanceOf(address)": "2537",
								"burnTokens(uint256)": "51027",
								"decimals()": "265",
								"mintTokens(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2325",
								"transfer(address,uint256)": "51260",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 77,
									"end": 553,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 77,
									"end": 553,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 77,
									"end": 553,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 138,
									"end": 268,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 138,
									"end": 268,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 138,
									"end": 268,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 138,
									"end": 268,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 138,
									"end": 268,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 138,
									"end": 268,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 138,
									"end": 268,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 138,
									"end": 268,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 138,
									"end": 268,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 138,
									"end": 268,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 138,
									"end": 268,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1556,
									"end": 1669,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1556,
									"end": 1669,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1556,
									"end": 1669,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1556,
									"end": 1669,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1556,
									"end": 1669,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1556,
									"end": 1669,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1556,
									"end": 1669,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1556,
									"end": 1669,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1556,
									"end": 1669,
									"name": "PUSH",
									"source": 1,
									"value": "A"
								},
								{
									"begin": 1556,
									"end": 1669,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1556,
									"end": 1669,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1556,
									"end": 1669,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1556,
									"end": 1669,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "23B0B6B2902A37B5B2B7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "B1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1556,
									"end": 1669,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1556,
									"end": 1669,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1556,
									"end": 1669,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1556,
									"end": 1669,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1556,
									"end": 1669,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1556,
									"end": 1669,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1556,
									"end": 1669,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1556,
									"end": 1669,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1556,
									"end": 1669,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1556,
									"end": 1669,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1556,
									"end": 1669,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1556,
									"end": 1669,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1556,
									"end": 1669,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1556,
									"end": 1669,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1556,
									"end": 1669,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1556,
									"end": 1669,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "11D5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1556,
									"end": 1669,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1556,
									"end": 1669,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1556,
									"end": 1669,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1630,
									"end": 1635,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1622,
									"end": 1627,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1622,
									"end": 1635,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1622,
									"end": 1635,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1622,
									"end": 1635,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1622,
									"end": 1635,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1622,
									"end": 1635,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1622,
									"end": 1635,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1622,
									"end": 1635,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1622,
									"end": 1635,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1622,
									"end": 1635,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1645,
									"end": 1652,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1645,
									"end": 1662,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1655,
									"end": 1662,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1645,
									"end": 1652,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1645,
									"end": 1662,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1645,
									"end": 1662,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1645,
									"end": 1662,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1645,
									"end": 1662,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1645,
									"end": 1662,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1556,
									"end": 1669,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1556,
									"end": 1669,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 188,
									"end": 232,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 194,
									"end": 204,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 206,
									"end": 231,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "D3C21BCECCEDA1000000"
								},
								{
									"begin": 188,
									"end": 193,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 188,
									"end": 193,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 188,
									"end": 193,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 188,
									"end": 232,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 188,
									"end": 232,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 188,
									"end": 232,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 188,
									"end": 232,
									"modifierDepth": 1,
									"name": "tag",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 188,
									"end": 232,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 243,
									"end": 248,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 243,
									"end": 261,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 243,
									"end": 261,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 243,
									"end": 261,
									"modifierDepth": 1,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 251,
									"end": 261,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 243,
									"end": 261,
									"modifierDepth": 1,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 243,
									"end": 261,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 243,
									"end": 261,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 77,
									"end": 553,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 77,
									"end": 553,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7413,
									"end": 7621,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 7413,
									"end": 7621,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7483,
									"end": 7504,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7483,
									"end": 7504,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7479,
									"end": 7570,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 7479,
									"end": 7570,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7527,
									"end": 7559,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7527,
									"end": 7559,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "EC442F05"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 7527,
									"end": 7559,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7527,
									"end": 7559,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7556,
									"end": 7557,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7527,
									"end": 7559,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 7527,
									"end": 7559,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7527,
									"end": 7559,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2801,
									"end": 2852,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2774,
									"end": 2792,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 2774,
									"end": 2792,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7527,
									"end": 7559,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 7527,
									"end": 7559,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7527,
									"end": 7559,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7527,
									"end": 7559,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7527,
									"end": 7559,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7527,
									"end": 7559,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7527,
									"end": 7559,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7527,
									"end": 7559,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7527,
									"end": 7559,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 7479,
									"end": 7570,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 7479,
									"end": 7570,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7579,
									"end": 7614,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 7595,
									"end": 7596,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7599,
									"end": 7606,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7608,
									"end": 7613,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7579,
									"end": 7586,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 7579,
									"end": 7614,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7579,
									"end": 7614,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 7579,
									"end": 7614,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7413,
									"end": 7621,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7413,
									"end": 7621,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7413,
									"end": 7621,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5963,
									"end": 7070,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 5963,
									"end": 7070,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6052,
									"end": 6070,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6052,
									"end": 6070,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6048,
									"end": 6588,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 6048,
									"end": 6588,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6204,
									"end": 6209,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6188,
									"end": 6200,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 6188,
									"end": 6200,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6188,
									"end": 6209,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6188,
									"end": 6209,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6188,
									"end": 6209,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6188,
									"end": 6209,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6188,
									"end": 6209,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6188,
									"end": 6209,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6188,
									"end": 6209,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 6188,
									"end": 6209,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6188,
									"end": 6209,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6188,
									"end": 6209,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6188,
									"end": 6209,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6188,
									"end": 6209,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6188,
									"end": 6209,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6048,
									"end": 6588,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 6048,
									"end": 6588,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6048,
									"end": 6588,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6048,
									"end": 6588,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 6048,
									"end": 6588,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6262,
									"end": 6277,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6262,
									"end": 6277,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6240,
									"end": 6259,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6262,
									"end": 6277,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6262,
									"end": 6277,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6262,
									"end": 6277,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6262,
									"end": 6277,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6262,
									"end": 6277,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6262,
									"end": 6277,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6262,
									"end": 6277,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6262,
									"end": 6277,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6262,
									"end": 6277,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6262,
									"end": 6277,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6262,
									"end": 6277,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6295,
									"end": 6314,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6295,
									"end": 6314,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6295,
									"end": 6314,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6406,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 6291,
									"end": 6406,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6341,
									"end": 6391,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6341,
									"end": 6391,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "391434E3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6341,
									"end": 6391,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6341,
									"end": 6391,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3310,
									"end": 3342,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3310,
									"end": 3342,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6341,
									"end": 6391,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 6341,
									"end": 6391,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6341,
									"end": 6391,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3292,
									"end": 3343,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3359,
									"end": 3377,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 3359,
									"end": 3377,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3359,
									"end": 3377,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3352,
									"end": 3386,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3352,
									"end": 3386,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3352,
									"end": 3386,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3402,
									"end": 3420,
									"name": "PUSH",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 3402,
									"end": 3420,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3402,
									"end": 3420,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3395,
									"end": 3429,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3395,
									"end": 3429,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3395,
									"end": 3429,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3265,
									"end": 3283,
									"name": "PUSH",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 3265,
									"end": 3283,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6341,
									"end": 6391,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 3090,
									"end": 3435,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6291,
									"end": 6406,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 6291,
									"end": 6406,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6526,
									"end": 6541,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6526,
									"end": 6541,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6526,
									"end": 6535,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6526,
									"end": 6541,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6526,
									"end": 6541,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6526,
									"end": 6541,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6526,
									"end": 6541,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6526,
									"end": 6541,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6526,
									"end": 6541,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6526,
									"end": 6541,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6526,
									"end": 6541,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6526,
									"end": 6541,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6526,
									"end": 6541,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6544,
									"end": 6563,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6544,
									"end": 6563,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6544,
									"end": 6563,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6544,
									"end": 6563,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6526,
									"end": 6563,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6526,
									"end": 6563,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6048,
									"end": 6588,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 6048,
									"end": 6588,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6602,
									"end": 6618,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6602,
									"end": 6618,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6598,
									"end": 7023,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 6598,
									"end": 7023,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6765,
									"end": 6777,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 6765,
									"end": 6786,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6765,
									"end": 6786,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6765,
									"end": 6786,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6765,
									"end": 6786,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6765,
									"end": 6786,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6765,
									"end": 6786,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6765,
									"end": 6786,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6598,
									"end": 7023,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 6598,
									"end": 7023,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6598,
									"end": 7023,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 6598,
									"end": 7023,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6976,
									"end": 6989,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6976,
									"end": 6989,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6976,
									"end": 6985,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6976,
									"end": 6989,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6976,
									"end": 6989,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6976,
									"end": 6989,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6976,
									"end": 6989,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6976,
									"end": 6989,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6976,
									"end": 6989,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6976,
									"end": 6989,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6976,
									"end": 6989,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6976,
									"end": 6989,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6976,
									"end": 6989,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6976,
									"end": 6998,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6976,
									"end": 6998,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6976,
									"end": 6998,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6976,
									"end": 6998,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6976,
									"end": 6998,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6976,
									"end": 6998,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6598,
									"end": 7023,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 6598,
									"end": 7023,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7053,
									"end": 7055,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7038,
									"end": 7063,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7047,
									"end": 7051,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7038,
									"end": 7063,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7038,
									"end": 7063,
									"name": "PUSH",
									"source": 1,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7057,
									"end": 7062,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7038,
									"end": 7063,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7038,
									"end": 7063,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7038,
									"end": 7063,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 7038,
									"end": 7063,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3586,
									"end": 3611,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3586,
									"end": 3611,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3574,
									"end": 3576,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3559,
									"end": 3577,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3559,
									"end": 3577,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3440,
									"end": 3617,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7038,
									"end": 7063,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 7038,
									"end": 7063,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7038,
									"end": 7063,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7038,
									"end": 7063,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7038,
									"end": 7063,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7038,
									"end": 7063,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7038,
									"end": 7063,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7038,
									"end": 7063,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7038,
									"end": 7063,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 5963,
									"end": 7070,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5963,
									"end": 7070,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5963,
									"end": 7070,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5963,
									"end": 7070,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 146,
									"end": 526,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 146,
									"end": 526,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 225,
									"end": 226,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 268,
									"end": 280,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 289,
									"end": 350,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 343,
									"end": 347,
									"name": "PUSH",
									"source": 6,
									"value": "7F"
								},
								{
									"begin": 335,
									"end": 341,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 331,
									"end": 348,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 321,
									"end": 348,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 321,
									"end": 348,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 289,
									"end": 350,
									"name": "tag",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 396,
									"end": 398,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 388,
									"end": 394,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 385,
									"end": 399,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 365,
									"end": 383,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 362,
									"end": 400,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 359,
									"end": 520,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 442,
									"end": 452,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 437,
									"end": 440,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 433,
									"end": 453,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 430,
									"end": 431,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 454,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 477,
									"end": 481,
									"name": "PUSH",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 474,
									"end": 475,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 482,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 505,
									"end": 509,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 502,
									"end": 503,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 510,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 359,
									"end": 520,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 359,
									"end": 520,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 146,
									"end": 526,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 146,
									"end": 526,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 759,
									"end": 761,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 754,
									"end": 757,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 751,
									"end": 762,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 795,
									"end": 800,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 792,
									"end": 793,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 785,
									"end": 801,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 839,
									"end": 843,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 836,
									"end": 837,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 826,
									"end": 844,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 909,
									"end": 911,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 897,
									"end": 907,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 893,
									"end": 912,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 890,
									"end": 891,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 886,
									"end": 913,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 880,
									"end": 884,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 876,
									"end": 914,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 945,
									"end": 949,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 933,
									"end": 943,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 930,
									"end": 950,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 927,
									"end": 974,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 927,
									"end": 974,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 927,
									"end": 974,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 968,
									"end": 972,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 927,
									"end": 974,
									"name": "tag",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 927,
									"end": 974,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1023,
									"end": 1025,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 1018,
									"end": 1021,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1014,
									"end": 1026,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1011,
									"end": 1012,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 1007,
									"end": 1027,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1001,
									"end": 1005,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 997,
									"end": 1028,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 987,
									"end": 1028,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 987,
									"end": 1028,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "tag",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1096,
									"end": 1098,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1089,
									"end": 1094,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1086,
									"end": 1099,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1155,
									"end": 1156,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1141,
									"end": 1157,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1141,
									"end": 1157,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1122,
									"end": 1123,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1111,
									"end": 1124,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "tag",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1085,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1085,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "tag",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 657,
									"end": 1175,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1351,
									"end": 2650,
									"name": "tag",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 1351,
									"end": 2650,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1471,
									"end": 1481,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1471,
									"end": 1481,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1493,
									"end": 1523,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1493,
									"end": 1523,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 1526,
									"end": 1544,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "tag",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 1645,
									"end": 1651,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 1637,
									"end": 1641,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1631,
									"end": 1642,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 1605,
									"end": 1643,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "tag",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1599,
									"end": 1603,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 1555,
									"end": 1652,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "tag",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1701,
									"end": 1705,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1732,
									"end": 1734,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 1721,
									"end": 1735,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1721,
									"end": 1735,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1749,
									"end": 1750,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2437,
									"end": 2438,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2454,
									"end": 2460,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2451,
									"end": 2540,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2451,
									"end": 2540,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 2451,
									"end": 2540,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2506,
									"end": 2525,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2506,
									"end": 2525,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2506,
									"end": 2525,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2500,
									"end": 2526,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2451,
									"end": 2540,
									"name": "tag",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 2451,
									"end": 2540,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1308,
									"end": 1309,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1300,
									"end": 1324,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1325,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1286,
									"end": 1326,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1332,
									"end": 1333,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1283,
									"end": 1340,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 2553,
									"end": 2634,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2553,
									"end": 2634,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1714,
									"end": 2644,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 1714,
									"end": 2644,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "tag",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 604,
									"end": 605,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 597,
									"end": 611,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 641,
									"end": 645,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 646,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 628,
									"end": 646,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1780,
									"end": 1800,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1780,
									"end": 1800,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1780,
									"end": 1800,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "tag",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1912,
									"end": 1919,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1909,
									"end": 1910,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1906,
									"end": 1920,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1988,
									"end": 2014,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1973,
									"end": 2015,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1973,
									"end": 2015,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2101,
									"end": 2105,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2086,
									"end": 2106,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 2086,
									"end": 2106,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2086,
									"end": 2106,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2086,
									"end": 2106,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 2054,
									"end": 2055,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2042,
									"end": 2056,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2042,
									"end": 2056,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2042,
									"end": 2056,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2042,
									"end": 2056,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1928,
									"end": 1940,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "tag",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1902,
									"end": 1905,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2148,
									"end": 2154,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2139,
									"end": 2146,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2136,
									"end": 2155,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 2133,
									"end": 2334,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2133,
									"end": 2334,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 2133,
									"end": 2334,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2228,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2228,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2228,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2203,
									"end": 2229,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2292,
									"end": 2293,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 2288,
									"end": 2302,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 2288,
									"end": 2302,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2288,
									"end": 2302,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 2304,
									"end": 2307,
									"name": "PUSH",
									"source": 6,
									"value": "F8"
								},
								{
									"begin": 2284,
									"end": 2308,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2280,
									"end": 2317,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 2276,
									"end": 2318,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 2261,
									"end": 2319,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2246,
									"end": 2320,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2246,
									"end": 2320,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2133,
									"end": 2334,
									"name": "tag",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 2133,
									"end": 2334,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2380,
									"end": 2381,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2364,
									"end": 2378,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2364,
									"end": 2378,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2364,
									"end": 2378,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 2360,
									"end": 2382,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2347,
									"end": 2383,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2347,
									"end": 2383,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1351,
									"end": 2650,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2863,
									"end": 3085,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 2863,
									"end": 3085,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2928,
									"end": 2937,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2928,
									"end": 2937,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2928,
									"end": 2937,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2949,
									"end": 2959,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2949,
									"end": 2959,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2949,
									"end": 2959,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 2946,
									"end": 3079,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2946,
									"end": 3079,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 2946,
									"end": 3079,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3001,
									"end": 3011,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 2996,
									"end": 2999,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 2992,
									"end": 3012,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 2989,
									"end": 2990,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2982,
									"end": 3013,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3036,
									"end": 3040,
									"name": "PUSH",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 3033,
									"end": 3034,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 3026,
									"end": 3041,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3064,
									"end": 3068,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 3061,
									"end": 3062,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3054,
									"end": 3069,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 2946,
									"end": 3079,
									"name": "tag",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 2946,
									"end": 3079,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2863,
									"end": 3085,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2863,
									"end": 3085,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2863,
									"end": 3085,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2863,
									"end": 3085,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2863,
									"end": 3085,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3440,
									"end": 3617,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 3440,
									"end": 3617,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 77,
									"end": 553,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 77,
									"end": 553,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 77,
									"end": 553,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 77,
									"end": 553,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 77,
									"end": 553,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 77,
									"end": 553,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 77,
									"end": 553,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bf95607444b8822a53ca3f8d86ee923f334aa985a7e52cebe17d6b73f546e03064736f6c634300081a0033",
									".code": [
										{
											"begin": 77,
											"end": 553,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 77,
											"end": 553,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 77,
											"end": 553,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 77,
											"end": 553,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 77,
											"end": 553,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 77,
											"end": 553,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 77,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 77,
											"end": 553,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 77,
											"end": 553,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 77,
											"end": 553,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 77,
											"end": 553,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 77,
											"end": 553,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 77,
											"end": 553,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 77,
											"end": 553,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 77,
											"end": 553,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 77,
											"end": 553,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 77,
											"end": 553,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 77,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 77,
											"end": 553,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 77,
											"end": 553,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 77,
											"end": 553,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 77,
											"end": 553,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 77,
											"end": 553,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 77,
											"end": 553,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 77,
											"end": 553,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 77,
											"end": 553,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 77,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 77,
											"end": 553,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 77,
											"end": 553,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 77,
											"end": 553,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 77,
											"end": 553,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 77,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 77,
											"end": 553,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 77,
											"end": 553,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 77,
											"end": 553,
											"name": "PUSH",
											"source": 4,
											"value": "95D89B41"
										},
										{
											"begin": 77,
											"end": 553,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 77,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 77,
											"end": 553,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 77,
											"end": 553,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 77,
											"end": 553,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 77,
											"end": 553,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 77,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 77,
											"end": 553,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 77,
											"end": 553,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 77,
											"end": 553,
											"name": "PUSH",
											"source": 4,
											"value": "DD62ED3E"
										},
										{
											"begin": 77,
											"end": 553,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 77,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 77,
											"end": 553,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 77,
											"end": 553,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 77,
											"end": 553,
											"name": "PUSH",
											"source": 4,
											"value": "F0DDA65C"
										},
										{
											"begin": 77,
											"end": 553,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 77,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 77,
											"end": 553,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 77,
											"end": 553,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 77,
											"end": 553,
											"name": "PUSH",
											"source": 4,
											"value": "F851A440"
										},
										{
											"begin": 77,
											"end": 553,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 77,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 77,
											"end": 553,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 77,
											"end": 553,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 77,
											"end": 553,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 77,
											"end": 553,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 77,
											"end": 553,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 77,
											"end": 553,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 77,
											"end": 553,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 77,
											"end": 553,
											"name": "PUSH",
											"source": 4,
											"value": "6FDDE03"
										},
										{
											"begin": 77,
											"end": 553,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 77,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 77,
											"end": 553,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 77,
											"end": 553,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 77,
											"end": 553,
											"name": "PUSH",
											"source": 4,
											"value": "95EA7B3"
										},
										{
											"begin": 77,
											"end": 553,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 77,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 77,
											"end": 553,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 77,
											"end": 553,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 77,
											"end": 553,
											"name": "PUSH",
											"source": 4,
											"value": "18160DDD"
										},
										{
											"begin": 77,
											"end": 553,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 77,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 77,
											"end": 553,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 77,
											"end": 553,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 77,
											"end": 553,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 77,
											"end": 553,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 77,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 77,
											"end": 553,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 77,
											"end": 553,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 77,
											"end": 553,
											"name": "PUSH",
											"source": 4,
											"value": "313CE567"
										},
										{
											"begin": 77,
											"end": 553,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 77,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 77,
											"end": 553,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 77,
											"end": 553,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 77,
											"end": 553,
											"name": "PUSH",
											"source": 4,
											"value": "6D1B229D"
										},
										{
											"begin": 77,
											"end": 553,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 77,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 77,
											"end": 553,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 77,
											"end": 553,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 77,
											"end": 553,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 77,
											"end": 553,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 77,
											"end": 553,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 77,
											"end": 553,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1734,
											"end": 1823,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1734,
											"end": 1823,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1734,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1734,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1734,
											"end": 1823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1734,
											"end": 1823,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1734,
											"end": 1823,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1734,
											"end": 1823,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1734,
											"end": 1823,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1734,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1734,
											"end": 1823,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1734,
											"end": 1823,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1734,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1734,
											"end": 1823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1734,
											"end": 1823,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1734,
											"end": 1823,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1734,
											"end": 1823,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1734,
											"end": 1823,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1734,
											"end": 1823,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1734,
											"end": 1823,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1734,
											"end": 1823,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1734,
											"end": 1823,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1734,
											"end": 1823,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3953,
											"end": 4139,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3953,
											"end": 4139,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3953,
											"end": 4139,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3953,
											"end": 4139,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 3953,
											"end": 4139,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3953,
											"end": 4139,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3953,
											"end": 4139,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 3953,
											"end": 4139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3953,
											"end": 4139,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 3953,
											"end": 4139,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3953,
											"end": 4139,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 3953,
											"end": 4139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3953,
											"end": 4139,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3953,
											"end": 4139,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3953,
											"end": 4139,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3953,
											"end": 4139,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1099,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1085,
											"end": 1099,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1078,
											"end": 1100,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1060,
											"end": 1101,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1060,
											"end": 1101,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1050,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1033,
											"end": 1051,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3953,
											"end": 4139,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 920,
											"end": 1107,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2804,
											"end": 2901,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2804,
											"end": 2901,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2882,
											"end": 2894,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2882,
											"end": 2894,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2804,
											"end": 2901,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2804,
											"end": 2901,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2804,
											"end": 2901,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2804,
											"end": 2901,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1246,
											"end": 1248,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2804,
											"end": 2901,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1112,
											"end": 1289,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4731,
											"end": 4975,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4731,
											"end": 4975,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4731,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4731,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4731,
											"end": 4975,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4731,
											"end": 4975,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4731,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4731,
											"end": 4975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4731,
											"end": 4975,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4731,
											"end": 4975,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4731,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 4731,
											"end": 4975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2662,
											"end": 2744,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 2662,
											"end": 2744,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2662,
											"end": 2744,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2662,
											"end": 2744,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2735,
											"end": 2737,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1815,
											"end": 1851,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1815,
											"end": 1851,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1803,
											"end": 1805,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1788,
											"end": 1806,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2662,
											"end": 2744,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1673,
											"end": 1857,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 471,
											"end": 551,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 471,
											"end": 551,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 471,
											"end": 551,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 471,
											"end": 551,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 471,
											"end": 551,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 471,
											"end": 551,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 471,
											"end": 551,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 471,
											"end": 551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 471,
											"end": 551,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 471,
											"end": 551,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 471,
											"end": 551,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 471,
											"end": 551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 471,
											"end": 551,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 471,
											"end": 551,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 471,
											"end": 551,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 2959,
											"end": 3075,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 2959,
											"end": 3075,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2959,
											"end": 3075,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2959,
											"end": 3075,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2959,
											"end": 3075,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2959,
											"end": 3075,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2959,
											"end": 3075,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 2959,
											"end": 3075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2959,
											"end": 3075,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2959,
											"end": 3075,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3050,
											"end": 3068,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3024,
											"end": 3031,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3050,
											"end": 3068,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3050,
											"end": 3068,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3050,
											"end": 3068,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3050,
											"end": 3068,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3050,
											"end": 3068,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3050,
											"end": 3068,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3050,
											"end": 3068,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3050,
											"end": 3068,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3050,
											"end": 3068,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3050,
											"end": 3068,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3050,
											"end": 3068,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3050,
											"end": 3068,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2959,
											"end": 3075,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1936,
											"end": 2029,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1936,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1936,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1936,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1936,
											"end": 2029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3270,
											"end": 3448,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3270,
											"end": 3448,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3270,
											"end": 3448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3270,
											"end": 3448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3270,
											"end": 3448,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3270,
											"end": 3448,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3270,
											"end": 3448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 3270,
											"end": 3448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3270,
											"end": 3448,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3270,
											"end": 3448,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3270,
											"end": 3448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3270,
											"end": 3448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3506,
											"end": 3646,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3506,
											"end": 3646,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3506,
											"end": 3646,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3506,
											"end": 3646,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3506,
											"end": 3646,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3506,
											"end": 3646,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3506,
											"end": 3646,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3506,
											"end": 3646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3506,
											"end": 3646,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3506,
											"end": 3646,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3612,
											"end": 3630,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3612,
											"end": 3630,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3612,
											"end": 3630,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3586,
											"end": 3593,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3612,
											"end": 3630,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3612,
											"end": 3630,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3612,
											"end": 3630,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3612,
											"end": 3623,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3612,
											"end": 3630,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3612,
											"end": 3630,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3612,
											"end": 3630,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3612,
											"end": 3630,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3612,
											"end": 3630,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3612,
											"end": 3630,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3612,
											"end": 3630,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3612,
											"end": 3630,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3612,
											"end": 3639,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3612,
											"end": 3639,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3612,
											"end": 3639,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3612,
											"end": 3639,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3612,
											"end": 3639,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3612,
											"end": 3639,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3612,
											"end": 3639,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3612,
											"end": 3639,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3612,
											"end": 3639,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3612,
											"end": 3639,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3612,
											"end": 3639,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3612,
											"end": 3639,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3612,
											"end": 3639,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3506,
											"end": 3646,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 371,
											"end": 465,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 371,
											"end": 465,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 371,
											"end": 465,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 371,
											"end": 465,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 371,
											"end": 465,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 371,
											"end": 465,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 371,
											"end": 465,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 371,
											"end": 465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 371,
											"end": 465,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 371,
											"end": 465,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 371,
											"end": 465,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 371,
											"end": 465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 111,
											"end": 131,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 111,
											"end": 131,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 111,
											"end": 131,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 111,
											"end": 131,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 111,
											"end": 131,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 111,
											"end": 131,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 111,
											"end": 131,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 111,
											"end": 131,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 111,
											"end": 131,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 111,
											"end": 131,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 111,
											"end": 131,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 111,
											"end": 131,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 111,
											"end": 131,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2713,
											"end": 2745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2713,
											"end": 2745,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2713,
											"end": 2745,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2695,
											"end": 2746,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2695,
											"end": 2746,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2683,
											"end": 2685,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2668,
											"end": 2686,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 111,
											"end": 131,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 2549,
											"end": 2752,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1734,
											"end": 1823,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1734,
											"end": 1823,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1792,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1811,
											"end": 1816,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1804,
											"end": 1816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1804,
											"end": 1816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1734,
											"end": 1823,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1734,
											"end": 1823,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3953,
											"end": 4139,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 3953,
											"end": 4139,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4026,
											"end": 4030,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4080,
											"end": 4111,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4096,
											"end": 4103,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4105,
											"end": 4110,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4080,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 4080,
											"end": 4111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4080,
											"end": 4111,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 4080,
											"end": 4111,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4128,
											"end": 4132,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4121,
											"end": 4132,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4121,
											"end": 4132,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4121,
											"end": 4132,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3953,
											"end": 4139,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 3953,
											"end": 4139,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3953,
											"end": 4139,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3953,
											"end": 4139,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3953,
											"end": 4139,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3953,
											"end": 4139,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3953,
											"end": 4139,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4731,
											"end": 4975,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 4731,
											"end": 4975,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4818,
											"end": 4822,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4874,
											"end": 4911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 4890,
											"end": 4894,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4905,
											"end": 4910,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4874,
											"end": 4889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 4874,
											"end": 4911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4874,
											"end": 4911,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 4874,
											"end": 4911,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4921,
											"end": 4947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4931,
											"end": 4935,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4937,
											"end": 4939,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4941,
											"end": 4946,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4921,
											"end": 4930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 4921,
											"end": 4947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4921,
											"end": 4947,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4921,
											"end": 4947,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4964,
											"end": 4968,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4964,
											"end": 4968,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4731,
											"end": 4975,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4731,
											"end": 4975,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 471,
											"end": 551,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 471,
											"end": 551,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 520,
											"end": 544,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 526,
											"end": 536,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 538,
											"end": 543,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 520,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 520,
											"end": 544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 520,
											"end": 544,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 520,
											"end": 544,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 471,
											"end": 551,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 471,
											"end": 551,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1936,
											"end": 2029,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1936,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 1996,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2015,
											"end": 2022,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2008,
											"end": 2022,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2008,
											"end": 2022,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2008,
											"end": 2022,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2008,
											"end": 2022,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2008,
											"end": 2022,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2008,
											"end": 2022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3270,
											"end": 3448,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3270,
											"end": 3448,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3339,
											"end": 3343,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3393,
											"end": 3420,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3410,
											"end": 3412,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3414,
											"end": 3419,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3393,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 3393,
											"end": 3420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 371,
											"end": 465,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 371,
											"end": 465,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 325,
											"end": 330,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 325,
											"end": 330,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 325,
											"end": 330,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 311,
											"end": 321,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 311,
											"end": 330,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 303,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 303,
											"end": 347,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 303,
											"end": 347,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 303,
											"end": 347,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 303,
											"end": 347,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 303,
											"end": 347,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3344,
											"end": 3346,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 303,
											"end": 347,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 303,
											"end": 347,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 303,
											"end": 347,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3326,
											"end": 3347,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3383,
											"end": 3385,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 3363,
											"end": 3381,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3363,
											"end": 3381,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3363,
											"end": 3381,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3356,
											"end": 3386,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "155B985D5D1A1BDC9A5E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3402,
											"end": 3420,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3402,
											"end": 3420,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3402,
											"end": 3420,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3395,
											"end": 3437,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3454,
											"end": 3472,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3454,
											"end": 3472,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 303,
											"end": 347,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 303,
											"end": 347,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 303,
											"end": 347,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 303,
											"end": 347,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 303,
											"end": 347,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 303,
											"end": 347,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 303,
											"end": 347,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 303,
											"end": 347,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 303,
											"end": 347,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 303,
											"end": 347,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 303,
											"end": 347,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 442,
											"end": 458,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 448,
											"end": 450,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 452,
											"end": 457,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 442,
											"end": 447,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 442,
											"end": 458,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 442,
											"end": 458,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 442,
											"end": 458,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 371,
											"end": 465,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 371,
											"end": 465,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 371,
											"end": 465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8681,
											"end": 8809,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 8681,
											"end": 8809,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8765,
											"end": 8802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 8774,
											"end": 8779,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8781,
											"end": 8788,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8790,
											"end": 8795,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8797,
											"end": 8801,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8765,
											"end": 8773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 8765,
											"end": 8802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8765,
											"end": 8802,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 8765,
											"end": 8802,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8681,
											"end": 8809,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8681,
											"end": 8809,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8681,
											"end": 8809,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8681,
											"end": 8809,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10370,
											"end": 10847,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 10370,
											"end": 10847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3612,
											"end": 3630,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3612,
											"end": 3630,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3612,
											"end": 3630,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10469,
											"end": 10493,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3612,
											"end": 3630,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3612,
											"end": 3630,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3612,
											"end": 3630,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3612,
											"end": 3623,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3612,
											"end": 3630,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3612,
											"end": 3630,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3612,
											"end": 3630,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3612,
											"end": 3630,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3612,
											"end": 3630,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3612,
											"end": 3630,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3612,
											"end": 3630,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3612,
											"end": 3630,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3612,
											"end": 3639,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3612,
											"end": 3639,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3612,
											"end": 3639,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3612,
											"end": 3639,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3612,
											"end": 3639,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3612,
											"end": 3639,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3612,
											"end": 3639,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3612,
											"end": 3639,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3612,
											"end": 3639,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3612,
											"end": 3639,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10535,
											"end": 10572,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10535,
											"end": 10572,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10531,
											"end": 10841,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 10531,
											"end": 10841,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10611,
											"end": 10616,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10592,
											"end": 10608,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10592,
											"end": 10616,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10588,
											"end": 10718,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10588,
											"end": 10718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 10588,
											"end": 10718,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10643,
											"end": 10703,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10643,
											"end": 10703,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7DC7A0D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10643,
											"end": 10703,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10643,
											"end": 10703,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3703,
											"end": 3735,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3703,
											"end": 3735,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10643,
											"end": 10703,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10643,
											"end": 10703,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10643,
											"end": 10703,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3685,
											"end": 3736,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3752,
											"end": 3770,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3752,
											"end": 3770,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3752,
											"end": 3770,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3745,
											"end": 3779,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3745,
											"end": 3779,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3745,
											"end": 3779,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3795,
											"end": 3813,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3795,
											"end": 3813,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3795,
											"end": 3813,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3788,
											"end": 3822,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3788,
											"end": 3822,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3788,
											"end": 3822,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3658,
											"end": 3676,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3658,
											"end": 3676,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10643,
											"end": 10703,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 3483,
											"end": 3828,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10718,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 10588,
											"end": 10718,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10759,
											"end": 10816,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 10768,
											"end": 10773,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10775,
											"end": 10782,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10803,
											"end": 10808,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10800,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10808,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10810,
											"end": 10815,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10759,
											"end": 10767,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 10759,
											"end": 10816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10759,
											"end": 10816,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 10759,
											"end": 10816,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10459,
											"end": 10847,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10370,
											"end": 10847,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10370,
											"end": 10847,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10370,
											"end": 10847,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10370,
											"end": 10847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5348,
											"end": 5648,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 5348,
											"end": 5648,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5431,
											"end": 5449,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5431,
											"end": 5449,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5427,
											"end": 5513,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 5427,
											"end": 5513,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5472,
											"end": 5502,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5472,
											"end": 5502,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5472,
											"end": 5502,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5472,
											"end": 5502,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5499,
											"end": 5500,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5472,
											"end": 5502,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5472,
											"end": 5502,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5472,
											"end": 5502,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2695,
											"end": 2746,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2668,
											"end": 2686,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2668,
											"end": 2686,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5472,
											"end": 5502,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2549,
											"end": 2752,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5427,
											"end": 5513,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 5427,
											"end": 5513,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5526,
											"end": 5542,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5526,
											"end": 5542,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5522,
											"end": 5608,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 5522,
											"end": 5608,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5565,
											"end": 5597,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5565,
											"end": 5597,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5565,
											"end": 5597,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5565,
											"end": 5597,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5594,
											"end": 5595,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5565,
											"end": 5597,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5565,
											"end": 5597,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5565,
											"end": 5597,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2695,
											"end": 2746,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2668,
											"end": 2686,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2668,
											"end": 2686,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5565,
											"end": 5597,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2549,
											"end": 2752,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5522,
											"end": 5608,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 5522,
											"end": 5608,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5617,
											"end": 5641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 5625,
											"end": 5629,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5631,
											"end": 5633,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5635,
											"end": 5640,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5617,
											"end": 5624,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 5617,
											"end": 5641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7939,
											"end": 8145,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 7939,
											"end": 8145,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8009,
											"end": 8030,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8009,
											"end": 8030,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8005,
											"end": 8094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 8005,
											"end": 8094,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8053,
											"end": 8083,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8053,
											"end": 8083,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8053,
											"end": 8083,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8053,
											"end": 8083,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8080,
											"end": 8081,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8053,
											"end": 8083,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8053,
											"end": 8083,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8053,
											"end": 8083,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2695,
											"end": 2746,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2668,
											"end": 2686,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2668,
											"end": 2686,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8053,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2549,
											"end": 2752,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8005,
											"end": 8094,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 8005,
											"end": 8094,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8103,
											"end": 8138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 8111,
											"end": 8118,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8128,
											"end": 8129,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8132,
											"end": 8137,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8103,
											"end": 8110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 8103,
											"end": 8138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7413,
											"end": 7621,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 7413,
											"end": 7621,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7483,
											"end": 7504,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7483,
											"end": 7504,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7479,
											"end": 7570,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 7479,
											"end": 7570,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7527,
											"end": 7559,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7527,
											"end": 7559,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7527,
											"end": 7559,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7527,
											"end": 7559,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7556,
											"end": 7557,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7527,
											"end": 7559,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7527,
											"end": 7559,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7527,
											"end": 7559,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2695,
											"end": 2746,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2668,
											"end": 2686,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2668,
											"end": 2686,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7527,
											"end": 7559,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2549,
											"end": 2752,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7479,
											"end": 7570,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 7479,
											"end": 7570,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7579,
											"end": 7614,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 7595,
											"end": 7596,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7599,
											"end": 7606,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7608,
											"end": 7613,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7579,
											"end": 7586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 7579,
											"end": 7614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9656,
											"end": 10088,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 9656,
											"end": 10088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9768,
											"end": 9787,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9768,
											"end": 9787,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9764,
											"end": 9853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 9764,
											"end": 9853,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9810,
											"end": 9842,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9810,
											"end": 9842,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9810,
											"end": 9842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9810,
											"end": 9842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9839,
											"end": 9840,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9810,
											"end": 9842,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9810,
											"end": 9842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9810,
											"end": 9842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2695,
											"end": 2746,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2668,
											"end": 2686,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2668,
											"end": 2686,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9810,
											"end": 9842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2549,
											"end": 2752,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9764,
											"end": 9853,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 9764,
											"end": 9853,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9866,
											"end": 9887,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9866,
											"end": 9887,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9862,
											"end": 9952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 9862,
											"end": 9952,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9941,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9910,
											"end": 9941,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9910,
											"end": 9941,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9941,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9938,
											"end": 9939,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9910,
											"end": 9941,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9910,
											"end": 9941,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9941,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2695,
											"end": 2746,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2668,
											"end": 2686,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2668,
											"end": 2686,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9910,
											"end": 9941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2549,
											"end": 2752,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9862,
											"end": 9952,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 9862,
											"end": 9952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9961,
											"end": 9979,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9961,
											"end": 9979,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9961,
											"end": 9979,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9961,
											"end": 9979,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9961,
											"end": 9979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9961,
											"end": 9979,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9961,
											"end": 9979,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9961,
											"end": 9972,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9961,
											"end": 9979,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9961,
											"end": 9979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9961,
											"end": 9979,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9961,
											"end": 9979,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9961,
											"end": 9979,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9961,
											"end": 9979,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9961,
											"end": 9979,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9961,
											"end": 9979,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9961,
											"end": 9988,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 9961,
											"end": 9988,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9961,
											"end": 9988,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9961,
											"end": 9988,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9961,
											"end": 9988,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9961,
											"end": 9988,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9961,
											"end": 9988,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9961,
											"end": 9988,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9961,
											"end": 9988,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9961,
											"end": 9996,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9961,
											"end": 9996,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9961,
											"end": 9996,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10082,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10082,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10082,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 10006,
											"end": 10082,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10056,
											"end": 10063,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10040,
											"end": 10071,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10049,
											"end": 10054,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10040,
											"end": 10071,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10040,
											"end": 10071,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10065,
											"end": 10070,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10040,
											"end": 10071,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10040,
											"end": 10071,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10040,
											"end": 10071,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 10040,
											"end": 10071,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1246,
											"end": 1248,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1289,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10040,
											"end": 10071,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 10040,
											"end": 10071,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10040,
											"end": 10071,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10040,
											"end": 10071,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10040,
											"end": 10071,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10040,
											"end": 10071,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10040,
											"end": 10071,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10040,
											"end": 10071,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10040,
											"end": 10071,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 9656,
											"end": 10088,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9656,
											"end": 10088,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9656,
											"end": 10088,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9656,
											"end": 10088,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9656,
											"end": 10088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5963,
											"end": 7070,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 5963,
											"end": 7070,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6052,
											"end": 6070,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6052,
											"end": 6070,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6048,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 6048,
											"end": 6588,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6204,
											"end": 6209,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6188,
											"end": 6200,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6188,
											"end": 6200,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6188,
											"end": 6209,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6188,
											"end": 6209,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6188,
											"end": 6209,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6188,
											"end": 6209,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 6188,
											"end": 6209,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6188,
											"end": 6209,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6188,
											"end": 6209,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 6188,
											"end": 6209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6188,
											"end": 6209,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 6188,
											"end": 6209,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6188,
											"end": 6209,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6188,
											"end": 6209,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6188,
											"end": 6209,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6048,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 6048,
											"end": 6588,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6048,
											"end": 6588,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6048,
											"end": 6588,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 6048,
											"end": 6588,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6262,
											"end": 6277,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6262,
											"end": 6277,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6240,
											"end": 6259,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6262,
											"end": 6277,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6262,
											"end": 6277,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6262,
											"end": 6277,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6262,
											"end": 6277,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6262,
											"end": 6277,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6262,
											"end": 6277,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6262,
											"end": 6277,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6262,
											"end": 6277,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6262,
											"end": 6277,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6262,
											"end": 6277,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6262,
											"end": 6277,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6295,
											"end": 6314,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6295,
											"end": 6314,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6295,
											"end": 6314,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6406,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6406,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 6291,
											"end": 6406,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6341,
											"end": 6391,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6341,
											"end": 6391,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "391434E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6341,
											"end": 6391,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6341,
											"end": 6391,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3703,
											"end": 3735,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3703,
											"end": 3735,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6341,
											"end": 6391,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6341,
											"end": 6391,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6341,
											"end": 6391,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3685,
											"end": 3736,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3752,
											"end": 3770,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3752,
											"end": 3770,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3752,
											"end": 3770,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3745,
											"end": 3779,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3745,
											"end": 3779,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3745,
											"end": 3779,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3795,
											"end": 3813,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3795,
											"end": 3813,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3795,
											"end": 3813,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3788,
											"end": 3822,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3788,
											"end": 3822,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3788,
											"end": 3822,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3658,
											"end": 3676,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3658,
											"end": 3676,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6341,
											"end": 6391,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 3483,
											"end": 3828,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6291,
											"end": 6406,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 6291,
											"end": 6406,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6526,
											"end": 6541,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6526,
											"end": 6541,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6526,
											"end": 6535,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6526,
											"end": 6541,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6526,
											"end": 6541,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6526,
											"end": 6541,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6526,
											"end": 6541,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6526,
											"end": 6541,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6526,
											"end": 6541,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6526,
											"end": 6541,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6526,
											"end": 6541,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6526,
											"end": 6541,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6526,
											"end": 6541,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6544,
											"end": 6563,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6544,
											"end": 6563,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6544,
											"end": 6563,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6544,
											"end": 6563,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6526,
											"end": 6563,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6526,
											"end": 6563,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6048,
											"end": 6588,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 6048,
											"end": 6588,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6602,
											"end": 6618,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6602,
											"end": 6618,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6598,
											"end": 7023,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 6598,
											"end": 7023,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6765,
											"end": 6777,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6765,
											"end": 6786,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6765,
											"end": 6786,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6765,
											"end": 6786,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6765,
											"end": 6786,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6765,
											"end": 6786,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6765,
											"end": 6786,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6765,
											"end": 6786,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6598,
											"end": 7023,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 6598,
											"end": 7023,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6598,
											"end": 7023,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 6598,
											"end": 7023,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6976,
											"end": 6989,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6976,
											"end": 6989,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6976,
											"end": 6985,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6976,
											"end": 6989,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6976,
											"end": 6989,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6976,
											"end": 6989,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6976,
											"end": 6989,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6976,
											"end": 6989,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6976,
											"end": 6989,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6976,
											"end": 6989,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6976,
											"end": 6989,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6976,
											"end": 6989,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6976,
											"end": 6989,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6976,
											"end": 6998,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6976,
											"end": 6998,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6976,
											"end": 6998,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6976,
											"end": 6998,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6976,
											"end": 6998,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6976,
											"end": 6998,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6598,
											"end": 7023,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 6598,
											"end": 7023,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7053,
											"end": 7055,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7038,
											"end": 7063,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7047,
											"end": 7051,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7038,
											"end": 7063,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7038,
											"end": 7063,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7057,
											"end": 7062,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7038,
											"end": 7063,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7038,
											"end": 7063,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7038,
											"end": 7063,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 7038,
											"end": 7063,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1246,
											"end": 1248,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1289,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7038,
											"end": 7063,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 7038,
											"end": 7063,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7038,
											"end": 7063,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7038,
											"end": 7063,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7038,
											"end": 7063,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7038,
											"end": 7063,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7038,
											"end": 7063,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7038,
											"end": 7063,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7038,
											"end": 7063,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 5963,
											"end": 7070,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5963,
											"end": 7070,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5963,
											"end": 7070,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5963,
											"end": 7070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 432,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 14,
											"end": 432,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 163,
											"end": 165,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 152,
											"end": 161,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 145,
											"end": 166,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 201,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 189,
											"end": 202,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 238,
											"end": 244,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 233,
											"end": 235,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 222,
											"end": 231,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 218,
											"end": 236,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 211,
											"end": 245,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 297,
											"end": 303,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 292,
											"end": 294,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 284,
											"end": 290,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 280,
											"end": 295,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 275,
											"end": 277,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 264,
											"end": 273,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 260,
											"end": 278,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 254,
											"end": 304,
											"name": "MCOPY",
											"source": 6
										},
										{
											"begin": 353,
											"end": 354,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 350,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 345,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 328,
											"end": 337,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 324,
											"end": 346,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 320,
											"end": 351,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 313,
											"end": 355,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 423,
											"end": 425,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 416,
											"end": 418,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 412,
											"end": 419,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 407,
											"end": 409,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 399,
											"end": 405,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 395,
											"end": 410,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 391,
											"end": 420,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 380,
											"end": 389,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 376,
											"end": 421,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 372,
											"end": 426,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 364,
											"end": 426,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 364,
											"end": 426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 364,
											"end": 426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14,
											"end": 432,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 14,
											"end": 432,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14,
											"end": 432,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14,
											"end": 432,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14,
											"end": 432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 437,
											"end": 610,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 437,
											"end": 610,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 505,
											"end": 525,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 505,
											"end": 525,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 554,
											"end": 585,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 554,
											"end": 585,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 544,
											"end": 586,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 544,
											"end": 586,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 534,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 534,
											"end": 604,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 600,
											"end": 601,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 597,
											"end": 598,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 590,
											"end": 602,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 534,
											"end": 604,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 534,
											"end": 604,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 437,
											"end": 610,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 437,
											"end": 610,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 437,
											"end": 610,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 437,
											"end": 610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 615,
											"end": 915,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 615,
											"end": 915,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 683,
											"end": 689,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 691,
											"end": 697,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 744,
											"end": 746,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 741,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 723,
											"end": 730,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 719,
											"end": 742,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 715,
											"end": 747,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 712,
											"end": 764,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 712,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 712,
											"end": 764,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 760,
											"end": 761,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 757,
											"end": 758,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 750,
											"end": 762,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 712,
											"end": 764,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 712,
											"end": 764,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 783,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 802,
											"end": 811,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 783,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 783,
											"end": 812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 783,
											"end": 812,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 783,
											"end": 812,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 773,
											"end": 812,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 881,
											"end": 883,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 866,
											"end": 884,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 853,
											"end": 885,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 853,
											"end": 885,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 615,
											"end": 915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1371,
											"end": 1377,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1379,
											"end": 1385,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1387,
											"end": 1393,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1440,
											"end": 1442,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1428,
											"end": 1437,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1419,
											"end": 1426,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1415,
											"end": 1438,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1411,
											"end": 1443,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1456,
											"end": 1457,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1453,
											"end": 1454,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1446,
											"end": 1458,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 1479,
											"end": 1508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 1561,
											"end": 1563,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1550,
											"end": 1559,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1546,
											"end": 1564,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 1527,
											"end": 1565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 1517,
											"end": 1565,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1517,
											"end": 1565,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1634,
											"end": 1636,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1294,
											"end": 1668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 2088,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 1862,
											"end": 2088,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1921,
											"end": 1927,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1974,
											"end": 1976,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1962,
											"end": 1971,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1953,
											"end": 1960,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 1972,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1945,
											"end": 1977,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1990,
											"end": 1991,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1987,
											"end": 1988,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1980,
											"end": 1992,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2035,
											"end": 2058,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2035,
											"end": 2058,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 2088,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1862,
											"end": 2088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2093,
											"end": 2279,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 2093,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2152,
											"end": 2158,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2205,
											"end": 2207,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2193,
											"end": 2202,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2191,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2180,
											"end": 2203,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2176,
											"end": 2208,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2173,
											"end": 2225,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2173,
											"end": 2225,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 2173,
											"end": 2225,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2221,
											"end": 2222,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2218,
											"end": 2219,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2211,
											"end": 2223,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2173,
											"end": 2225,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 2173,
											"end": 2225,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2244,
											"end": 2273,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 2263,
											"end": 2272,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2244,
											"end": 2273,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 2244,
											"end": 2273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2244,
											"end": 2273,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 2244,
											"end": 2273,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2234,
											"end": 2273,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2093,
											"end": 2279,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2093,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2284,
											"end": 2544,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 2284,
											"end": 2544,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2352,
											"end": 2358,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2360,
											"end": 2366,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2413,
											"end": 2415,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2401,
											"end": 2410,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2392,
											"end": 2399,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2388,
											"end": 2411,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2384,
											"end": 2416,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2381,
											"end": 2433,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2381,
											"end": 2433,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 2381,
											"end": 2433,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2430,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2426,
											"end": 2427,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2419,
											"end": 2431,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2381,
											"end": 2433,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 2381,
											"end": 2433,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2452,
											"end": 2481,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 2471,
											"end": 2480,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2452,
											"end": 2481,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 2452,
											"end": 2481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2452,
											"end": 2481,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 2452,
											"end": 2481,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2442,
											"end": 2481,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2442,
											"end": 2481,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2500,
											"end": 2538,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 2534,
											"end": 2536,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2523,
											"end": 2532,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2519,
											"end": 2537,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2500,
											"end": 2538,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 2500,
											"end": 2538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2500,
											"end": 2538,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 2500,
											"end": 2538,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2490,
											"end": 2538,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2490,
											"end": 2538,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2284,
											"end": 2544,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2284,
											"end": 2544,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2284,
											"end": 2544,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2284,
											"end": 2544,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2284,
											"end": 2544,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2284,
											"end": 2544,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2757,
											"end": 3137,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 2757,
											"end": 3137,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2836,
											"end": 2837,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2879,
											"end": 2891,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2879,
											"end": 2891,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2879,
											"end": 2891,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2900,
											"end": 2961,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 2900,
											"end": 2961,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2954,
											"end": 2958,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 2946,
											"end": 2952,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2942,
											"end": 2959,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 2959,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 2959,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2900,
											"end": 2961,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 2900,
											"end": 2961,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3007,
											"end": 3009,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2999,
											"end": 3005,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3010,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2976,
											"end": 2994,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2973,
											"end": 3011,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2970,
											"end": 3131,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 2970,
											"end": 3131,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3063,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 3048,
											"end": 3051,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 3044,
											"end": 3064,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 3041,
											"end": 3042,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3034,
											"end": 3065,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3088,
											"end": 3092,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 3085,
											"end": 3086,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3078,
											"end": 3093,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3116,
											"end": 3120,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3113,
											"end": 3114,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3106,
											"end": 3121,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2970,
											"end": 3131,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 2970,
											"end": 3131,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2970,
											"end": 3131,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2757,
											"end": 3137,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2757,
											"end": 3137,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2757,
											"end": 3137,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2757,
											"end": 3137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3833,
											"end": 4055,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 3833,
											"end": 4055,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3898,
											"end": 3907,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3898,
											"end": 3907,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3898,
											"end": 3907,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3919,
											"end": 3929,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3919,
											"end": 3929,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3919,
											"end": 3929,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3916,
											"end": 4049,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3916,
											"end": 4049,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 3916,
											"end": 4049,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3971,
											"end": 3981,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 3966,
											"end": 3969,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 3962,
											"end": 3982,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3983,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4006,
											"end": 4010,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 4003,
											"end": 4004,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3996,
											"end": 4011,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4034,
											"end": 4038,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4031,
											"end": 4032,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4024,
											"end": 4039,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"Context.sol",
								"ERC20.sol",
								"IERC20.sol",
								"IRC20Metadata.sol",
								"contracts/GameToken.sol",
								"draft-IERC6093.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"admin()": "f851a440",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burnTokens(uint256)": "6d1b229d",
							"decimals()": "313ce567",
							"mintTokens(address,uint256)": "f0dda65c",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mintTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GameToken.sol\":\"GameToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0x28ad9de5e26095f685a085591178af7aeac1427af1bf442986b5aee0a5b2a14a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad3864801aabbcc6f52361a1b86a3d4d342e283cc2036c47a3ef2df7e4a3c51\",\"dweb:/ipfs/QmezNWJGoPBwtHjsQae7dbqjeZgpbB2cHFE5nFBBzGvJFR\"]},\"ERC20.sol\":{\"keccak256\":\"0x63ee6e3f10cbcee22677e38976a825db40aa342f0daa95b5db5f6e4acd703df1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5fe44a9643559f959d598b70988b07341d7059384122a9580aa84be649d82668\",\"dweb:/ipfs/QmXkPpEFX6HLJcV9t9PBBTW9aL4X2NA5i5wd2sAiV7Ct7b\"]},\"IERC20.sol\":{\"keccak256\":\"0x13005ecf7cba588574563f1e2f8a9d166b4b23cbeec4e153584834db6a324120\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c7469e9231ec2fee28e304b4c3f69f70cf3d2bfab9d6d619c7676c52ac176712\",\"dweb:/ipfs/QmPNNxicR8bCc2BbWnEa8UXxaSfhcxRU4XT5QGjLWG7Cm2\"]},\"IRC20Metadata.sol\":{\"keccak256\":\"0x9568cd9ae872667840ad89d3091d7b5f211283babd4d8e85e3a663c92b797bbb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22fe505e3d9a8a3bb4935b4fc651899d653e0c5db75a75691bc9068452b46e39\",\"dweb:/ipfs/QmV9p5kedL54Nj9z1NWo9DaAPqn7Yzh9Z8bzpK9VeGmoYp\"]},\"contracts/GameToken.sol\":{\"keccak256\":\"0xc7568f5b7bd2681a08d6ac1450f5c96278aa2dc0ef0ad734401c0af44e6884fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acfda21c19cf72fc554bd5859defe56cdad96c56d94b3ebc5a2a51cec3db1371\",\"dweb:/ipfs/QmPABSNmkhAEPbUJQKWEHJeJDcXhFSKZxomdKRbyFUnYA1\"]},\"draft-IERC6093.sol\":{\"keccak256\":\"0x4bde603ad95d6354b7c3504d245ba39e7163e7a528a3d737e4c1be6dbc513b6f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58238de4d750505416d2b0faf0c8f83a3438c93a5d35a0058e8c0f8b830ee2f5\",\"dweb:/ipfs/QmX5L92U9gF4fmr2nqMJ1y8VBFQPC54QfGC4sHbYFnTw72\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 52,
								"contract": "contracts/GameToken.sol:GameToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 58,
								"contract": "contracts/GameToken.sol:GameToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 60,
								"contract": "contracts/GameToken.sol:GameToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 62,
								"contract": "contracts/GameToken.sol:GameToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 64,
								"contract": "contracts/GameToken.sol:GameToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 655,
								"contract": "contracts/GameToken.sol:GameToken",
								"label": "admin",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"draft-IERC6093.sol\":{\"keccak256\":\"0x4bde603ad95d6354b7c3504d245ba39e7163e7a528a3d737e4c1be6dbc513b6f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58238de4d750505416d2b0faf0c8f83a3438c93a5d35a0058e8c0f8b830ee2f5\",\"dweb:/ipfs/QmX5L92U9gF4fmr2nqMJ1y8VBFQPC54QfGC4sHbYFnTw72\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"draft-IERC6093.sol\":{\"keccak256\":\"0x4bde603ad95d6354b7c3504d245ba39e7163e7a528a3d737e4c1be6dbc513b6f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58238de4d750505416d2b0faf0c8f83a3438c93a5d35a0058e8c0f8b830ee2f5\",\"dweb:/ipfs/QmX5L92U9gF4fmr2nqMJ1y8VBFQPC54QfGC4sHbYFnTw72\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"draft-IERC6093.sol\":{\"keccak256\":\"0x4bde603ad95d6354b7c3504d245ba39e7163e7a528a3d737e4c1be6dbc513b6f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58238de4d750505416d2b0faf0c8f83a3438c93a5d35a0058e8c0f8b830ee2f5\",\"dweb:/ipfs/QmX5L92U9gF4fmr2nqMJ1y8VBFQPC54QfGC4sHbYFnTw72\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Context.sol": {
				"ast": {
					"absolutePath": "Context.sol",
					"exportedSymbols": {
						"Context": [
							29
						]
					},
					"id": 30,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 29,
							"linearizedBaseContracts": [
								29
							],
							"name": "Context",
							"nameLocation": "642:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 10,
										"nodeType": "Block",
										"src": "718:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 7,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 8,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 6,
												"id": 9,
												"nodeType": "Return",
												"src": "728:17:0"
											}
										]
									},
									"id": 11,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "709:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:0"
									},
									"scope": 29,
									"src": "656:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "825:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 16,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 15,
												"id": 18,
												"nodeType": "Return",
												"src": "835:15:0"
											}
										]
									},
									"id": 20,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "809:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 13,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:0"
									},
									"scope": 29,
									"src": "758:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 27,
										"nodeType": "Block",
										"src": "935:25:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 25,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 24,
												"id": 26,
												"nodeType": "Return",
												"src": "945:8:0"
											}
										]
									},
									"id": 28,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "926:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 22,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:0"
									},
									"scope": 29,
									"src": "863:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 30,
							"src": "624:338:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:861:0"
				},
				"id": 0
			},
			"ERC20.sol": {
				"ast": {
					"absolutePath": "ERC20.sol",
					"exportedSymbols": {
						"Context": [
							29
						],
						"ERC20": [
							544
						],
						"IERC20": [
							622
						],
						"IERC20Errors": [
							756
						],
						"IERC20Metadata": [
							648
						]
					},
					"id": 545,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 31,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "IERC20.sol",
							"file": "IERC20.sol",
							"id": 33,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 545,
							"sourceUnit": 623,
							"src": "131:34:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 32,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 622,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "IRC20Metadata.sol",
							"file": "IRC20Metadata.sol",
							"id": 35,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 545,
							"sourceUnit": 649,
							"src": "166:49:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 34,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 648,
										"src": "174:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "Context.sol",
							"file": "Context.sol",
							"id": 37,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 545,
							"sourceUnit": 30,
							"src": "216:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 36,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 29,
										"src": "224:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "draft-IERC6093.sol",
							"file": "draft-IERC6093.sol",
							"id": 39,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 545,
							"sourceUnit": 852,
							"src": "253:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 38,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 756,
										"src": "261:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 41,
										"name": "Context",
										"nameLocations": [
											"1088:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 29,
										"src": "1088:7:1"
									},
									"id": 42,
									"nodeType": "InheritanceSpecifier",
									"src": "1088:7:1"
								},
								{
									"baseName": {
										"id": 43,
										"name": "IERC20",
										"nameLocations": [
											"1097:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 622,
										"src": "1097:6:1"
									},
									"id": 44,
									"nodeType": "InheritanceSpecifier",
									"src": "1097:6:1"
								},
								{
									"baseName": {
										"id": 45,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1105:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 648,
										"src": "1105:14:1"
									},
									"id": 46,
									"nodeType": "InheritanceSpecifier",
									"src": "1105:14:1"
								},
								{
									"baseName": {
										"id": 47,
										"name": "IERC20Errors",
										"nameLocations": [
											"1121:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 756,
										"src": "1121:12:1"
									},
									"id": 48,
									"nodeType": "InheritanceSpecifier",
									"src": "1121:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 40,
								"nodeType": "StructuredDocumentation",
								"src": "303:757:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 544,
							"linearizedBaseContracts": [
								544,
								756,
								648,
								622,
								29
							],
							"name": "ERC20",
							"nameLocation": "1079:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 52,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1184:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 544,
									"src": "1140:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 51,
										"keyName": "account",
										"keyNameLocation": "1156:7:1",
										"keyType": {
											"id": 49,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1148:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1140:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 50,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1167:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 58,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1272:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 544,
									"src": "1200:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 57,
										"keyName": "account",
										"keyNameLocation": "1216:7:1",
										"keyType": {
											"id": 53,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1208:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1200:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 56,
											"keyName": "spender",
											"keyNameLocation": "1243:7:1",
											"keyType": {
												"id": 54,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1235:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1227:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 55,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1254:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 60,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1306:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 544,
									"src": "1290:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 59,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1290:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 62,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1340:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 544,
									"src": "1325:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 61,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1325:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 64,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1366:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 544,
									"src": "1351:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 63,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1351:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "1612:57:1",
										"statements": [
											{
												"expression": {
													"id": 74,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 72,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 62,
														"src": "1622:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 73,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "1630:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1622:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 75,
												"nodeType": "ExpressionStatement",
												"src": "1622:13:1"
											},
											{
												"expression": {
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 76,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 64,
														"src": "1645:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 77,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 69,
														"src": "1655:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1645:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "1645:17:1"
											}
										]
									},
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "1380:171:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 81,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1582:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "1568:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 66,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1568:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1603:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "1589:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 68,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1589:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:44:1"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1612:0:1"
									},
									"scope": 544,
									"src": "1556:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										635
									],
									"body": {
										"id": 89,
										"nodeType": "Block",
										"src": "1794:29:1",
										"statements": [
											{
												"expression": {
													"id": 87,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 62,
													"src": "1811:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 86,
												"id": 88,
												"nodeType": "Return",
												"src": "1804:12:1"
											}
										]
									},
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "1675:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 90,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1743:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1747:2:1"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1779:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 84,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1779:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1778:15:1"
									},
									"scope": 544,
									"src": "1734:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										641
									],
									"body": {
										"id": 98,
										"nodeType": "Block",
										"src": "1998:31:1",
										"statements": [
											{
												"expression": {
													"id": 96,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 64,
													"src": "2015:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 95,
												"id": 97,
												"nodeType": "Return",
												"src": "2008:14:1"
											}
										]
									},
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "1829:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 99,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1945:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1951:2:1"
									},
									"returnParameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "1983:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 93,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1983:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:15:1"
									},
									"scope": 544,
									"src": "1936:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										647
									],
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "2718:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2735:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 104,
												"id": 106,
												"nodeType": "Return",
												"src": "2728:9:1"
											}
										]
									},
									"documentation": {
										"id": 100,
										"nodeType": "StructuredDocumentation",
										"src": "2035:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2671:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2679:2:1"
									},
									"returnParameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "2711:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 102,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2711:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:7:1"
									},
									"scope": 544,
									"src": "2662:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										571
									],
									"body": {
										"id": 116,
										"nodeType": "Block",
										"src": "2865:36:1",
										"statements": [
											{
												"expression": {
													"id": 114,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 60,
													"src": "2882:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 113,
												"id": 115,
												"nodeType": "Return",
												"src": "2875:19:1"
											}
										]
									},
									"documentation": {
										"id": 109,
										"nodeType": "StructuredDocumentation",
										"src": "2750:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 117,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2813:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2824:2:1"
									},
									"returnParameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "2856:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2856:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2855:9:1"
									},
									"scope": 544,
									"src": "2804:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										579
									],
									"body": {
										"id": 129,
										"nodeType": "Block",
										"src": "3033:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 125,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 52,
														"src": "3050:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 127,
													"indexExpression": {
														"id": 126,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "3060:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3050:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 124,
												"id": 128,
												"nodeType": "Return",
												"src": "3043:25:1"
											}
										]
									},
									"documentation": {
										"id": 118,
										"nodeType": "StructuredDocumentation",
										"src": "2907:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2968:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2986:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "2978:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2978:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2977:17:1"
									},
									"returnParameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "3024:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3024:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3023:9:1"
									},
									"scope": 544,
									"src": "2959:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										589
									],
									"body": {
										"id": 153,
										"nodeType": "Block",
										"src": "3345:103:1",
										"statements": [
											{
												"assignments": [
													141
												],
												"declarations": [
													{
														"constant": false,
														"id": 141,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3363:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 153,
														"src": "3355:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 140,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3355:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 144,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 142,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "3371:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3371:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3355:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 146,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 141,
															"src": "3403:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 147,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3410:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 148,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 135,
															"src": "3414:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 145,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 274,
														"src": "3393:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3393:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 150,
												"nodeType": "ExpressionStatement",
												"src": "3393:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3437:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 139,
												"id": 152,
												"nodeType": "Return",
												"src": "3430:11:1"
											}
										]
									},
									"documentation": {
										"id": 131,
										"nodeType": "StructuredDocumentation",
										"src": "3081:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 154,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3279:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3296:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "3288:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3288:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3308:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "3300:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3300:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3287:27:1"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "3339:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 137,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3339:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3338:6:1"
									},
									"scope": 544,
									"src": "3270:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										599
									],
									"body": {
										"id": 170,
										"nodeType": "Block",
										"src": "3595:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 164,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 58,
															"src": "3612:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 166,
														"indexExpression": {
															"id": 165,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 157,
															"src": "3624:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3612:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 168,
													"indexExpression": {
														"id": 167,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3631:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3612:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 163,
												"id": 169,
												"nodeType": "Return",
												"src": "3605:34:1"
											}
										]
									},
									"documentation": {
										"id": 155,
										"nodeType": "StructuredDocumentation",
										"src": "3454:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 171,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3515:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3533:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "3525:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3525:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3548:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "3540:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3540:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3524:32:1"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "3586:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3586:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3585:9:1"
									},
									"scope": 544,
									"src": "3506:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										609
									],
									"body": {
										"id": 194,
										"nodeType": "Block",
										"src": "4032:107:1",
										"statements": [
											{
												"assignments": [
													182
												],
												"declarations": [
													{
														"constant": false,
														"id": 182,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4050:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 194,
														"src": "4042:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 181,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4042:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 185,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 183,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "4058:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4058:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4042:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 187,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "4089:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 188,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 174,
															"src": "4096:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 189,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 176,
															"src": "4105:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 186,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															435,
															495
														],
														"referencedDeclaration": 435,
														"src": "4080:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4080:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 191,
												"nodeType": "ExpressionStatement",
												"src": "4080:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4128:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 180,
												"id": 193,
												"nodeType": "Return",
												"src": "4121:11:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "3652:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 195,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3962:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3978:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "3970:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3970:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3995:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "3987:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3987:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3969:32:1"
									},
									"returnParameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "4026:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 178,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4026:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4025:6:1"
									},
									"scope": 544,
									"src": "3953:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										621
									],
									"body": {
										"id": 226,
										"nodeType": "Block",
										"src": "4824:151:1",
										"statements": [
											{
												"assignments": [
													208
												],
												"declarations": [
													{
														"constant": false,
														"id": 208,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4842:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 226,
														"src": "4834:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 207,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4834:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 211,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 209,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "4852:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4852:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4834:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 213,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "4890:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 214,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "4896:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 215,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "4905:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 212,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 543,
														"src": "4874:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4874:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 217,
												"nodeType": "ExpressionStatement",
												"src": "4874:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 219,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "4931:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 220,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 200,
															"src": "4937:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 221,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "4941:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 218,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 274,
														"src": "4921:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4921:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 223,
												"nodeType": "ExpressionStatement",
												"src": "4921:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4964:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 206,
												"id": 225,
												"nodeType": "Return",
												"src": "4957:11:1"
											}
										]
									},
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "4145:581:1",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4740:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4761:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "4753:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4753:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4775:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "4767:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4767:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4787:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "4779:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4779:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4752:41:1"
									},
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "4818:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 204,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4818:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4817:6:1"
									},
									"scope": 544,
									"src": "4731:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 273,
										"nodeType": "Block",
										"src": "5417:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 237,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 230,
														"src": "5431:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 240,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5447:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 239,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5439:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 238,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5439:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 241,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5439:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5431:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 251,
												"nodeType": "IfStatement",
												"src": "5427:86:1",
												"trueBody": {
													"id": 250,
													"nodeType": "Block",
													"src": "5451:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 246,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5499:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 245,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5491:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 244,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5491:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 247,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5491:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 243,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 731,
																	"src": "5472:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5472:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 249,
															"nodeType": "RevertStatement",
															"src": "5465:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 252,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 232,
														"src": "5526:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 255,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5540:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5532:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 253,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5532:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 256,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5532:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5526:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 266,
												"nodeType": "IfStatement",
												"src": "5522:86:1",
												"trueBody": {
													"id": 265,
													"nodeType": "Block",
													"src": "5544:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 261,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5594:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 260,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5586:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 259,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5586:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 262,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5586:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 258,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 736,
																	"src": "5565:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 263,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5565:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 264,
															"nodeType": "RevertStatement",
															"src": "5558:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 268,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "5625:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 269,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "5631:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 270,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "5635:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 267,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "5617:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5617:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 272,
												"nodeType": "ExpressionStatement",
												"src": "5617:24:1"
											}
										]
									},
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "4981:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 274,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5357:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5375:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "5367:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5367:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5389:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "5381:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5381:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5401:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "5393:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5393:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5366:41:1"
									},
									"returnParameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5417:0:1"
									},
									"scope": 544,
									"src": "5348:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 350,
										"nodeType": "Block",
										"src": "6038:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 284,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 277,
														"src": "6052:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 287,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6068:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 286,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6060:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 285,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6060:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 288,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6060:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6052:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 321,
													"nodeType": "Block",
													"src": "6226:362:1",
													"statements": [
														{
															"assignments": [
																296
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 296,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6248:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 321,
																	"src": "6240:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 295,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6240:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 300,
															"initialValue": {
																"baseExpression": {
																	"id": 297,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "6262:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 299,
																"indexExpression": {
																	"id": 298,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 277,
																	"src": "6272:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6262:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6240:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 303,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 301,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 296,
																	"src": "6295:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 302,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 281,
																	"src": "6309:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6295:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 311,
															"nodeType": "IfStatement",
															"src": "6291:115:1",
															"trueBody": {
																"id": 310,
																"nodeType": "Block",
																"src": "6316:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 305,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 277,
																					"src": "6366:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 306,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 296,
																					"src": "6372:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 307,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 281,
																					"src": "6385:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 304,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 726,
																				"src": "6341:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 308,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6341:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 309,
																		"nodeType": "RevertStatement",
																		"src": "6334:57:1"
																	}
																]
															}
														},
														{
															"id": 320,
															"nodeType": "UncheckedBlock",
															"src": "6419:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 318,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 312,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 52,
																				"src": "6526:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 314,
																			"indexExpression": {
																				"id": 313,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 277,
																				"src": "6536:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6526:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 317,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 315,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 296,
																				"src": "6544:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 316,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 281,
																				"src": "6558:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6544:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6526:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 319,
																	"nodeType": "ExpressionStatement",
																	"src": "6526:37:1"
																}
															]
														}
													]
												},
												"id": 322,
												"nodeType": "IfStatement",
												"src": "6048:540:1",
												"trueBody": {
													"id": 294,
													"nodeType": "Block",
													"src": "6072:148:1",
													"statements": [
														{
															"expression": {
																"id": 292,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 290,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 60,
																	"src": "6188:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 291,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 281,
																	"src": "6204:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6188:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 293,
															"nodeType": "ExpressionStatement",
															"src": "6188:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 323,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 279,
														"src": "6602:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 326,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6616:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6608:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 324,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6608:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 327,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6608:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6602:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 342,
													"nodeType": "Block",
													"src": "6817:206:1",
													"statements": [
														{
															"id": 341,
															"nodeType": "UncheckedBlock",
															"src": "6831:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 339,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 335,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 52,
																				"src": "6976:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 337,
																			"indexExpression": {
																				"id": 336,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 279,
																				"src": "6986:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6976:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 338,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 281,
																			"src": "6993:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6976:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 340,
																	"nodeType": "ExpressionStatement",
																	"src": "6976:22:1"
																}
															]
														}
													]
												},
												"id": 343,
												"nodeType": "IfStatement",
												"src": "6598:425:1",
												"trueBody": {
													"id": 334,
													"nodeType": "Block",
													"src": "6620:191:1",
													"statements": [
														{
															"id": 333,
															"nodeType": "UncheckedBlock",
															"src": "6634:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 331,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 329,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 60,
																			"src": "6765:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 330,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 281,
																			"src": "6781:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6765:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 332,
																	"nodeType": "ExpressionStatement",
																	"src": "6765:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 345,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 277,
															"src": "7047:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 346,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 279,
															"src": "7053:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 347,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "7057:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 344,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 556,
														"src": "7038:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7038:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 349,
												"nodeType": "EmitStatement",
												"src": "7033:30:1"
											}
										]
									},
									"documentation": {
										"id": 275,
										"nodeType": "StructuredDocumentation",
										"src": "5654:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5972:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5988:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "5980:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5980:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6002:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "5994:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5994:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6014:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "6006:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6006:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5979:41:1"
									},
									"returnParameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6038:0:1"
									},
									"scope": 544,
									"src": "5963:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 383,
										"nodeType": "Block",
										"src": "7469:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 354,
														"src": "7483:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7502:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7494:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7494:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7494:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7483:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "7479:91:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "7506:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7556:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7548:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7548:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7548:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 736,
																	"src": "7527:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7527:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "7520:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 377,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7595:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 376,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7587:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 375,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7587:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 378,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7587:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 379,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 354,
															"src": "7599:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 380,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 356,
															"src": "7608:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "7579:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7579:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 382,
												"nodeType": "ExpressionStatement",
												"src": "7579:35:1"
											}
										]
									},
									"documentation": {
										"id": 352,
										"nodeType": "StructuredDocumentation",
										"src": "7076:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 384,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7422:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7436:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "7428:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7428:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7453:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "7445:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7427:32:1"
									},
									"returnParameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7469:0:1"
									},
									"scope": 544,
									"src": "7413:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 416,
										"nodeType": "Block",
										"src": "7995:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 392,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "8009:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 395,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8028:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 394,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8020:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 393,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8020:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 396,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8020:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8009:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 406,
												"nodeType": "IfStatement",
												"src": "8005:89:1",
												"trueBody": {
													"id": 405,
													"nodeType": "Block",
													"src": "8032:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 401,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8080:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 400,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8072:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 399,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8072:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 402,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8072:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 398,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 731,
																	"src": "8053:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8053:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 404,
															"nodeType": "RevertStatement",
															"src": "8046:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 408,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "8111:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 411,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8128:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8120:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 409,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8120:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 412,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8120:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 413,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "8132:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 407,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "8103:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8103:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 415,
												"nodeType": "ExpressionStatement",
												"src": "8103:35:1"
											}
										]
									},
									"documentation": {
										"id": 385,
										"nodeType": "StructuredDocumentation",
										"src": "7627:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 417,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7948:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7962:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "7954:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7954:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7979:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "7971:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7953:32:1"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7995:0:1"
									},
									"scope": 544,
									"src": "7939:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 434,
										"nodeType": "Block",
										"src": "8755:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 428,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 420,
															"src": "8774:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 429,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 422,
															"src": "8781:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 430,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 424,
															"src": "8790:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 431,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8797:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 427,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															435,
															495
														],
														"referencedDeclaration": 495,
														"src": "8765:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8765:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 433,
												"nodeType": "ExpressionStatement",
												"src": "8765:37:1"
											}
										]
									},
									"documentation": {
										"id": 418,
										"nodeType": "StructuredDocumentation",
										"src": "8151:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 435,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8690:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8707:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "8699:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8699:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8722:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "8714:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8714:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8739:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "8731:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8731:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8698:47:1"
									},
									"returnParameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8755:0:1"
									},
									"scope": 544,
									"src": "8681:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 494,
										"nodeType": "Block",
										"src": "9754:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 447,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 438,
														"src": "9768:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 450,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9785:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9777:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 448,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9777:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 451,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9777:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9768:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 461,
												"nodeType": "IfStatement",
												"src": "9764:89:1",
												"trueBody": {
													"id": 460,
													"nodeType": "Block",
													"src": "9789:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 456,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9839:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 455,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9831:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 454,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9831:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 457,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9831:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 453,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 750,
																	"src": "9810:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9810:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 459,
															"nodeType": "RevertStatement",
															"src": "9803:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 462,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "9866:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 465,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9885:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 464,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9877:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 463,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9877:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 466,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9877:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9866:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 476,
												"nodeType": "IfStatement",
												"src": "9862:90:1",
												"trueBody": {
													"id": 475,
													"nodeType": "Block",
													"src": "9889:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 471,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9938:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 470,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9930:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 469,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9930:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 472,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9930:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 468,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 755,
																	"src": "9910:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 473,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9910:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 474,
															"nodeType": "RevertStatement",
															"src": "9903:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 477,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 58,
																"src": "9961:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 480,
															"indexExpression": {
																"id": 478,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 438,
																"src": "9973:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9961:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 481,
														"indexExpression": {
															"id": 479,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 440,
															"src": "9980:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9961:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 482,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 442,
														"src": "9991:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9961:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 484,
												"nodeType": "ExpressionStatement",
												"src": "9961:35:1"
											},
											{
												"condition": {
													"id": 485,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 444,
													"src": "10010:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 493,
												"nodeType": "IfStatement",
												"src": "10006:76:1",
												"trueBody": {
													"id": 492,
													"nodeType": "Block",
													"src": "10021:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 487,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 438,
																		"src": "10049:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 488,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 440,
																		"src": "10056:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 489,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 442,
																		"src": "10065:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 486,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 565,
																	"src": "10040:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10040:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 491,
															"nodeType": "EmitStatement",
															"src": "10035:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 436,
										"nodeType": "StructuredDocumentation",
										"src": "8815:836:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 495,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9665:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9682:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "9674:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9674:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9697:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "9689:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9689:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9714:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "9706:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9706:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9726:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "9721:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 443,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9721:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9673:63:1"
									},
									"returnParameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9754:0:1"
									},
									"scope": 544,
									"src": "9656:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 542,
										"nodeType": "Block",
										"src": "10459:388:1",
										"statements": [
											{
												"assignments": [
													506
												],
												"declarations": [
													{
														"constant": false,
														"id": 506,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10477:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 542,
														"src": "10469:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 505,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10469:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 511,
												"initialValue": {
													"arguments": [
														{
															"id": 508,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 498,
															"src": "10506:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 509,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 500,
															"src": "10513:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 507,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "10496:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10496:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10469:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 512,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "10535:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 515,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10560:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 514,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10560:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 513,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10555:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 516,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10555:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 517,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10569:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10555:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10535:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 541,
												"nodeType": "IfStatement",
												"src": "10531:310:1",
												"trueBody": {
													"id": 540,
													"nodeType": "Block",
													"src": "10574:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 521,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 519,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 506,
																	"src": "10592:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 520,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 502,
																	"src": "10611:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10592:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 529,
															"nodeType": "IfStatement",
															"src": "10588:130:1",
															"trueBody": {
																"id": 528,
																"nodeType": "Block",
																"src": "10618:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 523,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 500,
																					"src": "10670:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 524,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 506,
																					"src": "10679:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 525,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 502,
																					"src": "10697:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 522,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 745,
																				"src": "10643:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 526,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10643:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 527,
																		"nodeType": "RevertStatement",
																		"src": "10636:67:1"
																	}
																]
															}
														},
														{
															"id": 539,
															"nodeType": "UncheckedBlock",
															"src": "10731:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 531,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 498,
																				"src": "10768:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 532,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 500,
																				"src": "10775:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 535,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 533,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 506,
																					"src": "10784:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 534,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 502,
																					"src": "10803:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10784:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 536,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10810:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 530,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				435,
																				495
																			],
																			"referencedDeclaration": 495,
																			"src": "10759:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 537,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10759:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 538,
																	"nodeType": "ExpressionStatement",
																	"src": "10759:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 496,
										"nodeType": "StructuredDocumentation",
										"src": "10094:271:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 543,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10379:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10403:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "10395:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10395:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10418:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "10410:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10410:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10435:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "10427:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10427:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10394:47:1"
									},
									"returnParameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10459:0:1"
									},
									"scope": 544,
									"src": "10370:477:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 545,
							"src": "1061:9788:1",
							"usedErrors": [
								726,
								731,
								736,
								745,
								750,
								755
							],
							"usedEvents": [
								556,
								565
							]
						}
					],
					"src": "105:10744:1"
				},
				"id": 1
			},
			"IERC20.sol": {
				"ast": {
					"absolutePath": "IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							622
						]
					},
					"id": 623,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 546,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 547,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:2",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 622,
							"linearizedBaseContracts": [
								622
							],
							"name": "IERC20",
							"nameLocation": "214:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 548,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 556,
									"name": "Transfer",
									"nameLocation": "396:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "405:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 552,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "427:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "447:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:2"
									},
									"src": "390:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 557,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 565,
									"name": "Approval",
									"nameLocation": "627:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 559,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "636:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 558,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 561,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "659:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "684:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:2"
									},
									"src": "621:78:2"
								},
								{
									"documentation": {
										"id": 566,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 571,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:2"
									},
									"returnParameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "821:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:2"
									},
									"scope": 622,
									"src": "775:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 572,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 579,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 576,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 622,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 580,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 589,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "1222:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "1234:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:2"
									},
									"returnParameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "1267:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 586,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:2"
									},
									"scope": 622,
									"src": "1204:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 590,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 599,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "1567:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "1582:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:2"
									},
									"returnParameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "1622:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 596,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:2"
									},
									"scope": 622,
									"src": "1548:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 600,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 609,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "2326:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "2343:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:2"
									},
									"returnParameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "2376:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 606,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:2"
									},
									"scope": 622,
									"src": "2309:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 610,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 621,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "2712:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "2726:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "2738:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:2"
									},
									"returnParameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "2771:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 618,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:2"
									},
									"scope": 622,
									"src": "2690:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 623,
							"src": "204:2575:2",
							"usedErrors": [],
							"usedEvents": [
								556,
								565
							]
						}
					],
					"src": "106:2673:2"
				},
				"id": 2
			},
			"IRC20Metadata.sol": {
				"ast": {
					"absolutePath": "IRC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							622
						],
						"IERC20Metadata": [
							648
						]
					},
					"id": 649,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 624,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "126:24:3"
						},
						{
							"absolutePath": "IERC20.sol",
							"file": "IERC20.sol",
							"id": 626,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 649,
							"sourceUnit": 623,
							"src": "152:34:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 625,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 622,
										"src": "160:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 628,
										"name": "IERC20",
										"nameLocations": [
											"304:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 622,
										"src": "304:6:3"
									},
									"id": 629,
									"nodeType": "InheritanceSpecifier",
									"src": "304:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 627,
								"nodeType": "StructuredDocumentation",
								"src": "188:87:3",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 648,
							"linearizedBaseContracts": [
								648,
								622
							],
							"name": "IERC20Metadata",
							"nameLocation": "286:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 630,
										"nodeType": "StructuredDocumentation",
										"src": "317:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 635,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "385:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "389:2:3"
									},
									"returnParameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "415:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 632,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "415:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "414:15:3"
									},
									"scope": 648,
									"src": "376:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 636,
										"nodeType": "StructuredDocumentation",
										"src": "436:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 641,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "506:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "512:2:3"
									},
									"returnParameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "538:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 638,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "538:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "537:15:3"
									},
									"scope": 648,
									"src": "497:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 642,
										"nodeType": "StructuredDocumentation",
										"src": "559:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 647,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "638:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "646:2:3"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "672:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 644,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "672:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "671:7:3"
									},
									"scope": 648,
									"src": "629:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 649,
							"src": "276:405:3",
							"usedErrors": [],
							"usedEvents": [
								556,
								565
							]
						}
					],
					"src": "126:556:3"
				},
				"id": 3
			},
			"contracts/GameToken.sol": {
				"ast": {
					"absolutePath": "contracts/GameToken.sol",
					"exportedSymbols": {
						"Context": [
							29
						],
						"ERC20": [
							544
						],
						"GameToken": [
							714
						],
						"IERC20": [
							622
						],
						"IERC20Errors": [
							756
						],
						"IERC20Metadata": [
							648
						]
					},
					"id": 715,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 650,
							"literals": [
								"solidity",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:4"
						},
						{
							"absolutePath": "ERC20.sol",
							"file": "ERC20.sol",
							"id": 651,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 715,
							"sourceUnit": 545,
							"src": "56:19:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 652,
										"name": "ERC20",
										"nameLocations": [
											"99:5:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 544,
										"src": "99:5:4"
									},
									"id": 653,
									"nodeType": "InheritanceSpecifier",
									"src": "99:5:4"
								}
							],
							"canonicalName": "GameToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 714,
							"linearizedBaseContracts": [
								714,
								544,
								756,
								648,
								622,
								29
							],
							"name": "GameToken",
							"nameLocation": "86:9:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "f851a440",
									"id": 655,
									"mutability": "mutable",
									"name": "admin",
									"nameLocation": "126:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 714,
									"src": "111:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 654,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "111:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 673,
										"nodeType": "Block",
										"src": "178:90:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 663,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "194:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 664,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "198:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "194:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "31303030303030303030303030303030303030303030303030",
															"id": 665,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "206:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000000"
															},
															"value": "1000000000000000000000000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000000"
															}
														],
														"id": 662,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "188:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "188:44:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 667,
												"nodeType": "ExpressionStatement",
												"src": "188:44:4"
											},
											{
												"expression": {
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 668,
														"name": "admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 655,
														"src": "243:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 669,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "251:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 670,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "255:6:4",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "251:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "243:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 672,
												"nodeType": "ExpressionStatement",
												"src": "243:18:4"
											}
										]
									},
									"id": 674,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "47616d6520546f6b656e",
													"id": 658,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "158:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_ebd19fbfd9cac099805799e53e1b6f0f0a4929dc86feba390ca3ff8715a405d0",
														"typeString": "literal_string \"Game Token\""
													},
													"value": "Game Token"
												},
												{
													"hexValue": "4754",
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "172:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_b275d0555485319643a6e39fae791932db6d1bb57b5529b0f8111f703023fe74",
														"typeString": "literal_string \"GT\""
													},
													"value": "GT"
												}
											],
											"id": 660,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 657,
												"name": "ERC20",
												"nameLocations": [
													"152:5:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 544,
												"src": "152:5:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "152:25:4"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "149:2:4"
									},
									"returnParameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "178:0:4"
									},
									"scope": 714,
									"src": "138:130:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 685,
										"nodeType": "Block",
										"src": "293:72:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 677,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "311:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 678,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "315:6:4",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "311:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 679,
																"name": "admin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 655,
																"src": "325:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "311:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e617574686f72697a6564",
															"id": 681,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "332:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5",
																"typeString": "literal_string \"Unauthorized\""
															},
															"value": "Unauthorized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5",
																"typeString": "literal_string \"Unauthorized\""
															}
														],
														"id": 676,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "303:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "303:44:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 683,
												"nodeType": "ExpressionStatement",
												"src": "303:44:4"
											},
											{
												"id": 684,
												"nodeType": "PlaceholderStatement",
												"src": "357:1:4"
											}
										]
									},
									"id": 686,
									"name": "onlyAdmin",
									"nameLocation": "283:9:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "293:0:4"
									},
									"src": "274:91:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 700,
										"nodeType": "Block",
										"src": "432:33:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 696,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 688,
															"src": "448:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 697,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 690,
															"src": "452:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 695,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "442:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "442:16:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 699,
												"nodeType": "ExpressionStatement",
												"src": "442:16:4"
											}
										]
									},
									"functionSelector": "f0dda65c",
									"id": 701,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 693,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 692,
												"name": "onlyAdmin",
												"nameLocations": [
													"422:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 686,
												"src": "422:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "422:9:4"
										}
									],
									"name": "mintTokens",
									"nameLocation": "380:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "399:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "391:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 687,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "391:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "408:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "403:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 689,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "403:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "390:24:4"
									},
									"returnParameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "432:0:4"
									},
									"scope": 714,
									"src": "371:94:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 712,
										"nodeType": "Block",
										"src": "510:41:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 707,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "526:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 708,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "530:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "526:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 709,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 703,
															"src": "538:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 706,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 417,
														"src": "520:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "520:24:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 711,
												"nodeType": "ExpressionStatement",
												"src": "520:24:4"
											}
										]
									},
									"functionSelector": "6d1b229d",
									"id": 713,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnTokens",
									"nameLocation": "480:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "496:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "491:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 702,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "491:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "490:12:4"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "510:0:4"
									},
									"scope": 714,
									"src": "471:80:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 715,
							"src": "77:476:4",
							"usedErrors": [
								726,
								731,
								736,
								745,
								750,
								755
							],
							"usedEvents": [
								556,
								565
							]
						}
					],
					"src": "32:522:4"
				},
				"id": 4
			},
			"draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							851
						],
						"IERC20Errors": [
							756
						],
						"IERC721Errors": [
							804
						]
					},
					"id": 852,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 716,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 717,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:5",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 756,
							"linearizedBaseContracts": [
								756
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 718,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:5",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 726,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "654:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "670:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 721,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "687:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:5"
									},
									"src": "623:80:5"
								},
								{
									"documentation": {
										"id": 727,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:5",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 731,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "891:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 728,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:5"
									},
									"src": "866:41:5"
								},
								{
									"documentation": {
										"id": 732,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:5",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 736,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "1104:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 733,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:5"
									},
									"src": "1077:45:5"
								},
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:5",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 745,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "1511:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 738,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "1528:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 740,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "1547:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:5"
									},
									"src": "1478:85:5"
								},
								{
									"documentation": {
										"id": 746,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:5",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 750,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "1775:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 747,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:5"
									},
									"src": "1748:45:5"
								},
								{
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:5",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 755,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "2025:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:5"
									},
									"src": "1999:43:5"
								}
							],
							"scope": 852,
							"src": "280:1764:5",
							"usedErrors": [
								726,
								731,
								736,
								745,
								750,
								755
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 757,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:5",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 804,
							"linearizedBaseContracts": [
								804
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 758,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:5",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 762,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "2469:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 759,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:5"
									},
									"src": "2444:40:5"
								},
								{
									"documentation": {
										"id": 763,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:5",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 767,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "2656:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:5"
									},
									"src": "2627:46:5"
								},
								{
									"documentation": {
										"id": 768,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:5",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 776,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "3000:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "3016:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "3033:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 773,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:5"
									},
									"src": "2973:75:5"
								},
								{
									"documentation": {
										"id": 777,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:5",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 781,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "3237:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 778,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:5"
									},
									"src": "3211:42:5"
								},
								{
									"documentation": {
										"id": 782,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:5",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 786,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "3451:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 783,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:5"
									},
									"src": "3423:46:5"
								},
								{
									"documentation": {
										"id": 787,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:5",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 793,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "3760:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 788,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "3778:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 790,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:5"
									},
									"src": "3727:68:5"
								},
								{
									"documentation": {
										"id": 794,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:5",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 798,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "4008:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 795,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:5"
									},
									"src": "3980:46:5"
								},
								{
									"documentation": {
										"id": 799,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:5",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 803,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "4262:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 800,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:5"
									},
									"src": "4234:46:5"
								}
							],
							"scope": 852,
							"src": "2190:2092:5",
							"usedErrors": [
								762,
								767,
								776,
								781,
								786,
								793,
								798,
								803
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 805,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:5",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 851,
							"linearizedBaseContracts": [
								851
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 806,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:5",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 816,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "4860:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 807,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "4876:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 809,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "4893:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 814,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "4909:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 813,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:5"
									},
									"src": "4827:99:5"
								},
								{
									"documentation": {
										"id": 817,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:5",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 821,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "5116:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 818,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:5"
									},
									"src": "5089:43:5"
								},
								{
									"documentation": {
										"id": 822,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:5",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 826,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "5331:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 823,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:5"
									},
									"src": "5302:47:5"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:5",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 833,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 833,
												"src": "5651:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 833,
												"src": "5669:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:5"
									},
									"src": "5616:68:5"
								},
								{
									"documentation": {
										"id": 834,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:5",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 838,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "5898:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 835,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:5"
									},
									"src": "5869:47:5"
								},
								{
									"documentation": {
										"id": 839,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:5",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 843,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "6153:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 840,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:5"
									},
									"src": "6124:47:5"
								},
								{
									"documentation": {
										"id": 844,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:5",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 850,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "6494:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 845,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "6513:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 847,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:5"
									},
									"src": "6462:73:5"
								}
							],
							"scope": 852,
							"src": "4430:2107:5",
							"usedErrors": [
								816,
								821,
								826,
								833,
								838,
								843,
								850
							],
							"usedEvents": []
						}
					],
					"src": "112:6425:5"
				},
				"id": 5
			}
		}
	}
}